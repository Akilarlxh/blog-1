<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>浅谈什么是好软件（1）</title>
    <link href="/2020/07/25/%E6%B5%85%E8%B0%88%E4%BB%80%E4%B9%88%E6%98%AF%E5%A5%BD%E8%BD%AF%E4%BB%B6%EF%BC%881%EF%BC%89/"/>
    <url>/2020/07/25/%E6%B5%85%E8%B0%88%E4%BB%80%E4%B9%88%E6%98%AF%E5%A5%BD%E8%BD%AF%E4%BB%B6%EF%BC%881%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p><strong>本序列持续更新</strong></p><p>先不说什么，就先放两张图片，这两张看了之后我当时就沉默了：</p><img src="https://img.cyfan.top/pic/Prog/1.jpg" srcset="/img/loading.gif" class="full-image" alt="1"><img src="https://img.cyfan.top/pic/Prog/2.jpg" srcset="/img/loading.gif" class="full-image" alt="2"><p>看完了吗？</p><p>接下来，我就只有一句话来总结我认为好的软件：将自己该做的事情做到最好，永远不做那些与名字不相符的事情,要用的时候及时跳出来,不用的时候永远静静待着。</p><p>拒绝All in one,只做该做的!</p><p>以下内容全部是个人观点，部分内容并非中立，更有内容关于破解，请不要将其扭曲，更不要将此作为借口挑起吵架，谢谢！</p><h1 id="压缩软件"><a href="#压缩软件" class="headerlink" title="压缩软件"></a>压缩软件</h1><h2 id="Bandizip"><a href="#Bandizip" class="headerlink" title="Bandizip"></a>Bandizip</h2><p>这个软件真的是将压缩做到极致了，网上很多人都在推荐它，不得不说真的很好，UI和内核做到了压缩软件的标杆，唯一有个问题最近升级到最高版本时发现个人版会添加广告，企业版要付费。感觉和WinRAR混到一块去了，真的不敢相信如此好的一款压缩软件竟然混成这样，在此真的不建议使用BandiZip。</p><blockquote><p>全新许可证系统<br>与以前的版本相比，Bandizip 7.0 在许可证和分发方面有所变化。</p><ul><li>Bandizip 7.0 版本历史 </li><li>Bandizip 许可证政策 </li><li>Bandizip 版本对比 </li><li>购买 Bandzip </li><li>Bandizip 最终用户许可协议  </li></ul><p>…<br>许可类型: 含有广告的软件（免费） / 商业软件<br>…</p></blockquote><h2 id="HaoZip-好压"><a href="#HaoZip-好压" class="headerlink" title="HaoZip 好压"></a>HaoZip 好压</h2><p>是的，今天的重点是它。</p><p>你可能会说我在打广告，2345怎么差的一款软件怎么可能排到好软件？？？？</p><p>我承认我有打广告的嫌疑，但我不承认我在打广告,请客官仔细观看。</p><p>是的，刚开始我也不信。</p><p>直到有一天手贱把电脑显卡驱动安坏了，回厂重修，厂方把C盘格式化重装系统后多了好几个2345软件，我直接卸载了，不过只留下了Haozip和看图王。</p><p>两个都有广告，但对于我来说阉割掉广告插件并不难，顺手阉掉之后，发现用户体验大大提升了不少，完全可以与BandiZip媲美。</p><p><span class="heimu" title="啊，你说什么？(・∀・(・∀・(・∀・\*)">在阉割过后</span>使用HaoZip后发现UI和性能并不必BandiZip差，基本上支持全部压缩格式,除了不能在RAR内直接添加文件,其它真的可以称上全格式了。</p><p>真的，作为一款压缩软件，撇去广告插件不看，HaoZip真的是2345旗下做的唯二两款像软件的东西了。</p><p>接下来谈谈怎么阉割。</p><h3 id="阉割："><a href="#阉割：" class="headerlink" title="阉割："></a>阉割：</h3><p>实际上所有广告软件无非也就这几样：伪装成服务而启动的广告，双进程保护广告进程，计划任务的广告程序，使用更新程序的广告软件，伪装成后台的收集用户隐私的进程。</p><p>相对来说，Haozip是2345旗下流氓程度真的不算高的软件，也没有改主页，也没有后台木马,也就简单的广告弹窗。相对于快压巧压,真的很好了有木有!<br><span class="heimu" title="啊，你说什么？(・∀・(・∀・(・∀・\*)">一刀剁下去,保证变得老老实实</span><br>以下在Win10 64位下运行：</p><ol><li>前往 [<a href="http://haozip.2345.cc]" target="_blank" rel="noopener">http://haozip.2345.cc]</a> 下载最新版好压</li><li>直接安装,取消安装推荐软件,取消安装后自动启动.</li><li>请不要直接打开!</li><li>右键桌面上的HoaZip图标,打开文件所在位置,开始阉割</li></ol><p>这是文件夹概况:</p><p><img src="https://img.cyfan.top/pic/Prog/3.jpg" srcset="/img/loading.gif" alt="图片"></p><ol start="5"><li><p>删除文件夹下的 </p><ul><li><code>HaoZipHomePage.exe</code> 这是主页导航(压缩软件为什么要修改导航?)</li><li><code>HaoZipUpdate.exe</code> 这是更新软件,有可能会注入流氓(压缩软件不必频繁更新)</li><li><code>Haozip_2345Upgrade.exe</code> 这是更新(压缩软件为什么要两个更新软件?)</li><li><code>Haozip_2345Upgrade.dll</code> 这是更新注入(压缩软件为什么要更新注入?)</li></ul></li><li><p>进入服务,停止2345好压核心服务\2345安全中心(压缩软件为什么要开服务?)</p></li><li><p>打开注册表编辑器<code>regedit.exe</code>,依次进入: <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services</code>,往下翻,删除带有<code>HaoZipsvc</code>或<code>2345Haozip</code>字样的项目(由于更新了,不知道具体是哪个项目)</p></li><li><p>回到好压文件夹,进入 <code>\Protect\</code> 文件夹，删除：</p><ul><li><code>HaozipMiniPage.exe</code> 这是热点资讯(压缩软件为什么要开热点资讯?)</li><li><code>HaozipSvc.exe</code> 这是好压服务(压缩软件为什么要开服务?)</li><li><code>HaozipSvc.dll</code> 这是好压服务注入(压缩软件为什么要开服务注入?)</li><li><code>Helper_Haozip.exe</code> 这是好压卸载时极力挽留的重装程序</li><li><code>ServiceManager.exe</code> 暂时没有搞清楚,不过用到了UAC,可疑,删除后不影响压缩服务</li></ul></li><li><p>一个有趣的程序:<code>Tool_Uninstall.exe</code>,在卸载好压时,如果选择不卸载但关闭广告,这个软件就会运行,但并没有真正删除广告程序,而是暂时禁用,过一段时间后又解除禁止,继续弹广告.这个exe可以不删,当然删不删都无所谓.</p></li><li><p>打开计算机管理,打开计划任务程序,删除带有Haozip字样的条目(这一步可做可不做,目的是删除冗余条目)</p></li><li><p>回到好压文件夹,进入 <code>\Tool\</code> 文件夹，删除：</p><ul><li><code>Haozip_2345DLAgent.exe</code> 这是下载器</li><li><code>Update_Haozip.exe</code> 这是第三个更新程序(压缩软件为什么要三个更新软件?)</li></ul></li><li><p>此时启动好压,选择右上角下拉菜单,点击更新选项卡,勾选手动更新.一个被阉割后老老实实的压缩软件就好了.</p></li></ol><p>问题:</p><ul><li>第五步提示删除失败: 可能是在安装后打开了2345Haozip,任务管理器关闭程序,服务关闭HaoZipsvc,用UAC打开注册表编辑器</li><li>第六步提示已在好压安全中心打开,删除失败:重做6、7两步，用任务管理器关闭Haozip以及附属所有进程。</li></ul><p>可以打开体验一下了,可以选择绑定默认压缩,因为它已经被阉割干净了.</p><p><img src="https://img.cyfan.top/pic/Prog/4.jpg" srcset="/img/loading.gif" alt="图片"></p><p>个人认为2345还是在这款软件上用心了,其实UI做的挺好的,用户体验真的很不错,解压速度其实也不差,还附带了一些对于压缩功能来说很有用的小工具,比如哈希校验,压缩包内重命名  <del>当然是对于阉割版而言</del></p><p><del>其实有些软件如果不加上广告而改为捐助,其实可以获利更多的,是眼前的利益污浊了它们的眼睛</del></p><h2 id="7-Zip"><a href="#7-Zip" class="headerlink" title="7-Zip"></a>7-Zip</h2><p><span class="heimu" title="你知道的太多了">喂喂喂,这篇文章不是讲阉割的,而是讲好软件的.</span></p><p>7-Zip是一款完全免费而且开源的压缩软件，相比其他软件有更高的压缩比而且相对于WinRAR不会消耗大量资源。</p><p>7-Zip真的是一款很古老的软件,很多国产压缩都用了它的内核,包括HaoZip.</p><p>完全没广告,完全免费,完全开源,但是时代变迁,现在它真的不太适合作为主流压缩软件了</p><p>当然，希望追求轻巧的我不介意下载。</p><p>下载地址:  [<a href="https://www.7-zip.org]" target="_blank" rel="noopener">https://www.7-zip.org]</a></p><h2 id="WinRAR"><a href="#WinRAR" class="headerlink" title="WinRAR"></a>WinRAR</h2><p>作为一款压缩软件的经典,它的坠落真的很让我心疼.</p><p>无论是中国代理版还是国际版,打开就是广告弹窗,标题栏的个人免费版及其刺眼,古老的界面很难让人提起喜欢,200元/套的界面让人感觉怎么不去抢钱.</p><p>讲真,小时候就一直陪伴我的WinRAR,经常就能在里面解压出很多好看的动画片,当时是真的免费,完全没广告,也没有所谓的个人企业版,长大后回头重看,却惨不忍睹.</p><p>我认为WinRAR凭借样貌和名气继续盈利真的很匪夷所思了,在此真的对WinRAR的堕落感到惋惜.</p><p>我不知道它是不是和Flash一样遭到了破解的威胁,但是我对比了一下国际版和中文版,发现其实都是差不多的.</p><p>沉默….</p><h1 id="视频播放器"><a href="#视频播放器" class="headerlink" title="视频播放器"></a>视频播放器</h1><p>讲真,千万不要使用爱奇艺万能播放器一类的,因为它支持的文件越多,更加说明它的解包文件越大!</p><p>国内播放器绝大多数都不推荐,因为它们很多多是One in all!在播放视频时频繁更新，推荐对你来说毫无用处的热点新闻。</p><h2 id="PotPlaer"><a href="#PotPlaer" class="headerlink" title="PotPlaer"></a>PotPlaer</h2><p>据说是KMPlayer工程师跳槽…</p><p>这个风格我很喜欢,功能说实话真的很强大,虽然并没有成为我的主流播放器,但是我挺推荐!</p><p>官网: [<a href="https://potplayer.daum.net/?lang=zh_CN]" target="_blank" rel="noopener">https://potplayer.daum.net/?lang=zh_CN]</a></p><p>鬼知道这个网站被Q了…这个比较意外.</p><p>完全没广告,完全免费.</p><h2 id="KLC-Media-Player"><a href="#KLC-Media-Player" class="headerlink" title="KLC Media Player"></a>KLC Media Player</h2><p>不知道你看到哪个路障时是什么想法?</p><p>对于这个软件,我真的只有一个字:强!</p><p>全格式支持,因为它是格式播放器,并没有对于一种后缀就是一种编码器,直接靠格式,对于蛋疼的qlv爱奇艺垄断的视频也能播放.</p><p>地址: [<a href="https://www.videolan.org/vlc/]" target="_blank" rel="noopener">https://www.videolan.org/vlc/]</a><br><img src="https://images.videolan.org/vlc/screenshots/1.0.0/fitted_vlc_101_w7_2.jpg" srcset="/img/loading.gif" alt="pic"></p><p>完全没广告,完全免费.对了,官方网上有捐助按钮5欧元,有兴趣去按一下?</p><h2 id="迅雷影音"><a href="#迅雷影音" class="headerlink" title="迅雷影音"></a>迅雷影音</h2><p>安装后直接把文件夹里面的<code>XMP.exe</code>剪切出来,再卸载,直接使用XMP.exe就成了.</p><p>虽然不是格式播放器,不过支持种子云播还行,用户体验因为有热点推荐大大降低,只能说还行.</p><h2 id="Format-player"><a href="#Format-player" class="headerlink" title="Format player"></a>Format player</h2><p>真正的格式播放器,是格式工厂自带的 <del>(丑婊脸)</del></p><p>这个真的是万能的,不过我暂时没有提取出独立版本,不过作为日常播放还行…</p><h1 id="音乐播放器"><a href="#音乐播放器" class="headerlink" title="音乐播放器:"></a>音乐播放器:</h1><p>如果你没有网上搜索音乐的需要,那么 <code>MusicPlayer2</code> 绝对适合你!</p><p>说一句你可能不相信的话,一个博客都用免费域名的抠门博主,给这个免费软件捐了2元.</p><p>没有别的原因,直接上截图!</p><img src="https://img.cyfan.top/pic/Prog/5.jpg" srcset="/img/loading.gif" class="full-image" alt="强力替换小娜"><p>(请无视右边的仪表盘,那个是MusicPlayer2作者zhongyang219开发的TrafficMonitor,有兴趣的请移步至Github)</p><p><img src="https://img.cyfan.top/pic/Prog/6.jpg" srcset="/img/loading.gif" alt="图片" title="主界面"><br><img src="https://img.cyfan.top/pic/Prog/7.jpg" srcset="/img/loading.gif" alt="图片" title="支持匹配歌词"><br><img src="https://img.cyfan.top/pic/Prog/8.jpg" srcset="/img/loading.gif" alt="图片" title="支持匹配封面"><br><img src="https://img.cyfan.top/pic/Prog/9.gif" srcset="/img/loading.gif" alt="图片" title="播放"></p><p>(电脑不太好,录制出现了严重的掉帧)</p><p>套用官方的介绍:</p><blockquote><p>这是一款可以播放常见音频格式的音频播放器。支持歌词显示、歌词卡拉OK样式显示、歌词在线下载、歌词编辑、歌曲标签识别、Win10小娜搜索显示歌词、频谱分析、音效设置、任务栏缩略图按钮、主题颜色等功能。 播放内核为BASS音频库(V2.4)。</p></blockquote><p>现在,我可以自信的说,这里没有一句是假的!</p><p>而且没有广告,完全免费,界面良心,就连Issues里都是一篇点赞.</p><p>因为本身并不包含音乐下载功能,只有网易提供的API来封面和歌词下载,完全不必担心版权问题.</p><p>另外夸一句:这个图标做的不错:</p><p><img src="https://img.cyfan.top/pic/Prog/10.jpg" srcset="/img/loading.gif" alt="图片" title="图标"></p><p>下载地址: [<a href="https://github.com/zhongyang219/MusicPlayer2/releases]" target="_blank" rel="noopener">https://github.com/zhongyang219/MusicPlayer2/releases]</a></p><h1 id="后记"><a href="#后记" class="headerlink" title="后记:"></a>后记:</h1><p>这个专栏会一直持续下去,但更新频率可能没那么高,那么,下次再会!</p>]]></content>
    
    
    <categories>
      
      <category>繡软件</category>
      
    </categories>
    
    
    <tags>
      
      <tag>软件</tag>
      
      <tag>优良</tag>
      
      <tag>压缩软件</tag>
      
      <tag>阉割</tag>
      
      <tag>流氓</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>白嫖！10GB免流海外BackBlaze对象存储【可套CDN】</title>
    <link href="/2020/07/09/free-10GB-oss-poweredby-backblaze/"/>
    <url>/2020/07/09/free-10GB-oss-poweredby-backblaze/</url>
    
    <content type="html"><![CDATA[<p>腾讯云的COS就是个暗坑，进去的时候大肆宣扬用户前六个月免费，但实际上免费仅针对于存储于国内的bucket，而存储于国外的阶梯定价又极不合理，我的COS在一个月走了流量1.6GB。按照官方定价</p><p><img src="https://img.cyfan.top/pic/postpic/2020-07-09%20094557.jpg" srcset="/img/loading.gif" alt></p><p><img src="https://img.cyfan.top/pic/postpic/2020-07-09%20094840.jpg" srcset="/img/loading.gif" alt></p><p>大概就是0.7左右。</p><p>但是，腾讯云从来就是不满1GB按1GB计算的jier，我瞟了一下账单：</p><p><img src="https://img.cyfan.top/pic/postpic/2020-07-09%20095520.jpg" srcset="/img/loading.gif" alt></p><p>不是吧啊Sir，一个月一块多，那我为什么要用你的东西啊<img src="https://img.cyfan.top/pic/moji/%E5%90%90.png" srcset="/img/loading.gif" alt>！</p><p>很难让人理解，我CDN设置为一个月的超长缓存，但腾讯还是给我计价1GB，和回源没什么区别。</p><p>后来F12看了一下，腾讯悄悄地在header里添加max-cache为43200s，12个小时强制清除缓存。Asir，赚钱不带这么玩吧。<img src="https://img.cyfan.top/pic/moji/%E4%B8%AD%E6%9E%AA.png" srcset="/img/loading.gif" alt></p><p>最让我憋屈的是，<code>cyfan.top</code> 是没有备案的，使用国内的bucket就不给绑定域名，害的我只能用香港，但是香港的绑定域名是不给SSL的，偏要套一层CDN才行。可***腾讯云默认CDN是亚马逊的，速度渣的很，用来用去还是用回CloudFlare。可是，既然有CloudFlare，那我为什么不用免费的Github服务啊！<img src="https://img.cyfan.top/pic/moji/%E5%93%AD%E6%B3%A3.png" srcset="/img/loading.gif" alt></p><p>这就是逼着我要换一个图床啊么<img src="https://img.cyfan.top/pic/moji/qgbf.png" srcset="/img/loading.gif" alt>。</p><p>后来twitter上有人发推推荐 <code>backblaze</code> 的海外存储，使用了一下，发现完全满足需求。<img src="https://img.cyfan.top/pic/moji/stick_27.png" srcset="/img/loading.gif" alt></p><h1 id="Backblaze"><a href="#Backblaze" class="headerlink" title="Backblaze"></a>Backblaze</h1><p>2015年9月，Backblaze推出了新产品B2 Cloud Storage。作为基础架构即服务（IaaS），它的目标是软件集成（尽管也提供Web前端和API）。它直接与类似服务Amazon S3，Microsoft Azure和Google Cloud竞争。在2018年4月，Backblaze宣布了云计算合作伙伴关系，它将直接将Backblaze的数据中心与其合作伙伴Packet和ServerCentral连接起来，为存储在B2 Cloud Storage中的数据提供高性能的云计算，而无需支付任何费用。</p><p>B2 Cloud Storage非常客气，有以下优点：</p><ul><li>用户永久免费<strong>10GB</strong>直链存储</li><li>每天<strong>1GB</strong>下行流量</li><li>无限量的上传流量</li><li>每天下载请求<strong>2500</strong>次免费</li><li>每天上传请求<strong>2500</strong>次免费</li><li>基于CloudFlareCDN</li></ul><p>而且超出免费额度的价钱也十分合理【不过我不会往里头冲一分钱的！】 <img src="https://img.cyfan.top/pic/postpic/2020-07-09%20100931.jpg" srcset="/img/loading.gif" alt="https://img.cyfan.top/pic/postpic/2020-07-09%20100931.jpg"></p><p>然而我偶然得知，Backblaze加入了CloudFlare的 <a href="https://www.cloudflare.com/bandwidth-alliance/" target="_blank" rel="noopener">带宽联盟（ Bandwidth Alliance）</a> Backblaze与CloudFlare之间的流量直接免费，也就是每天<strong>无限量</strong>下行流量，配上CloudFlare超长缓存，每天下载请求无限次免费。<img src="https://img.cyfan.top/pic/moji/%E5%BE%97%E6%84%8F.png" srcset="/img/loading.gif" alt></p><p>而且这样与我用COS的速度是差不多的，那我何必用付费的COS呢？</p><h1 id="注册："><a href="#注册：" class="headerlink" title="注册："></a>注册：</h1><p>去<a href="https://www.backblaze.com/zh_CN/cloud-storage.html" target="_blank" rel="noopener">B2 云存储</a>注册，可以用Google快捷登录：</p><p><img src="https://img.cyfan.top/pic/postpic/2020-07-09%20101845.jpg" srcset="/img/loading.gif" alt></p><p>注册之后可能会要求你绑定手机号，乖乖的绑定自己的中国手机号吧【可能会产生短信费用，大概0.1￥】，不要想什么歪门邪道<br>，毕竟很多公开的手机号是不能用的，而且GoogleVoice也被拒绝了。</p><p>新建一个桶，设置为公开：</p><p>上传一个文件，点击右边的信息按钮，我们要在这里获取一些信息：</p><p><img src="https://img.cyfan.top/pic/postpic/2020-07-09%20102255.jpg" srcset="/img/loading.gif" alt></p><p><img src="https://img.cyfan.top/pic/postpic/2020-07-09%20102940.jpg" srcset="/img/loading.gif" alt></p><p>看到那个友好链接吗，这就是CloudFlare加速的链接，但这个不是我们想要的链接，我们要自定义域名，毕竟默认的加速相当蛋疼。</p><h1 id="自定义域名"><a href="#自定义域名" class="headerlink" title="自定义域名"></a>自定义域名</h1><p>这一步需要你有个域名，开个子域给图床：</p><p>由于我是bnxb接入的CloudFlare，所以我首先要去 <code>cdn.bnxb.com</code> ，将 <code>assets.cyfan.top</code> 指向 <code>f000.backblazeb2.com</code> 【每个人都可能不一样，自己看情况】，并开启CDN，然后在DNSPOD里CNAME负载均衡一下，这里就不放图了。<img src="https://img.cyfan.top/pic/moji/%E6%9C%9F%E5%BE%85.png" srcset="/img/loading.gif" alt></p><h1 id="缩短链接"><a href="#缩短链接" class="headerlink" title="缩短链接"></a>缩短链接</h1><p>默认即使绑定域名后，链接大概是这样滴：</p><div class="hljs"><pre><code class="hljs undefined">https:<span class="hljs-regexp">//</span>assets.cyfan.top<span class="hljs-regexp">/file/</span>CYF-PicBed<span class="hljs-regexp">/pic/</span>postpic<span class="hljs-regexp">/2020-07-09%20102255.jpg</span></code></pre></div><p>可以看到,中间多了 <code>/file/CYF-PicBed/</code> ,这并不是我所需要的,所以我们要把它变成这样:</p><div class="hljs"><pre><code class="hljs undefined">https:<span class="hljs-regexp">//img</span>.cyfan.top<span class="hljs-regexp">/pic/</span>postpic<span class="hljs-regexp">/2020-07-09%20102255.jpg</span></code></pre></div><p>你要知道，我有一大堆图片都是直接以 <code>https://img.cyfan.top/pic/</code> 存在底下的，NotePad++可以批量改，但是我在外链也放了很多啊.所以只能改域名。<img src="https://img.cyfan.top/pic/moji/%E5%90%90%E8%A1%80%E5%80%92%E5%9C%B0.png" srcset="/img/loading.gif" alt></p><p>前往CloudFlare,设置页面规则,进行301转发:</p><p><img src="https://img.cyfan.top/pic/postpic/2020-07-09%20103634.jpg" srcset="/img/loading.gif" alt></p><p>其中 <code>$1</code> 是CloudFlare的匹配符号，此规则意思是将所有的 <code>https://assets.cyfan.top/file/CYF-PicBed/*</code> 跳转向 <code>https://img.cyfan.top/*</code> </p><p>去 <code>cdn.bnxb.com</code> ，将 <code>img.cyfan.top</code> 指向 任意一ip,比如 <code>1.0.0.1</code> 并开启CDN，然后在DNSPOD里CNAME。</p><p>此后,所有访问图片都会在里头跳转一下,外面基本看不出来有什么差别.</p><p><img src="https://img.cyfan.top/pic/postpic/2020-07-09%20104238.jpg" srcset="/img/loading.gif" alt></p><h1 id="开启CORS-加长缓存时间"><a href="#开启CORS-加长缓存时间" class="headerlink" title="开启CORS|加长缓存时间"></a>开启CORS|加长缓存时间</h1><p>就这样结束了么？没有，你会发现访问的链接里所有的资源都是MISS，这是因为Backblaze默认不缓存<img src="https://img.cyfan.top/pic/moji/stick_65.png" srcset="/img/loading.gif" alt>。</p><p>所以，自己设置呗！</p><p>点击桶，进入桶设定：</p><p><img src="https://img.cyfan.top/pic/postpic/2020-07-09%20104802.jpg" srcset="/img/loading.gif" alt></p><p>里头写上:</p><div class="hljs"><pre><code class="hljs undefined">&#123;<span class="hljs-attr">"cache-control"</span>:<span class="hljs-string">"max-age=43200000"</span>&#125;</code></pre></div><p>这个意思是强制缓存 <code>43200000</code> ,大约是50天.然而这里注意一下，时间太长有个问题，你修改一张图片，外面可以能要50天才能更改，这样只能通过手动清除缓存做到了。</p><p>点击CORS设置,选择:</p><div class="hljs"><pre><code class="hljs undefined">与所有HTTPS来源共享此存储桶中的所有内容。</code></pre></div><p>即可.</p><h1 id="实测"><a href="#实测" class="headerlink" title="实测"></a>实测</h1><p><img src="https://img.cyfan.top/pic/postpic/2020-07-09%20105402.jpg" srcset="/img/loading.gif" alt></p><p>免费额度基本用不完.</p><p>可惜PicGo没有支持Backblaze，我只能通过网页端上传<img src="https://img.cyfan.top/pic/moji/%E8%A3%85%E5%A4%A7%E6%AC%BE.png" srcset="/img/loading.gif" alt>。</p><p>然而有一件事情非常蛋疼，你丫的根目录上传的时候是不会创建文件夹的，一次上传会把文件夹里的图片全部上传到根目录。所以，我只能手动创建文件夹，这个痛苦我真的是，<img src="https://img.cyfan.top/pic/moji/tx.png" srcset="/img/loading.gif" alt>。</p><p>嗯，用了一个晚上，感觉还是挺香的，鹅厂的COS收费确实不合理，也要学学外面人家收费啊！</p><hr><p>溜了溜了，作业还没写完呢<img src="https://img.cyfan.top/pic/moji/%E9%82%AA%E9%AD%85%E4%B8%80%E7%AC%91.jpg" srcset="/img/loading.gif" alt></p>]]></content>
    
    
    <categories>
      
      <category>爱分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>图床</tag>
      
      <tag>COS</tag>
      
      <tag>对象存储</tag>
      
      <tag>免流</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>怎么才能让GoogleAdsense不拖慢速度</title>
    <link href="/2020/07/06/LazyLoad-GoogleAdsense/"/>
    <url>/2020/07/06/LazyLoad-GoogleAdsense/</url>
    
    <content type="html"><![CDATA[<p>GoogleAdsense嘛，著名的赚钱大师，<span class="heimu">虽然只给我40美分，但毕竟我没有做很好的优化嘛，这也不怪谷歌</span>。由于以前用的是 <code>.ga</code> 的免费域名,在上一年将近4个月荒凉,基本日PV在没有和1之间徘徊.后来过年的时候买了一个 <code>.top</code> 总算撑起一层牌面,但是由于 <code>COVID19</code> ,嗯,所以每次提交2星期就给我来这么一出:</p><p><img src="https://img.cyfan.top/pic/postpic/20200706143949.jpg" srcset="/img/loading.gif" alt></p><p>嗯,<img src="https://img.cyfan.top/pic/moji/%E5%8F%A3%E5%90%90%E8%8A%B3%E8%A8%80.jpg" srcset="/img/loading.gif" alt></p><p>后来呢,六月初提交了一次,结果显示,到第13天,百度统计才接收到来自台湾的Google流量,一天之后审核完毕.</p><p>真的懒啊， <img src="https://img.cyfan.top/pic/moji/stick_60.png" srcset="/img/loading.gif" alt></p><p>然而呢，GoogleAdsense也是著名的拖慢加载速度的JS。一年前的GoogleAdsense的js获取是链接美国，谷歌嘛，连不上也是正常的，现在基本解析都是上海和北京的谷翔，速度还行，但是加载广告的速度依旧难以忍受【实际也就6s的速度】。</p><p>欸，博客快满一周年了，当时建站的时候根本不管速度如何，能加载就成，不像现在，为了几百毫秒的事情纠结。<img src="https://img.cyfan.top/pic/moji/%E5%B0%8F%E7%9C%BC%E7%9D%9B.png" srcset="/img/loading.gif" alt></p><h1 id="GoogleAdsense在后台偷偷加载的事情："><a href="#GoogleAdsense在后台偷偷加载的事情：" class="headerlink" title="GoogleAdsense在后台偷偷加载的事情："></a>GoogleAdsense在后台偷偷加载的事情：</h1><p><img src="https://img.cyfan.top/pic/postpic/20200706154324.png" srcset="/img/loading.gif" alt></p><p>可以看到，一个1.1kb的网页（上面的文字是通过js自动生成的），谷歌广告加载，需要将近10s加载完毕，加载大小将近1.5MB。</p><p>最夸张的是，我是通过海外代理访问的，如果放在大陆打开，这甚至好几次加载失败。</p><p>虽然谷歌拥有所谓的【异步加载】，可仍然会严重拖慢速度,并且，当用户没有打算看广告时，广告仍然会加载：</p><p><img src="https://img.cyfan.top/pic/postpic/20200706154831.gif" srcset="/img/loading.gif" alt></p><p>简单统计了一下，我打开网页用了1s，剩下9s我的浏览器上方一直在转【表示加载】，这种情况非常的讽刺，因为谷歌在PageSpeedLight中口口声声说需要降低js的渲染速度和外部链接加载。</p><p>实际上呢，刚刚的广告，谷歌向服务器发送了57次请求，其中26次js加载，总渲染达到3.87秒，接着是图片，总共将近9个，总大小1.4MB。</p><p>这种地步，已经让我无法忍耐了，可以想象，在打开博客，最开始跳出来的不是博文的内容，而是毫不相关的广告，这种情况，访客好感度能好才怪呢。<img src="https://img.cyfan.top/pic/moji/%E5%86%85%E4%BC%A4.png" srcset="/img/loading.gif" alt></p><p>那么，怎么解决？</p><h1 id="万物皆可懒加载！"><a href="#万物皆可懒加载！" class="headerlink" title="万物皆可懒加载！"></a>万物皆可懒加载！</h1><p><img src="https://img.cyfan.top/pic/postpic/20200706155515.gif" srcset="/img/loading.gif" alt></p><p>访客在上方浏览时，广告不加载，直到划到最底下，广告才开始加载，这样大大提升好感【虽然总加载速度和时间还是这个样，但是在访客看来就很舒服】</p><p>应该给广告挑个好位置，那么在哪里最好呢？就我个人而言，我最希望看完博文和评论之后，在移动鼠标到下一篇的间隙稍微看看别的东西。就比如说那种3.3￥/月的主机广告我就忍不住想点一下【当然，发布者是不能点击自己的广告的】。那么，我就可以把广告代码扔在Valine评论框以下即可。</p><p>我们可以顺手拿一个谷歌广告实例开刀,我的博客广告单元是这样的;</p><div class="hljs"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">async</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">ins</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"adsbygoogle"</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"display:block"</span> <span class="hljs-attr">data-ad-client</span>=<span class="hljs-string">"ca-pub-1878991317600808"</span> <span class="hljs-attr">data-ad-slot</span>=<span class="hljs-string">"6517667779"</span> <span class="hljs-attr">data-ad-format</span>=<span class="hljs-string">"auto"</span> <span class="hljs-attr">data-full-width-responsive</span>=<span class="hljs-string">"true"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ins</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">     (adsbygoogle = <span class="hljs-built_in">window</span>.adsbygoogle || []).push(&#123;&#125;);</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre></div><p>可以看到 <code>https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js</code> 即核心js,那么我们只要把这个js压住懒加载,直到划到底下才显示即可</p><p>那么问题来了,怎么压?</p><p>答: <code>window.addEventListener</code></p><div class="hljs"><pre><code class="hljs undefined"> <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span>&gt;</span><span class="javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">downloadJSAtOnload</span>(<span class="hljs-params"></span>) </span>&#123;<span class="hljs-keyword">var</span> element = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">"script"</span>);element.src = <span class="hljs-string">"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"</span>;<span class="hljs-built_in">document</span>.body.appendChild(element);&#125;<span class="hljs-keyword">if</span> (<span class="hljs-built_in">window</span>.addEventListener)<span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">"load"</span>, downloadJSAtOnload, <span class="hljs-literal">false</span>);<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">window</span>.attachEvent)<span class="hljs-built_in">window</span>.attachEvent(<span class="hljs-string">"onload"</span>, downloadJSAtOnload);<span class="hljs-keyword">else</span> <span class="hljs-built_in">window</span>.onload = downloadJSAtOnload;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre></div><p>所以,简单的就这么做:</p><p>修改  <code>Valine.ejs</code> ，末端填上</p><div class="hljs"><pre><code class="hljs html"> <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span>&gt;</span><span class="javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">downloadJSAtOnload</span>(<span class="hljs-params"></span>) </span>&#123;<span class="hljs-keyword">var</span> element = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">"script"</span>);element.src = <span class="hljs-string">"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"</span>;<span class="hljs-built_in">document</span>.body.appendChild(element);&#125;<span class="hljs-keyword">if</span> (<span class="hljs-built_in">window</span>.addEventListener)<span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">"load"</span>, downloadJSAtOnload, <span class="hljs-literal">false</span>);<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">window</span>.attachEvent)<span class="hljs-built_in">window</span>.attachEvent(<span class="hljs-string">"onload"</span>, downloadJSAtOnload);<span class="hljs-keyword">else</span> <span class="hljs-built_in">window</span>.onload = downloadJSAtOnload;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-comment">&lt;!-- ADs-in-Blog-Under-Valine --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">ins</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"adsbygoogle"</span>     <span class="hljs-attr">style</span>=<span class="hljs-string">"display:block"</span>     <span class="hljs-attr">data-ad-client</span>=<span class="hljs-string">"ca-pub-1878991317600808"</span>     <span class="hljs-attr">data-ad-slot</span>=<span class="hljs-string">"6517667779"</span>     <span class="hljs-attr">data-ad-format</span>=<span class="hljs-string">"auto"</span>     <span class="hljs-attr">data-full-width-responsive</span>=<span class="hljs-string">"true"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ins</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">     (adsbygoogle = <span class="hljs-built_in">window</span>.adsbygoogle || []).push(&#123;&#125;);</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre></div><p><img src="https://img.cyfan.top/pic/postpic/20200706163849.gif" srcset="/img/loading.gif" alt></p><p>就比如现在这样【诶呀，顺手捞一把嘛】</p> <script type="text/javascript">function downloadJSAtOnload() {var element = document.createElement("script");element.src = "https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js";document.body.appendChild(element);}if (window.addEventListener)window.addEventListener("load", downloadJSAtOnload, false);else if (window.attachEvent)window.attachEvent("onload", downloadJSAtOnload);else window.onload = downloadJSAtOnload;</script><!-- ADs-in-Blog-Under-Valine --><p><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-1878991317600808" data-ad-slot="6517667779" data-ad-format="auto" data-full-width-responsive="true"></ins></p><script>     (adsbygoogle = window.adsbygoogle || []).push({});</script><hr><blockquote><p>好了,我相信很多营销号【如果有】，绝对会把我上面的文章直接抄走。嗯，我非常讨厌营销号，对的，我在这里提前鄙视你们。以下是我关于这件事情的很多想法，如果你就是想简单优化，这就足够了，如果你有兴趣了解，你可以继续：</p></blockquote><h1 id="关于更多的优化"><a href="#关于更多的优化" class="headerlink" title="关于更多的优化"></a>关于更多的优化</h1><p>谷歌论坛上有人提到过，懒加载谷歌广告是否合规，标题是这样的：<strong>Lazy Load Adsense fine with the policies?</strong></p><p><a href="https://support.google.com/adsense/thread/31438569?hl=en" target="_blank" rel="noopener">原文</a>如下：</p><div class="hljs"><pre><code class="hljs undefined">Many have already been asked, but unfortunately they have <span class="hljs-keyword">not</span> received an answer. :-(I like <span class="hljs-keyword">to</span> optimize site speed <span class="hljs-keyword">in</span> the browser, <span class="hljs-keyword">not</span> AMP.My questions are:- <span class="hljs-keyword">Is</span> lazy load <span class="hljs-keyword">for</span> ads below the fold usefull?- <span class="hljs-keyword">Is</span> it fine <span class="hljs-keyword">with</span> the policies? I<span class="hljs-symbol">'ve</span> seen some pieces <span class="hljs-keyword">of</span> code <span class="hljs-keyword">to</span> implement it (https://css-tricks.com/lazy-loading-responsive-adsense-ads/, https://betterstudio.com/blog/lazy-load-google-adsense-wordpress/, https://gulshankumar.net/setup-lazy-loading-google-adsense-ad-<span class="hljs-keyword">units</span>/). Are such examples allowed code <span class="hljs-keyword">to</span> implement AdSense lazy loading?Thanks!</code></pre></div><p>噫,好,又是<del>生肉</del>.</p><p>简单的说,这位用户的担忧确实很值得思考,确实,AMP对于我来说就是个鸡肋，尤其是想我一样面向中国大陆访客，<strong>AMP需要你能访问国外谷歌</strong>。担忧的理由也写的很清楚，一是能不能起作用，二是违不违反政策。</p><p>可惜，所谓的QuickResponse依旧很答非所问，印证了用户的 <strong>Many have already been asked, but unfortunately they have not received an answer</strong></p><p>嗯， <strong>it makes sense NOT to have lazy loading on them</strong> 、 <strong>There is no “yes” or “no” answer to this in the policies</strong> ，用户问有没有违反，可你只能回答【没有确切答案？】、【不需要懒加载？】</p><p>这谷歌客服<span class="heimu">一事无成</span>，像极了我的人生</p><p>不过说回来，有一件事情确实意思：</p><div class="hljs"><pre><code class="hljs undefined">As such, it could be argued that behaviour draws attention <span class="hljs-keyword">to</span> those elements. Drawing attention <span class="hljs-keyword">to</span> ads is a<span class="hljs-built_in"> policy </span>violation.所以，这可以说这种行为吸引了人们对这些要素变化的关注。请注意这种吸引用户关注行为是违反政策。</code></pre></div><p>所以，这就解释了我为何不用 <code>onscroll</code> 和 <code>IntersectionObserver API</code> ,<br>而采用不那么灵敏的 <code>window.addEventListener</code> 。</p><p>实际上，在刚刚的论坛问答里，提到了很多的lazyload方法，以 [<a href="https://css-tricks.com/lazy-loading-responsive-adsense-ads/]" target="_blank" rel="noopener">https://css-tricks.com/lazy-loading-responsive-adsense-ads/]</a> 这篇文章为例子:</p><p><img src="https://img.cyfan.top/pic/postpic/20200706163646.gif" srcset="/img/loading.gif" alt></p><p>这种方法在谷歌广告商增加一个遮罩层,加载网页时先加载遮罩,广告不加载;当滚动完成时,遮罩层消失,加载广告.可惜，此方法已失效，加载的时候谷歌检测到有遮罩层就会拒绝加载。</p><p>无论怎么说，懒加载广告，速度<del>咻</del>一下上去了，口袋里零花钱也多了。钱速双收，何为不乐乎？</p><p>最后，我瞟了一眼，看到了广告：</p><p><img src="https://img.cyfan.top/pic/postpic/20200706164523.jpg" srcset="/img/loading.gif" alt></p><p>阿里支付宝什么时候沦落到要打广告了？</p>]]></content>
    
    
    <categories>
      
      <category>好方法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>LazyLoad</tag>
      
      <tag>Google</tag>
      
      <tag>Adsense</tag>
      
      <tag>赚钱</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>利用Travis-CI实现在线更新Hexo</title>
    <link href="/2020/06/29/Up-Blog-By-Travis-ci/"/>
    <url>/2020/06/29/Up-Blog-By-Travis-ci/</url>
    
    <content type="html"><![CDATA[<p>Hexo作为静态博客，好处相当明显，开销少，并且对于那种DDosS和CC套上CDN毅然不动。当然，最蛋疼的莫过于更新了，每次在自己电脑上辛辛苦苦码好字，一个push，hexo绿色光芒在命令提示符上闪烁着光芒，突然发现把仓库名字 <code>ChenYFan</code> 打成 <code>CehnYFan</code> <span class="heimu">真实事件</span> ，异或着是用手机查看自己的博客，突然发现：</p><p><img src="https://img.cyfan.top/pic/postpic/20200629135012.jpg" srcset="/img/loading.gif" alt></p><p><img src="https://img.cyfan.top/pic/moji/stick_7.png" srcset="/img/loading.gif" alt></p><p>由于hexo基于nodejs+git，手机无法更新；同时如果换了台电脑，hexo就要重装。这种事情hexo用户应该体会得到，我也就不多说了。<img src="https://img.cyfan.top/pic/moji/%E4%B8%AD%E5%88%80.png" srcset="/img/loading.gif" alt></p><p>那么，hexo用户如何进行在线更新呢？</p><p>正常来讲，<strong>服务器法</strong> 最直接，但也是最没用的。用服务器就意味着丧失了hexo的最优点-节省开支。当然，Hexo+Nginx+HexoAdmin确实可以实现很棒的书写环境，但是与其这么麻烦你还不如直接用Typecho&amp;Wordpress呢。<img src="https://img.cyfan.top/pic/moji/%E4%B8%8D%E9%AB%98%E5%85%B4.png" srcset="/img/loading.gif" alt></p><p>曾经在 <a href="https://hexo.io" target="_blank" rel="noopener">Hexo官方</a> 上看过 <a href="https://hexo.io/zh-cn/docs/github-pages" target="_blank" rel="noopener">利用Travis-ci自动部署GithubPages</a> 不过我一看到这么多步骤直接 <del><strong>萎缩</strong></del> <img src="https://img.cyfan.top/pic/moji/%E6%8A%95%E9%99%8D.png" srcset="/img/loading.gif" alt> </p><p><img src="https://img.cyfan.top/pic/postpic/20200629140241.jpg" srcset="/img/loading.gif" alt></p><p>后来,促使我改变主意的,是我得知中考之后放假三天接着上课[高中],我***,然后突然想起来博客不方便更新,接着手一抖,把博客的Repo删掉了.</p><p>…</p><p>既然删了，那么就这么干吧。</p><p>其实后来发现这并不困难，只是我刚开始想多了而已。</p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><blockquote><p>Travis CI是在软件开发领域中的一个在线的，分布式的持续集成服务，用来构建及测试在GitHub托管的代码。这个软件的代码同时也是开源的，可以在GitHub上下载到，</p></blockquote><p>实际上你会发现，当你把博客Push到Github上时，你的计算机会在NodeJS环境下生成静态文件，然后push到Github。这些步骤其实完全可以用Travis CI做到。</p><p>最好在 <code>source</code> 下新建一个 <code>CNAME</code> 文件,并将绑定的域名写进去,不然直接在 <code>gh-page</code> 分支里弄Travis-ci会覆盖掉的.</p><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><h2 id="本地搭建环境"><a href="#本地搭建环境" class="headerlink" title="本地搭建环境"></a>本地搭建环境</h2><p>这一步必不可少，额具体方法网上一搜一大堆，这里就不说了。请注意，最好事先选好主题和插件，配置完成后自己测试一下。完毕后进入下一步。这里不在演示了【毕竟搭建环境与此博文几乎无关】</p><h2 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h2><p>默认情况下，直接在hexo博客根目录上链接repo上传，不会把 <code>node_modules/</code> 上传上去，因为 <code>.gitignore</code> 中包含这么一行：</p><p><img src="https://img.cyfan.top/pic/postpic/20200629140732.jpg" srcset="/img/loading.gif" alt></p><p>但是当时以为我拓展是不能上传的，于是手一滑，删掉那一行，上传上去了。</p><p>结果后来发现这就是个错误的选择。</p><ol><li><p><code>node_modules/</code> 中，文件比较小</p></li><li><p><code>node_modules/</code> 中，文件比较多</p></li></ol><p>所以：</p><ol start="3"><li><code>node_modules/</code> 中，文件比较碎</li></ol><p>嗯，<img src="https://img.cyfan.top/pic/moji/stick_38.png" srcset="/img/loading.gif" alt></p><p><img src="https://img.cyfan.top/pic/postpic/20200629141017.jpg" srcset="/img/loading.gif" alt></p><p>我 <code>git add .</code> 了一下,它运算了半小时, <code>git commit</code> 又花了半小时,幸好<code>git push</code> 是打包上去的,不然我估计又要花半个小时.</p><p><img src="https://img.cyfan.top/pic/postpic/20200629141259.jpg" srcset="/img/loading.gif" alt></p><p>结果戏剧性的是,当我去看travis-ci部署记录时,我发现:</p><p><img src="https://img.cyfan.top/pic/postpic/20200629141542.jpg" srcset="/img/loading.gif" alt></p><p><img src="https://img.cyfan.top/pic/moji/tx.png" srcset="/img/loading.gif" alt></p><blockquote><p>所以,还没用Travis-ci的同学,请不要手贱删掉 <code>.gitignore</code> 中的 <code>node_modules/</code></p></blockquote><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><blockquote><p>这里暂时不说私有怎么部署,这里讲的是PublicRepo.</p></blockquote><h3 id="1-注册travis-ci-org"><a href="#1-注册travis-ci-org" class="headerlink" title="1.注册travis-ci.org"></a>1.注册travis-ci.org</h3><p>前往 [<a href="https://travis-ci.org]" target="_blank" rel="noopener">https://travis-ci.org]</a> 用Github账号注册 <strong>注意了啊,注意了啊,</strong> 是 <code>.org</code> 而不是 <code>.com</code> ! 鬼知道我在这上面浪费了多少时间! <code>travis-ci.org</code> 是免费给公开repo部署的,<code>travis-ci.com</code> 是收费的,但是 <code>travis-ci.com</code> 却是可以绑定并免费部署公开Repo的.最有问题的是这两个网站其中一个绑定repo后,另一个就不能绑定了!! 害得我以为是缓存搞出来的事,搞了半天没解决,一看地址栏人都傻了.<img src="https://img.cyfan.top/pic/moji/tx.png" srcset="/img/loading.gif" alt></p><h3 id="2-绑定travis"><a href="#2-绑定travis" class="headerlink" title="2.绑定travis"></a>2.绑定travis</h3><p> 前往 [<a href="https://github.com/marketplace/travis-ci]" target="_blank" rel="noopener">https://github.com/marketplace/travis-ci]</a> 绑定travis-ci到你的github后 继续前往 <a href="https://github.com/settings/installations" target="_blank" rel="noopener">GitHub 的 Applications settings</a> ,点击 <code>Travis CI</code>配置你的repo能被TravisCI访问 </p><p><img src="https://img.cyfan.top/pic/postpic/20200629142607.jpg" srcset="/img/loading.gif" alt></p><h3 id="3-新建Token"><a href="#3-新建Token" class="headerlink" title="3.新建Token"></a>3.新建Token</h3><p>前往 GitHub <a href="https://github.com/settings/tokens" target="_blank" rel="noopener">新建 Personal Access Token</a> </p><p>新建一个Token:</p><p><img src="https://img.cyfan.top/pic/postpic/20200629142812.jpg" srcset="/img/loading.gif" alt></p><p>然而请注意,官方文档里说只需勾选 <code>repo</code> 全部权限即可,但是据我测试,<strong>只勾选则会导致401验证错误</strong>.似乎还要勾选 <code>read:public_key</code> 和 <code>read:user</code> ,当然如果你足够懒,你也可以全勾上, <strong>但请不要把Token泄露出去</strong>,否则你的Github就不太好使了.</p><p>点击生成Token：</p><p><img src="https://img.cyfan.top/pic/postpic/20200629143305.jpg" srcset="/img/loading.gif" alt></p><p>记得复制下来保存！不然下次你就看不到你的Token了！</p><h3 id="4-修改Repo"><a href="#4-修改Repo" class="headerlink" title="4.修改Repo"></a>4.修改Repo</h3><p>进入Repo的 <strong>Master</strong> 分支，新建一个 <code>.travis.yml</code> ，里面塞上：</p><div class="hljs"><pre><code class="hljs yml"><span class="hljs-attr">sudo:</span> <span class="hljs-literal">false</span><span class="hljs-attr">language:</span> <span class="hljs-string">node_js</span><span class="hljs-attr">node_js:</span><span class="hljs-bullet">  -</span> <span class="hljs-number">10</span> <span class="hljs-comment"># use nodejs v10 LTS</span><span class="hljs-attr">cache:</span> <span class="hljs-string">npm</span><span class="hljs-attr">branches:</span><span class="hljs-attr">  only:</span><span class="hljs-bullet">    -</span> <span class="hljs-string">master</span> <span class="hljs-comment"># build master branch only</span><span class="hljs-attr">script:</span><span class="hljs-bullet">  -</span> <span class="hljs-string">hexo</span> <span class="hljs-string">generate</span> <span class="hljs-comment"># generate static files</span><span class="hljs-attr">deploy:</span><span class="hljs-attr">  provider:</span> <span class="hljs-string">pages</span><span class="hljs-attr">  skip-cleanup:</span> <span class="hljs-literal">true</span><span class="hljs-attr">  github-token:</span> <span class="hljs-string">$GH_TOKEN</span><span class="hljs-attr">  keep-history:</span> <span class="hljs-literal">true</span><span class="hljs-attr">  on:</span><span class="hljs-attr">    branch:</span> <span class="hljs-string">master</span><span class="hljs-attr">  local-dir:</span> <span class="hljs-string">public</span></code></pre></div><p>对,改都不要改,就这么塞进去.</p><h3 id="5-Token导入Travis-ci"><a href="#5-Token导入Travis-ci" class="headerlink" title="5.Token导入Travis-ci"></a>5.Token导入Travis-ci</h3><p>Token很重要,你必须要告诉Travis-ci,因为它要获取对你的repo的写入权,但你也不能明文写在Repo里面,因为别人看得到.</p><p>所以,在 [### 4.修改Repo] 中,<code>github-token:</code> 后面跟着的不是明文,而是变量  <code>$GH_TOKEN</code>.</p><p>进入 [<a href="https://travis-ci.org/github/{用户名}/{仓库名}/settings]" target="_blank" rel="noopener">https://travis-ci.org/github/{用户名}/{仓库名}/settings]</a> 中,看到 <strong>Environment Variables</strong> ,Name选择 <code>GH_TOKEN</code> ,Value把[### 3.新建Token] 中的Token粘贴到里面去.BRANCH直接默认.</p><p><strong>特别注意!,将后面DISPLAY VALUE IN BUILD LOG弄成灰色,不然你的Token将会公开!</strong>,如果你不慎公开Token,请前往GithubPersonalToken删除并重新生成一个Token!</p><p>最终应该是这样子的:</p><p><img src="https://img.cyfan.top/pic/postpic/20200629145235.jpg" srcset="/img/loading.gif" alt></p><p>在日志里面,搜索Token,应该是这样子的:</p><div class="hljs"><pre><code class="hljs undefined">$ <span class="hljs-builtin-name">export</span> GH_TOKEN=[secure]</code></pre></div><h3 id="6-打开触发器"><a href="#6-打开触发器" class="headerlink" title="6.打开触发器"></a>6.打开触发器</h3><p>前往 <a href="https://travis-ci.org/account/repositories" target="_blank" rel="noopener">https://travis-ci.org/account/repositories</a>,打开目标Repo后面的按钮:</p><p><img src="https://img.cyfan.top/pic/postpic/20200629145630.jpg" srcset="/img/loading.gif" alt></p><h3 id="7-触发Travis-ci"><a href="#7-触发Travis-ci" class="headerlink" title="7.触发Travis-ci"></a>7.触发Travis-ci</h3><p>修改文件或新建Readme,让Travis-ci触发并开始工作.</p><p>比如说我更新 <code>留言板.md</code> ,Github上一更新,Travis-ci自动开始工作:</p><p><img src="https://img.cyfan.top/pic/postpic/20200629150414.jpg" srcset="/img/loading.gif" alt></p><p><img src="https://img.cyfan.top/pic/postpic/20200629150525.jpg" srcset="/img/loading.gif" alt></p><p><img src="https://img.cyfan.top/pic/postpic/20200629150600.jpg" srcset="/img/loading.gif" alt="麻烦无视右上角的亮度调节"></p><p><img src="https://img.cyfan.top/pic/postpic/20200629152935.jpg" srcset="/img/loading.gif" alt></p><p>本次日志地址 [<a href="https://api.travis-ci.org/v3/job/703061869/log.txt]" target="_blank" rel="noopener">https://api.travis-ci.org/v3/job/703061869/log.txt]</a></p><h3 id="8-以后"><a href="#8-以后" class="headerlink" title="8.以后"></a>8.以后</h3><p>更新博客直接在Github上更改，或者写好之后直接上传，或者pull到本地写好后push到Github，此后操作用户无需本地使用Hexo，也不用调整Travis-ci，安心写博客吧！</p><h1 id="草稿问题"><a href="#草稿问题" class="headerlink" title="草稿问题"></a>草稿问题</h1><p>其实这个比较简单，在修改时新建一个branch，名字叫 <code>drafts</code> ,由于 <code>.travis.yml</code> 规定只捕获 <code>master</code> ,草稿分支不会触发，修改的时候全部在drafts上修改，修改好了直接PullRequest，完事！</p><p>*<em>这么干以后,一定要注意,以后所有修改无论大小,都必须先在  <code>drafts</code> 里修改,然后发起PR,然后合并.不然直接在 <code>master</code> 里修改有可能会导致无法合并! *</em></p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>总之，这样就可以安心用手机或者在学校更新Blog了！</p><p><img src="https://img.cyfan.top/pic/moji/stick_54.png" srcset="/img/loading.gif" alt></p>]]></content>
    
    
    <categories>
      
      <category>好方法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Travis-CI</tag>
      
      <tag>在线更新</tag>
      
      <tag>奇淫巧计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>通过CloudFlareAPI获取用户侧信息</title>
    <link href="/2020/06/28/GetUserInfo-ByCFAPI/"/>
    <url>/2020/06/28/GetUserInfo-ByCFAPI/</url>
    
    <content type="html"><![CDATA[<p>噫，中考结束了，心中一块大石头总算碎了。虽然说考上提前批中考考不考无所谓，但是回去一次模拟考直接把我考傻了，太烂了<img src="https://img.cyfan.top/pic/moji/%E8%82%BF%E5%8C%85.png" srcset="/img/loading.gif" alt>,以前初一不学习的时候都没有这么烂。啊么学习两星期，中考一考，今年理科超级简单，欸，这样理科分数拉不开了，啧啧啧，理科生的末日。</p><p>因为人大多数时间在学校，不太方便用自带hexopush到Github，一是博客文件同步不方便，二是如果有个小错误就很抓狂，所以呢，以前的打算是部署到vps，通过hexo+nginx实现访问，不过可能是人比较傻，一直没搞好，而且这种免费小鸡说炸就炸，不保险，还是跟着<a href="https://hexo.io/zh-cn/docs/github-pages" target="_blank" rel="noopener">hexo官方文档</a> 用Travis-ci+Github实现在线自动部署,以后更新也方便点<img src="https://img.cyfan.top/pic/moji/%E5%9D%90%E7%AD%89.png" srcset="/img/loading.gif" alt></p><p>好了好了，不说了，今天简单讲一下如何用CloudFlare自带的API获取用户信息。</p><h1 id="cdn-cgi-trace"><a href="#cdn-cgi-trace" class="headerlink" title="/cdn-cgi/trace"></a>/cdn-cgi/trace</h1><p>刚开始建立博客的时候，也是想过显示用户ip地址的，但网上的教程大多都是用搜狐新浪的js，而且很早就过期了。所以也就搁着迟迟没有解决。</p><p>后来偶然间知道CloudFlare有个比较神奇的技术，在部署在CloudFlare上的网站，域名后面加上<code>/cdn-cgi/trace</code>就可以获得用户侧信息，例如<code>https://blog.cyfan.top/cdn-cgi/trace</code>：</p><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-attr">fl</span>=<span class="hljs-number">23</span>f2**<span class="hljs-attr">h</span>=blog.cyfan.top<span class="hljs-attr">ip</span>=<span class="hljs-number">39.182</span>.***.***<span class="hljs-attr">ts</span>=<span class="hljs-number">15933078</span>**.***<span class="hljs-attr">visit_scheme</span>=https<span class="hljs-attr">uag</span>=Mozilla/<span class="hljs-number">5.0</span> (Windows NT <span class="hljs-number">10.0</span><span class="hljs-comment">; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36</span><span class="hljs-attr">colo</span>=HKG<span class="hljs-attr">http</span>=http/<span class="hljs-number">2</span><span class="hljs-attr">loc</span>=CN<span class="hljs-attr">tls</span>=TLSv1.<span class="hljs-number">3</span><span class="hljs-attr">sni</span>=plaintext<span class="hljs-attr">warp</span>=<span class="hljs-literal">off</span></code></pre></div><p>[对于部分隐私替换掉，请见谅]</p><p>差不多都全了，<code>ip</code>、<code>uag</code>、<code>colo</code>、<code>loc</code>、<code>tls</code>这些数据都是我们所需要的，那么，怎么把这些数据迁移到网页上呢？</p><h1 id="答案是：JavaScript"><a href="#答案是：JavaScript" class="headerlink" title="答案是：JavaScript"></a>答案是：JavaScript</h1><p>首先要引入Jquery，如果你的网页上已经有Jquery，那么就不必再次引入：</p><div class="hljs"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://cdn.jsdelivr.net/npm/jquery@3.2.1/dist/jquery.min.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre></div><p>接着加入JS[需在Jquery以下,否则会报错]:</p><div class="hljs"><pre><code class="hljs js">&lt;script&gt;getCDNinfo = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;$.ajax(&#123;<span class="hljs-attr">url</span>: <span class="hljs-string">"https://cdn.cyfan.top/cdn-cgi/trace"</span>,<span class="hljs-attr">success</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">data, status</span>) </span>&#123;<span class="hljs-keyword">let</span> areas = <span class="hljs-string">"Antananarivo, Madagascar - (TNR);Cape Town, South Africa - (CPT);Casablanca, Morocco - (CMN);Dar Es Salaam, Tanzania - (DAR);Djibouti City, Djibouti - (JIB);Durban, South Africa - (DUR);Johannesburg, South Africa - (JNB);Kigali, Rwanda - (KGL);Lagos, Nigeria - (LOS);Luanda, Angola - (LAD);Maputo, MZ - (MPM);Mombasa, Kenya - (MBA);Port Louis, Mauritius - (MRU);Réunion, France - (RUN);Bangalore, India - (BLR);Bangkok, Thailand - (BKK);Bandar Seri Begawan, Brunei - (BWN);Cebu, Philippines - (CEB);Chengdu, China - (CTU);Chennai, India - (MAA);Chittagong, Bangladesh - (CGP);Chongqing, China - (CKG);Colombo, Sri Lanka - (CMB);Dhaka, Bangladesh - (DAC);Dongguan, China - (SZX);Foshan, China - (FUO);Fuzhou, China - (FOC);Guangzhou, China - (CAN);Hangzhou, China - (HGH);Hanoi, Vietnam - (HAN);Hengyang, China - (HNY);Ho Chi Minh City, Vietnam - (SGN);Hong Kong - (HKG);Hyderabad, India - (HYD);Islamabad, Pakistan - (ISB);Jakarta, Indonesia - (CGK);Jinan, China - (TNA);Karachi, Pakistan - (KHI);Kathmandu, Nepal - (KTM);Kolkata, India - (CCU);Kuala Lumpur, Malaysia - (KUL);Lahore, Pakistan - (LHE);Langfang, China - (NAY);Luoyang, China - (LYA);Macau - (MFM);Malé, Maldives - (MLE);Manila, Philippines - (MNL);Mumbai, India - (BOM);Nagpur, India - (NAG);Nanning, China - (NNG);New Delhi, India - (DEL);Osaka, Japan - (KIX);Phnom Penh, Cambodia - (PNH);Qingdao, China - (TAO);Seoul, South Korea - (ICN);Shanghai, China - (SHA);Shenyang, China - (SHE);Shijiazhuang, China - (SJW);Singapore, Singapore - (SIN);Suzhou, China - (SZV);Taipei - (TPE);Thimphu, Bhutan - (PBH);Tianjin, China - (TSN);Tokyo, Japan - (NRT);Ulaanbaatar, Mongolia - (ULN);Vientiane, Laos - (VTE);Wuhan, China - (WUH);Wuxi, China - (WUX);Xi'an, China - (XIY);Yerevan, Armenia - (EVN);Zhengzhou, China - (CGO);Zuzhou, China - (CSX);Amsterdam, Netherlands - (AMS);Athens, Greece - (ATH);Barcelona, Spain - (BCN);Belgrade, Serbia - (BEG);Berlin, Germany - (TXL);Brussels, Belgium - (BRU);Bucharest, Romania - (OTP);Budapest, Hungary - (BUD);Chișinău, Moldova - (KIV);Copenhagen, Denmark - (CPH);Cork, Ireland -  (ORK);Dublin, Ireland - (DUB);Düsseldorf, Germany - (DUS);Edinburgh, United Kingdom - (EDI);Frankfurt, Germany - (FRA);Geneva, Switzerland - (GVA);Gothenburg, Sweden - (GOT);Hamburg, Germany - (HAM);Helsinki, Finland - (HEL);Istanbul, Turkey - (IST);Kyiv, Ukraine - (KBP);Lisbon, Portugal - (LIS);London, United Kingdom - (LHR);Luxembourg City, Luxembourg - (LUX);Madrid, Spain - (MAD);Manchester, United Kingdom - (MAN);Marseille, France - (MRS);Milan, Italy - (MXP);Moscow, Russia - (DME);Munich, Germany - (MUC);Nicosia, Cyprus - (LCA);Oslo, Norway - (OSL);Paris, France - (CDG);Prague, Czech Republic - (PRG);Reykjavík, Iceland - (KEF);Riga, Latvia - (RIX);Rome, Italy - (FCO);Saint Petersburg, Russia - (LED);Sofia, Bulgaria - (SOF);Stockholm, Sweden - (ARN);Tallinn, Estonia - (TLL);Thessaloniki, Greece - (SKG);Vienna, Austria - (VIE);Vilnius, Lithuania - (VNO);Warsaw, Poland - (WAW);Zagreb, Croatia - (ZAG);Zürich, Switzerland - (ZRH);Arica, Chile - (ARI);Asunción, Paraguay - (ASU);Bogotá, Colombia - (BOG);Buenos Aires, Argentina - (EZE);Curitiba, Brazil - (CWB);Fortaleza, Brazil - (FOR);Guatemala City, Guatemala - (GUA);Lima, Peru - (LIM);Medellín, Colombia - (MDE);Panama City, Panama - (PTY);Porto Alegre, Brazil - (POA);Quito, Ecuador - (UIO);Rio de Janeiro, Brazil - (GIG);São Paulo, Brazil - (GRU);Santiago, Chile - (SCL);Willemstad, Curaçao - (CUR);St. George's, Grenada - (GND);Amman, Jordan - (AMM);Baghdad, Iraq - (BGW);Baku, Azerbaijan - (GYD);Beirut, Lebanon - (BEY);Doha, Qatar - (DOH);Dubai, United Arab Emirates - (DXB);Kuwait City, Kuwait - (KWI);Manama, Bahrain - (BAH);Muscat, Oman - (MCT);Ramallah - (ZDM);Riyadh, Saudi Arabia - (RUH);Tel Aviv, Israel - (TLV);Ashburn, VA, United States - (IAD);Atlanta, GA, United States - (ATL);Boston, MA, United States - (BOS);Buffalo, NY, United States - (BUF);Calgary, AB, Canada - (YYC);Charlotte, NC, United States - (CLT);Chicago, IL, United States - (ORD);Columbus, OH, United States - (CMH);Dallas, TX, United States - (DFW);Denver, CO, United States - (DEN);Detroit, MI, United States - (DTW);Honolulu, HI, United States - (HNL);Houston, TX, United States - (IAH);Indianapolis, IN, United States - (IND);Jacksonville, FL, United States - (JAX);Kansas City, MO, United States - (MCI);Las Vegas, NV, United States - (LAS);Los Angeles, CA, United States - (LAX);McAllen, TX, United States - (MFE);Memphis, TN, United States - (MEM);Mexico City, Mexico - (MEX);Miami, FL, United States - (MIA);Minneapolis, MN, United States - (MSP);Montgomery, AL, United States - (MGM);Montréal, QC, Canada - (YUL);Nashville, TN, United States - (BNA);Newark, NJ, United States - (EWR);Norfolk, VA, United States - (ORF);Omaha, NE, United States - (OMA);Philadelphia, United States - (PHL);Phoenix, AZ, United States - (PHX);Pittsburgh, PA, United States - (PIT);Port-Au-Prince, Haiti - (PAP);Portland, OR, United States - (PDX);Queretaro, MX, Mexico - (QRO);Richmond, Virginia - (RIC);Sacramento, CA, United States - (SMF);Salt Lake City, UT, United States - (SLC);San Diego, CA, United States - (SAN);San Jose, CA, United States - (SJC);Saskatoon, SK, Canada - (YXE);Seattle, WA, United States - (SEA);St. Louis, MO, United States - (STL);Tampa, FL, United States - (TPA);Toronto, ON, Canada - (YYZ);Vancouver, BC, Canada - (YVR);Tallahassee, FL, United States - (TLH);Winnipeg, MB, Canada - (YWG);Adelaide, SA, Australia - (ADL);Auckland, New Zealand - (AKL);Brisbane, QLD, Australia - (BNE);Melbourne, VIC, Australia - (MEL);Noumea, New caledonia - (NOU);Perth, WA, Australia - (PER);Sydney, NSW, Australia - (SYD)"</span>.split(<span class="hljs-string">";"</span>);<span class="hljs-keyword">let</span> area = data.split(<span class="hljs-string">"colo="</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">"\n"</span>)[<span class="hljs-number">0</span>];<span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; areas.length; i++) &#123;<span class="hljs-keyword">if</span> (areas[i].indexOf(area) != <span class="hljs-number">-1</span>) &#123;<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"cdn"</span>).innerHTML = areas[i];<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"ip"</span>).innerHTML = data.split(<span class="hljs-string">"ip="</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">"\n"</span>)[<span class="hljs-number">0</span>];<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"httpos"</span>).innerHTML = data.split(<span class="hljs-string">"visit_scheme="</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">"\n"</span>)[<span class="hljs-number">0</span>];<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"uag"</span>).innerHTML = data.split(<span class="hljs-string">"uag="</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">"\n"</span>)[<span class="hljs-number">0</span>];<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"http"</span>).innerHTML = data.split(<span class="hljs-string">"http="</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">"\n"</span>)[<span class="hljs-number">0</span>];<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"loc"</span>).innerHTML = data.split(<span class="hljs-string">"loc="</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">"\n"</span>)[<span class="hljs-number">0</span>];<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"tls"</span>).innerHTML = data.split(<span class="hljs-string">"tls="</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">"\n"</span>)[<span class="hljs-number">0</span>];<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"warp"</span>).innerHTML = data.split(<span class="hljs-string">"warp="</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">"\n"</span>)[<span class="hljs-number">0</span>];<span class="hljs-keyword">break</span>;&#125;&#125;&#125;&#125;)&#125;$(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;getCDNinfo();    <span class="hljs-comment">//页面加载完毕就获取CDN信息</span>&#125;);<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span></code></pre></div><p>这个脚本会获取大部分用户信息并解析所链接节点位置,默认链接到<code>cdn.cyfan.top</code>，已通过<code>CORS</code>,接着在网页需要添加的地方增加html代码:</p><div class="hljs"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>当前CDN节点: <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"cdn"</span>&gt;</span>【未知】<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">br</span>&gt;</span>你的ip: <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"ip"</span>&gt;</span>【未知】<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">br</span>&gt;</span>你当前以: <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"httpos"</span>&gt;</span>【未知】<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>形式访问我们的网站<span class="hljs-tag">&lt;/<span class="hljs-name">br</span>&gt;</span>你的User-Agent: <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"uag"</span>&gt;</span>【未知】<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">br</span>&gt;</span>你以: <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"http"</span>&gt;</span>【未知】<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>形式访问本网站<span class="hljs-tag">&lt;/<span class="hljs-name">br</span>&gt;</span>你的所在国家/地区: <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"loc"</span>&gt;</span>【未知】<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">br</span>&gt;</span>你以: <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"tls"</span>&gt;</span>【未知】<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">br</span>&gt;</span>你是否以Warp访问我们: <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"warp"</span>&gt;</span>【未知】<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></code></pre></div><p>[可以根据需要增减]，一般情况下简单获取写成这样：</p><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>当前CDN节点: <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"cdn"</span>&gt;</span>【未知】<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> |你的ip: <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"ip"</span>&gt;</span>【未知】<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> |你的所在国家/地区: <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"loc"</span>&gt;</span>【未知】 <span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></code></pre></div><p>结果应该类似这样:</p><p><img src="https://img.cyfan.top/pic/postpic/20200628094419.png" srcset="/img/loading.gif" alt></p><p>划到页底即可看到。</p><h1 id="End"><a href="#End" class="headerlink" title="End"></a>End</h1><p>OHHH，又水了一篇，下次讲讲如何部署博客到Travis-ci上。溜了溜了<img src="https://img.cyfan.top/pic/moji/yhuaji.png" srcset="/img/loading.gif" alt>。</p>]]></content>
    
    
    <categories>
      
      <category>屌代码</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CloudFlare</tag>
      
      <tag>API</tag>
      
      <tag>IP</tag>
      
      <tag>用户信息</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>博客DNS解析是不是发生了亿点点变化</title>
    <link href="/2020/06/07/Blog-sChanges/"/>
    <url>/2020/06/07/Blog-sChanges/</url>
    
    <content type="html"><![CDATA[<p>啊,还有三星期就要中考了,中考完就休息两天是想灭了我吗?博客感觉要永久性拖更了，大概也就一两个月更一篇吧。累了累了（╯︿╰）.<img src="https://img.cyfan.top/pic/moji/%E6%8A%BD%E7%83%9F.png" srcset="/img/loading.gif" alt></p><p>这个星期回来呢，博客从内部发生了一些小变化，来来来，说说这些变化：</p><p>原先接入CloudFlare的时候呢,是通过NS官方接入的,当然了,官方默认的CDN直接给我绕道大洋彼岸去了,什么CN2都没有,速度只有几十KB,后来<a href="/2020/03/11/如何不出CloudFlare随便搞一搞将托管在其上的网站速度提升20倍/">也有了自创NS官方接入加速方法</a>.走香港日本确实好了很多.</p><p>然而问题很多,比如说没有负载均衡,联通走1.0.0.*直接绕道加拿大,卡的一批,延迟甚至达到300ms.</p><p>或者说比较头疼的并发数限制,一分钟1000次直接抛异常[后来图片迁出解决了这个问题].而且反代两次流量很大。</p><p>再比如说网站域名问题也很大，我是在万网购买的，但是万网的DNS很差，后来就放在CloudFlare上，但是万网续费嫁给比腾讯贵一块钱，所以我就悄悄地迁移到腾讯上，正好赶上6|4，将近10天才迁移完毕。</p><p>所以趁迁移的机会，接入了bnxb，实现了真正的加速 <img src="https://img.cyfan.top/pic/moji/%E6%97%A0%E6%89%80%E8%B0%93.png" srcset="/img/loading.gif" alt>.</p><p>当然，负载均衡还是做得很好的，移动直接走香港，相当的快，延迟&lt;50ms:</p><p><img src="https://img.cyfan.top/pic/postpic/20200607133744.jpg" srcset="/img/loading.gif" alt></p><p><img src="https://img.cyfan.top/pic/postpic/20200607134252.png" srcset="/img/loading.gif" alt></p><p>电信走美国CN2线路和日本大阪线路,延迟压在200ms还是可以的:</p><p><img src="https://img.cyfan.top/pic/postpic/20200607134104.png" srcset="/img/loading.gif" alt></p><p><del>就NM联通离谱,就没有什么好线路链接,走香港都给我绕道新加坡.延迟高的吓人：</del></p><p><img src="https://img.cyfan.top/pic/postpic/20200607134345.png" srcset="/img/loading.gif" alt></p><p><del>这里就对联通用户说声对不起了</del></p><p>抱歉啊，这个星期刚发现 <code>104.16.246.*</code> 和 <code>104.16.245.*</code> 对联通相当好，速度500kb/s都没问题<span class="heimu">【虽然延迟还是很大】</span><br><img src="https://img.cyfan.top/pic/postpic/20200628090939.png" srcset="/img/loading.gif" alt><br><img src="https://img.cyfan.top/pic/postpic/20200628095806.png" srcset="/img/loading.gif" alt></p><p><del>真香。</del></p><p>Google评分也高了不少,电脑端评分上90了。<br><img src="https://img.cyfan.top/pic/postpic/20200628091136.png" srcset="/img/loading.gif" alt><br>当然，本站基本上都是托管于CloudFlare的，我也没这个闲工夫把每一个域名负载均衡，最简单的就是设置一个已经负载均衡的域名，然后直接CNAME，本站加速域名为 <code>cdn.cyfan.top</code> ,如果你不想自己设置10个ip负载均衡也可以选择我的,配置如下</p><p><img src="https://img.cyfan.top/pic/postpic/20200607134808.png" srcset="/img/loading.gif" alt></p><p>当然CDN我会时不时调整一下,以实现访问加速</p><p>关于图床呢,现在直接用PicGo了,上传图片粘贴复制即可,快了不少,剪贴板直接上传,可为神器一枚:</p><p><img src="https://img.cyfan.top/pic/postpic/20200607134957.png" srcset="/img/loading.gif" alt></p><p><img src="https://img.cyfan.top/pic/postpic/20200607135057.png" srcset="/img/loading.gif" alt></p><p>以及这里再问候一下腾讯云海外加速总管的祖宗，出口怎么就是Amazon了？连日本CDN海外加速节点都是200ms，你玩我呢？CDN一天收费0.5元，你是坑我呢？现在图床CDN换成CloudFlare了，速度还可以。</p><p>6|4那一天我ping了一下我的博客,延迟虽然很严重200ms,但至少还能连上???下次懒得在那一天闭站保护了.</p><p>溜了溜了,应该是中考前最后一篇水文章.</p>]]></content>
    
    
    <categories>
      
      <category>又双叒叕是水文</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CloudFlare</tag>
      
      <tag>DNS</tag>
      
      <tag>CDN</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>这一个半月，我干了什么</title>
    <link href="/2020/05/30/What-I-Do-2020-04-05/"/>
    <url>/2020/05/30/What-I-Do-2020-04-05/</url>
    
    <content type="html"><![CDATA[<p><img src="https://img.cyfan.top/pic/moji/wjlkdhxs.jpg" srcset="/img/loading.gif" alt></p><p>啊，期中考试终于考完了，现在心里想的都是司马脸，<img src="https://img.cyfan.top/pic/moji/huaji.gif" srcset="/img/loading.gif" alt></p><p>距离上一次更新已经将近1个半月了，赶在5月小尾巴发一篇博文。当然，这个月维护还是做到了，只不过太忙没更新而已。</p><p>过来扯扯这个月发生了什么。</p><h1 id="计算机方面"><a href="#计算机方面" class="headerlink" title="计算机方面"></a>计算机方面</h1><h2 id="网站方面"><a href="#网站方面" class="headerlink" title="网站方面"></a>网站方面</h2><h3 id="VPS"><a href="#VPS" class="headerlink" title="VPS"></a>VPS</h3><p>入手了一台德国VPS，还得感谢这位老兄：</p><p><a href="https://blog.qwqdanchun.cn/archives/1001" target="_blank" rel="noopener">簞純-EUserv 德国永久免费VPS申请</a></p><p>试了一下，性能略差，连IPV4都没有，就当是学习吧，现在就是拿来玩玩的，毕竟我大多数情况下基本是ServerLess。</p><p>以后打算全站迁移到一台VPS上，当然习惯用Hexo了，毕竟Hexo-Admin还是很给力的。</p><h3 id="图床："><a href="#图床：" class="headerlink" title="图床："></a>图床：</h3><p>我当场裂开。</p><p>之前全放在Github上，但是，但是这会导致多线程并发是Worker抛出异常，速度还很慢。而且很大，Github那么恐怖的大小：<img src="https://img.cyfan.top/pic/post/206.jpg" srcset="/img/loading.gif" alt></p><p>三个星期前开始迁移，刚开始采用了GoogleDrive+<br>GDIndex，上学去的时候，加载速度还不错，结果一到学校，自己打开，爆一大堆404.</p><p>Workers自然也出大问题<br><img src="https://img.cyfan.top/pic/post/pasted-205.png" srcset="/img/loading.gif" alt></p><p>后来了解到，谷歌网盘在每每输出一个文件，都会来一次销魂的杀毒，一张10kb的图片，杀毒将近10s，Worker超时30s直接返回404！！！？？？，我当时心里就开始表演天皇meta的showtime了。<img src="https://img.cyfan.top/pic/moji/%E5%96%B7%E8%A1%80.png" srcset="/img/loading.gif" alt></p><p>所以后来又采用腾讯云免费SCF额度+OneDrive那可怜的5GB制作图床，好歹也能正常加载，但是OMp的工作原理和GI不一样，GoogleDrive在国内那是不可访问的，所以最终还是采用了反向代理，但是OneDrive是可以滴，所以OMp采用的是301跳转。燃鹅，直连速度和延迟相当的感人，在多线程并发时经常超时。<img src="https://img.cyfan.top/pic/moji/tx.png" srcset="/img/loading.gif" alt></p><p>当时整个人都裂开了。</p><p>所以，最终解决办法就是，氪金！！！！！！</p><p>腾讯云COS（相当于阿里云OSS）+CDN，当然因为没备案所以放在Hongkong，但是腾讯云有个暗坑，COS绑定自定义域名<del>md</del>居然不给直接开SSL，非得要套层CDN才行，这不是明摆着坑钱么。计算下来，每天平均支出0.03￥.</p><p>肉疼。<img src="https://img.cyfan.top/pic/moji/s.png" srcset="/img/loading.gif" alt></p><p>好在腾讯COS也有客户端，上传文件至少没那么麻烦。</p><p><img src="https://img.cyfan.top/pic/post/207.jpg" srcset="/img/loading.gif" alt></p><p>不过话说回来，最近香港局势确实很不稳定，我现在根本无法直连Hongkong的COSBucket，CDN套就套吧，只不过神奇地绕道美国都是什么奇葩玩意，害得我只能A到日本，出口居然是Amazon。</p><h3 id="评论系统"><a href="#评论系统" class="headerlink" title="评论系统"></a>评论系统</h3><p>又是一个当场炸裂的东西。</p><p>Gitalk本身链接api.github.com就是一个相当蛋疼的事情。</p><p><img src="https://img.cyfan.top/pic/post/205.jpg" srcset="/img/loading.gif" alt></p><p>我也尝试着做过类似于DiqusJS的反向代理的尝试，可是到最后一步Github回调地址又给我强制跳到api.github.com，我当时人都傻了。最后实在头疼，换成了Valine。当然找了个魔改版本，看起来还不错。<del>【这一次再也不会造成30天无访问自动归档这种奇异的事情了】</del></p><p><img src="https://img.cyfan.top/pic/post/208.jpg" srcset="/img/loading.gif" alt></p><p>两个魔改后的JS地址</p><div class="hljs"><pre><code class="hljs html">https://img.cyfan.top/js/av-min.jshttps://img.cyfan.top/js/valine.min.js</code></pre></div><h2 id="编程方面"><a href="#编程方面" class="headerlink" title="编程方面"></a>编程方面</h2><p>艹，VB轮到我这一届居然不考，<img src="https://img.cyfan.top/pic/moji/qgbf.png" srcset="/img/loading.gif" alt>，害得我只能硬啃C++。考试还行，就那附加题做不出来，一道高精乘法，居然忘记了<code>strlen()</code>这个函数，当时想撞墙的心态都有了。</p><h1 id="学习方面"><a href="#学习方面" class="headerlink" title="学习方面"></a>学习方面</h1><p>考完了，我完了。</p><p>数学150分扣46分是什么鬼？？？？？？？语文五道选择题错三道又是什么鬼？？？？？？？？</p><p><span class="heimu">还好物理只扣10分，化学一分没扣，计算机也只是附加题最后一道不会写而已</span></p><p>欸欸欸欸欸欸欸，感觉我要垫底。</p><h1 id="后言"><a href="#后言" class="headerlink" title="后言"></a>后言</h1><p>好好学习，天天向上！</p><p>好了好了，继续潜水<img src="https://img.cyfan.top/pic/moji/%E6%97%A0%E5%A5%88.png" srcset="/img/loading.gif" alt></p><p>滑稽</p>]]></content>
    
    
    <categories>
      
      <category>随心记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>日常</tag>
      
      <tag>总结</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Pandownload:愿你归来仍是英雄</title>
    <link href="/2020/04/17/Pandownload-%E6%84%BF%E4%BD%A0%E5%BD%92%E6%9D%A5%E4%BB%8D%E6%98%AF%E8%8B%B1%E9%9B%84/"/>
    <url>/2020/04/17/Pandownload-%E6%84%BF%E4%BD%A0%E5%BD%92%E6%9D%A5%E4%BB%8D%E6%98%AF%E8%8B%B1%E9%9B%84/</url>
    
    <content type="html"><![CDATA[<p>PanDownload 21世纪的英雄，在几天前，死了。</p><p>4月15日下午，扬州网警巡查执法官方微博发布通报称：“Pandownload软件开发嫌疑人已经被捕。”</p><p>刘某：PanDownload有窃取用户隐私行为。</p><p>嗯，来，你的证据呢？</p><h1 id="人性的毁灭"><a href="#人性的毁灭" class="headerlink" title="人性的毁灭"></a>人性的毁灭</h1><p>百度网盘迟迟不对PanDownload限制，之前很奇怪，现在明白了，原来是等到“盈利”到30万，有了个证据，才死死咬住不放。百度阴险，由此可见。</p><p>百度网盘限速，我就只能说呵呵了，如果你杠百度网盘硬盘资源有限，那么开始你可以调小硬盘大小，尽量不限速，那还行。自己拼命张开嘴说自己吃的多，到头来发现吃不了又悄悄闭嘴，什么意思？</p><p>刘某，一个人就可以把一个开发者抓到牢里，呵，我现在相当有理由怀疑这是个幌子，百度人性，可见一斑。哦不，百度没有人性。</p><p>想当年，550KB的运用程序硬是给我弄成大文件。我？？？</p><h1 id="要推车出去的停车场"><a href="#要推车出去的停车场" class="headerlink" title="要推车出去的停车场"></a>要推车出去的停车场</h1><p>百度网盘就好比停车场吧，刚开始假惺惺说这里空间比谁都大，好吧这确实赢得了我的好感，于是我也存了很多东西上去，就好比我把很多车开进来。直到垄断了整个停车场事业。百度终于展现自己的吃相了。</p><p>开车进来？没问题！2T空间，随便你！对啊，2T空间，谁不想要呢？我也停了。附近的停车场用户太多没能力，倒闭了。</p><p>现在，当我要开车出去的时候，你突然告诉我，不能开车出去，要用手推出去，理由是出去的通道很窄？要开车要付费，几十块一个月？</p><p>PanDownload，形象点，就是把你分身成几个，一起推，现在，总算能正常出去了吧。</p><p>PanDownload窃取用户隐私？你可能没搞懂，PanDownload，作用就是把你分身（Aria2多线程下载），窃取用户隐私，我可以肯定地说，就是个幌子。幕后百度，我只能说呵呵了。</p><h1 id="漏洞百出的被捕声明"><a href="#漏洞百出的被捕声明" class="headerlink" title="漏洞百出的被捕声明"></a>漏洞百出的被捕声明</h1><p><img src="https://img.cyfan.top/pic/post/pasted-195.png" srcset="/img/loading.gif" alt="upload successful"></p><p>首先，PanDownload核心就是获取个直链，你需要反编译解剖软件结构，一盯几个小时？民警办案效率挺高的嘛。</p><p>黑客攻击计算机系统，哦，获取直链就算是黑客啦？我觉得我好屌哦。</p><p>隐私照片和文件泄露：证据呢？</p><p>以非会员权限突破百度网盘设定：你还是没脸说自己限速是吧，百度？</p><p>侵入？非法控制？：PanDownload唯一的作用就是获取直接链接（百度网盘客户端的正常操作）以及多线程下载（官方客户端没有），我用多线程就算是违法咯？</p><p>欸，行了行了，我都不想说了；</p><h1 id="未来，何去何从"><a href="#未来，何去何从" class="headerlink" title="未来，何去何从"></a>未来，何去何从</h1><p>互联网上分享个文件真的很难吗？我想，对于众多小白来说，真的，互联网分享文件确实很难。</p><p>百度一家，我已经彻底失去最后一点希望了，</p><p>贴吧的风控我也是服了，认认真真敲好的字被删除，我还不如用知乎；</p><p>搜索引擎？呵呵，营销号的风格，一目了然，国内我现在用<a href="https://magi.com" target="_blank" rel="noopener">magi</a> 一个人工智能搜索引擎，自动从网上拉取文章研究，AI把营销号和同类文章精准度真的高，而且搜索一些学习单词也很正常；或者使用DogeDoge（感觉颇似DuckDuckGo），精准的不误导不追踪；Bing，说实话不太习惯；国外的我就不必多说了；</p><p>网盘？OneDrive15GB储存个人资料不香么？普通大文件分享像我这样的穷B Workers+GoogleDrive用户体验完爆百度，为什么要百度资本？Mega还行，实际上Mega15GB也就刚好吧（那个50GB中35GB是新用户临时体验，一个月后失效）。再不济，iCloud！苹果有国内加速节点，虽然5GB真的够呛，不过同步一些个人资料还行吧？开源项目直接扔Github，反正也没多大。</p><p>所有百度，我只有用百度统计需求，原因么，Google统计国内加载真的很拖速度，迫不得已使用百度统计，虽然功能差很多，不过勉强吧；</p><p><strong>PanDownload能死而复生么？我不清楚，但是，我衷心祈愿！</strong></p><style>html{filter: grayscale(100%);-webkit-filter: grayscale(100%);-moz-filter: grayscale(100%);-ms-filter: grayscale(100%);-o-filter: grayscale(100%);filter:progid:DXImageTransform.Microsoft.BasicImage(grayscale=1);}</style>]]></content>
    
    
    <categories>
      
      <category>随心记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>百度</tag>
      
      <tag>网盘</tag>
      
      <tag>PanDownload</tag>
      
      <tag>悼文</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>IPFS+CloudFlare=ServerLessWebPage</title>
    <link href="/2020/04/07/IPFS-CloudFlare-ServerLessWebPage/"/>
    <url>/2020/04/07/IPFS-CloudFlare-ServerLessWebPage/</url>
    
    <content type="html"><![CDATA[<p>IPFS，这个2018年诞生出来的小东西，似乎掀起了一阵热潮，然后被忘性极大的互联网吃瓜群众所抛弃，但不得不说这个东西可玩度非常高。</p><h1 id="IPFS是什么"><a href="#IPFS是什么" class="headerlink" title="IPFS是什么"></a>IPFS是什么</h1><p>网上一大堆文绉绉气昂昂极富学术气息的营销号整天吹嘘着ipfs是跨时代下一时代的比特币，我只能说呵呵，真的想要了解ipfs是什么的，建议左转维基百科或百度百科。</p><p>抄一下wikipedia上的介绍：</p><blockquote><p>（InterPlanetary File System，缩写IPFS）是一个旨在创建持久且分布式存储和共享文件的网络传输协议。它是一种内容可寻址的对等超媒体分发协议。在IPFS网络中的节点将构成一个分布式文件系统。</p></blockquote><p>其实按我的话来说,ipfs就是一个神奇的东西,你放上去一个文件,就会立刻被瓜分成数个文件碎片,每一台运行着ipfs的电脑和矿机就会争先恐后来抢夺你的碎片,并且抢到的人就会获得系统的奖励,而你却一分钱也不用付出.</p><p>是不是听起来很神奇?对的,你没有付出任何东西,别人却能获得奖励,而且你既满足储存文件的需求,储存你文件的人也能得到金钱.这种机制,叫做FileCoin.</p><p>你可以把它想象成Bittorrent+BitCoin的结合物,实际上他就是这样的<img src="https://img.cyfan.top/pic/moji/huaji.png" srcset="/img/loading.gif">.当然不完全是,但核心理念就是这样的.只不过,BitCoin付出的是算力,而FileCoin付出的是硬盘.</p><p>IPFS的主要目标是取代HTTP,说是取代,那刚开始就必须兼容,所以目前ipfs可以通过官网ipfs.io获取.</p><h1 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h1><p>与bt下载类似,我们需要先介绍BT.</p><h2 id="Bittorrent：分布式哈希表技术"><a href="#Bittorrent：分布式哈希表技术" class="headerlink" title="Bittorrent：分布式哈希表技术"></a>Bittorrent：分布式哈希表技术</h2><h3 id="先来一个故事"><a href="#先来一个故事" class="headerlink" title="先来一个故事"></a>先来一个故事</h3><p>很久很久以前，有一位老头，叫做刘XX。</p><p>他是一位很有资格的老师，为了顽固学生们的学习效果，他发送给所有学生一部视频：</p><p><img src="https://img.cyfan.top/pic/BT/%E8%A7%86%E9%A2%91.bmp" srcset="/img/loading.gif" alt="图片" title="大视频"></p><p>（注：老刘的带宽是8Mbps，即最大带宽1MB/s，每一个学生的带宽也是8Mbps）</p><p>我们假设有5位学生需要这部视频，则可以画这样一幅图：</p><p><img src="https://img.cyfan.top/pic/BT/down1.png" srcset="/img/loading.gif" alt="图片" title="组团下载ing..."></p><p>这只视频是<code>88.8MB</code>大小,按照这样的速度,同学需要花费<code>1024*88.8MB/(204.8kb/s)=444s</code>即<code>7分钟24秒</code></p><p>这还往往只是最理想状况.现在,我们来假设一下现象的出现:</p><ol><li>由于视频过于好看,引起广泛关注.现在有200个同学要求下载.则单个人下载完需要17760s即296min也就是约5h!</li><li>刘老师觉得单个视频教学质量不够好,决定上传一个8880GB的超大视频.(下载时间大于一天)</li><li>几个同学与刘老师搞好了关系,刘老师给他们较高的下载速度,导致带宽分配不均匀,没有关系的学生下载速度更慢了.(百度网盘既视感)</li></ol><p><img src="https://img.cyfan.top/pic/BT/down-VIP.png" srcset="/img/loading.gif" alt="图片" title="A1拥有VIP专线"></p><ol start="4"><li>由于刘老师给的视频过于激烈,在下载了一段时间后,FBI<code>open the door!</code>敲上门来带走了刘老师,视频被查封了!!!(下载速度0)</li></ol><p><img src="https://img.cyfan.top/pic/BT/FBI.jpeg" srcset="/img/loading.gif" alt="图片" title="FBI！Open the door！"></p><p>可是，学习是必须的，这可怎么办呢？？？</p><p>这时….</p><p>刘老师突然想起来，为什么不让每一个学生互相连接，贡献自己已经下好的部分，以来获得最大的下载速度呢？？</p><p>请注意，在上述下载中，每一个人都没有充分利用自己的最大带宽，对不对？</p><p>那，解决办法就来了:</p><h3 id="P2P："><a href="#P2P：" class="headerlink" title="P2P："></a>P2P：</h3><p>以256KB为一包，我们就可获得356块文件</p><p><img src="https://img.cyfan.top/pic/BT/file.png" srcset="/img/loading.gif" alt="图片" title="分包"></p><p>回到下载界面，我们看到，所有人都与其他人获得连接，那么，连接完成后：</p><p><img src="https://img.cyfan.top/pic/BT/down-each.png" srcset="/img/loading.gif" alt="图片" title="连接"></p><p>（为了方便观察，我们将不必要的连接全部去掉）</p><p>现在，我们重新开始下载：</p><p>我们假设，A1下载了第一块，A2下载了第二块…</p><p>两秒后，所有人手上都拥有了一块文件：</p><p><img src="https://img.cyfan.top/pic/BT/down-part1.png" srcset="/img/loading.gif" alt="图片" title="下载"></p><p>接下来，在不影响下载的情况下，A1与A2交换下载好的部分，同时与A3、A4、A5交换</p><p><img src="https://img.cyfan.top/pic/BT/down-part2.png" srcset="/img/loading.gif" alt="图片" title="贡献&amp;下载"></p><p>看到了吗，所有人都得到了更高的速度，所有人的带宽都得到了最充分的利用，包括原先看起来毫无用处的上传带宽。</p><p>接着4秒后，所有的贡献分块都下载好了，而每一个人都从文件发布者身上又得到新的文件碎片。</p><p><img src="https://img.cyfan.top/pic/BT/down-part3.png" srcset="/img/loading.gif" alt="图片" title="下载！"></p><p>所以，这种情况回一直持续下去，直到每一个人都下载完成，每一个人都只需下载149秒即2分29秒！相对于单点时间大大减少！</p><p><img src="https://img.cyfan.top/pic/BT/down-finish.png" srcset="/img/loading.gif" alt="图片" title="完整！"></p><h3 id="人数多-amp-文件大-问题"><a href="#人数多-amp-文件大-问题" class="headerlink" title="人数多&amp;文件大 问题"></a>人数多&amp;文件大 问题</h3><p>现在，我们来假设第一个问题，200人下载怎么办？</p><p>我们可以明白，人数越多，文件交换越密集，对不对？</p><p>显然会见的，这个问题显得异常白痴，可以体会的是，在最佳条件下，每个人的带宽都达到了最大，如果每个人都下载了不同的分块，同时每个人都在贡献。</p><p>那么，每个人的下载速度，根本不会受到很大影响。</p><p>这对于传统下载（http/https/ftp）不同，传统下载仅仅由一台服务器贡献，人数多对于这台服务器压力极大。</p><p>但是，在这个环境里，服务器不仅仅是一台，而且，每当加入一个人，每一个人都可以当作服务器，这样，下载速度反而会大大提升。</p><p>反而文件很大是个硬梗，不过相对于传统下载，这种下载方式还是有一定能力解决这个问题的。</p><p><strong>回到这里</strong></p><h2 id="IPFS的原理"><a href="#IPFS的原理" class="headerlink" title="IPFS的原理"></a>IPFS的原理</h2><p>ipfs的世界有个东西叫做cid,大概类似于这样一串: <code>QmZCvMHrE56VqsejmG53xd9bW4RZjtFpLz46QMQjA81orL</code> ,前面的 <code>Qm</code> 是固定的,后面是SHA256密钥.cid又分为用户密钥和文件密钥,这个暂时不讨论.SHA256强度目前看来基本不会碰撞,毕竟64位十六进制的字符串,能实现16^64个文件的存储,也就是1.1579208923731619542357098500869e+77个id,有生之年能看到它碰撞也不是一件容易的事情</p><h3 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h3><p>如同BT,在短短几秒内,需要分享的文件被分块完毕,但此时,文件还是乖乖的窝在硬盘里,没有分享出去.</p><p>当有任何一个人试图获取资源时，你的ipfs会联系距离最近的节点,询问他们有没有意愿存东西.请注意此处的 <code>距离</code> ,这可不是物理距离,而是逻辑距离.</p><p>节点大都都会很高兴的同意,当然有些节点可能就是混口饭吃不想存,于是这些节点就会帮你联系离他最近的节点要不要,直到所有碎片瓜分完毕.这种算法,像极了DHT.</p><p>几分钟内,全球数个硬盘里就会出现你的文件的碎片,只要一声令下,这些文件就会调出.</p><p>此时,纵使文件发布者下线,文件照样流传.重复上传的文件,拆碎后被校验到与存在的文件相同则不会被上传.</p><p>上传完毕,文件就会拥有自己的id,也称为指纹,取回这些文件则需要id.</p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>你可以通过客户端下载,这个下载方式和btDHT其实原理是一样的;当然IPFS为了向下兼容http,自己也有网关,不过网关由于是公开的,一方面是速度,另一方面是已经引起了G||F||\/\/の注意，目前并不推荐使用网关下载，当然对于一些小文件比如网页和图片，这些都是随意的。</p><h1 id="IPFS的作用"><a href="#IPFS的作用" class="headerlink" title="IPFS的作用"></a>IPFS的作用</h1><p>与一些网盘相反，ipfs反而非常鼓励你往里面塞东西，越多越好，但是作为个人网盘并不适合，一方面ipfs的资源会随着下载的人越多，缓存的机器也会越多，速度更快，私人文件反而速度不佳；另一方面ipfs一旦上传，任何人包括你自己永远无法彻底删除这些文件，即使你在ipfs客户端删除了你分享的文件，这些文件仍然会得到传播。所以ipfs其实可以作为公开下载，甚至是图床，网页托管等等。</p><p>在中国，ipfs实际上并没有得到很大的限制，分享文件和下载文件其实很容易做到，麻烦的只是不能从ipfs网关获取罢了。</p><p>下面是我放在ipfs上的一张图片，即使我下线，这个文件依旧流传于网络之间。</p><p><img src="https://ipfs.cyfan.top/ipfs/QmU4Eh586TBCBP5KwKF3zvcXCKcnkw9wD9nKCqxTi15f4n" srcset="/img/loading.gif" alt></p><p>但是，ipfs反感在网关下载大文件，因为这样会造成不必要的带宽浪费，下载大文件请使用ipfs客户端+ipfs伴侣</p><h1 id="搭建无服务器网页"><a href="#搭建无服务器网页" class="headerlink" title="搭建无服务器网页"></a>搭建无服务器网页</h1><p>很多人网页放在Github+CloudFlare，其实换个思路，为什么不用IPFS+CloudFlare呢？</p><p>开始吧！</p><h2 id="下载ipfs"><a href="#下载ipfs" class="headerlink" title="下载ipfs"></a>下载ipfs</h2><p>官网因为自带网关已经封锁了，请自带梯子访问。</p><h2 id="写html"><a href="#写html" class="headerlink" title="写html"></a>写html</h2><p>请注意，在ipfs上写网页时，请尽量不要使用外链，对于js和css请直接写在网页中，图片请使用base64或上传至ipfs后使用相对链接。</p><h2 id="上传-1"><a href="#上传-1" class="headerlink" title="上传"></a>上传</h2><p><img src="https://img.cyfan.top/pic/post/pasted-189.png" srcset="/img/loading.gif" alt="upload successful"></p><p>点击添加按钮，上传</p><p><img src="https://img.cyfan.top/pic/post/pasted-190.png" srcset="/img/loading.gif" alt="upload successful"></p><p>接下来，重点来了！</p><p>ipfs分享文件有两种方式，是ipfs和ipns，前者采用文件hash辨别文件，文件内容一旦改变，原来的链接无法更新，链接格式为 <code>https://ipfs.io/ipfs/QmZCvMHrE56VqsejmG53xd9bW4RZjtFpLz46QMQjA81orL</code> ；后者采用用户id辨别,内容允许更新，但是用户在线时间过短会导致无法同步，并且有可能暴露用户信息，后者格式为： <code>https://ipfs.io/ipfs/QmQQKZphgJdEGhTp18NRvVdSJ3RJArRst2keKk3tZvmfPz?filename=index.html</code> .</p><p>如果你只是单个文件网页，此处比较建议使用ipfs，ipns可能离线时间过长导致无法下载。具体看个人所好。</p><p>ipfs链接获取：点击 <code>···</code> ,选择复制哈希，在前面加上网关域名即可。</p><p>ipns连接获取：点击 <code>···</code> ,选择分享，复制链接即可。</p><p>在科学上网的前提下访问 <code>https://ipfs.io/ipfs/QmZCvMHrE56VqsejmG53xd9bW4RZjtFpLz46QMQjA81orL</code> 显示目标界面</p><p><img src="https://ipfs.cyfan.top/ipfs/QmSGR6p5PxFJqQdEbDySG9QUpBx4WnQcVfxDPohgQ4pDoL" srcset="/img/loading.gif" alt></p><blockquote><p>请注意，每次上传后一定要先访问一遍资源，否则文件是不会上传到ipfs服务器的！</p></blockquote><h2 id="CloudFlare设置"><a href="#CloudFlare设置" class="headerlink" title="CloudFlare设置"></a>CloudFlare设置</h2><p><del>不知道为什么CloudFlare的ipfs服务器有点问题，使用官方说明一直爆404 page not found，官方地址在这里<a href="https://www.cloudflare.com/distributed-web-gateway/" target="_blank" rel="noopener">https://www.cloudflare.com/distributed-web-gateway/</a> 反正我是折腾失败了。<img src="https://img.cyfan.top/pic/moji/lh.jpg" srcset="/img/loading.gif"></del></p><p>↑以上为放屁，现在来讲一下怎么正确绑定：</p><h3 id="dnslink绑定"><a href="#dnslink绑定" class="headerlink" title="dnslink绑定"></a>dnslink绑定</h3><p>这个方法无论你的dns服务商在哪都能绑定，只不过不在CloudFlare托管的用户要多一步。</p><p>1.将需要绑定的域名,以CNAME形式指向 <code>www.cloudflare-ipfs.com</code> ,比如我需要让 <code>showtime.cyfan.top</code> 成为ipfs出口，则这么设置。</p><p><img src="https://img.cyfan.top/pic/post/pasted-191.png" srcset="/img/loading.gif" alt="upload successful"></p><p>2.使用txt记录绑定ipfs hash，新建txt记录，名字是 <code>_dnslink.yourwebsite</code> 一定要加上yourwebsite！比如我绑定的是 <code>showtime.cyfan.top</code> ，则名称一行填上 <code>_dnslink.showtime</code> !接着内容是 <code>dnslink=/ipfs/</code> 后面接上hash，比如showtimehtml的hash是： <code>QmWAvNck7QBhUAYAEgBFvbvvsMxDC9s55NXVJXeJTjTM1Y</code> 则大概这么填:</p><p><img src="https://img.cyfan.top/pic/post/pasted-192.png" srcset="/img/loading.gif" alt="upload successful"></p><p>3.如果你本来就是托管在CloudFlare上的,到此为止就可以了,如果不是托管在Cloudflare上,类似dnspod\alicdn之类的,那还要获取证书,进入<a href="https://www.cloudflare.com/distributed-web-gateway/" target="_blank" rel="noopener">https://www.cloudflare.com/distributed-web-gateway/</a> 拉到最底下</p><p><img src="https://img.cyfan.top/pic/post/pasted-193.png" srcset="/img/loading.gif" alt="upload successful"></p><p>输入域名，获取证书即可。</p><p><strong>但问题是，<code>www.cloudflare-ipfs.com</code> 已经被dns污染了，你用cname绑定是无法正常访问的啦！所以只能用Workers绕路啦！</strong></p><h3 id="JSProxy反代ipfs-io"><a href="#JSProxy反代ipfs-io" class="headerlink" title="JSProxy反代ipfs.io"></a>JSProxy反代ipfs.io</h3><p>老办法，Workersjsproxy反向代理ipfs网关，解决<img src="https://img.cyfan.top/pic/moji/wc.jpg" srcset="/img/loading.gif"></p><p>网址：<a href="https://showtime.cyfan.top" target="_blank" rel="noopener">https://showtime.cyfan.top</a></p><h1 id="其他的用处"><a href="#其他的用处" class="headerlink" title="其他的用处"></a>其他的用处</h1><p>我在Github上看了很多奇奇怪怪的用法，有的拿来做博客，有的拿来做网盘，有的拿来做图床，欸，真的是脑洞大开，幸好ipfs经得起折腾，越折腾他们赚的越多<img src="https://img.cyfan.top/pic/moji/huaji.png" srcset="/img/loading.gif"></p>]]></content>
    
    
    <categories>
      
      <category>爱学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CloudFlare</tag>
      
      <tag>撸羊毛</tag>
      
      <tag>IPFS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在不支持ipv6的路由器下使用ipv6</title>
    <link href="/2020/04/05/use-ipv6-in-unsv6-en/"/>
    <url>/2020/04/05/use-ipv6-in-unsv6-en/</url>
    
    <content type="html"><![CDATA[<p>从奶奶家回到城里，立刻有个问题困扰着我，我将处于没有ipv6的环境下。</p><p>拜托，都0202年了，你怎么连ipv6都没有？</p><p>因为家里情况有点小特殊，有三个路由器：</p><p><img src="https://img.cyfan.top/pic/post/pasted-127.png" srcset="/img/loading.gif" alt="upload successful"></p><p>移动路由器网关：楼下。100Mbps。通常使用LAN口直接网线插进去，一般不用无线功能，实际上老早支持ipv6了。</p><p>小米路由器：楼下。有线连接移动网关，因为支持5GHz的WiFi，所以在楼下一般手机都是接入小米路由器。</p><p>水星路由器：楼上。有线链接移动网关，不支持5GHzWiFi，不过2.4GHz一般满足日常使用，峰值可达44Mbps，对等网速4MB/s保持的住，也就不计较速度慢了。扯淡的是由于生产日期过早，居然不支持ipv6！！！</p><p>我在楼上，身边有个2008年买来的水星路由器，这个路由器通过百兆网线链接楼下的移动网关，也就是套了两层路由器。</p><p>恼火的是，由于是2008年的产物，这破玩意是不支持ipv6的。</p><p><img src="https://img.cyfan.top/pic/post/pasted-128.png" srcset="/img/loading.gif" alt="upload successful"></p><p>问题是，没有公网ipv6就意味着我的BTSYNC将处于疯狂的中继服务器，欸，不可忍耐。</p><p>以至于百度的ipv6都上不去。</p><p><img src="https://img.cyfan.top/pic/post/pasted-129.png" srcset="/img/loading.gif" alt="upload successful"></p><p>甚至连自己ipv6站点都上不去。<img src="https://img.cyfan.top/pic/moji/huaji.png" srcset="/img/loading.gif"></p><p>这谁忍得住啊。</p><h1 id="坐下来好好想想"><a href="#坐下来好好想想" class="headerlink" title="坐下来好好想想"></a>坐下来好好想想</h1><p>之前去问过姨父，姨父是个非常屌的男人。</p><p>我问：“阿姨丈（方言称呼），怎样在不支持ipv6的路由器下使用ipv6啊，把局域网下电脑做代理可以吗？”</p><p>姨父：（一脸鄙夷地瞟了我一眼）“硬件解决不了的的事情还想用软件解决？”</p><p>好，那我就用软件解决硬件解决不了的事情！</p><p>刷固件？我不知道这种行不行的通，刚才问了一下 <a href="https://winkiller.jamjams.xyz" target="_blank" rel="noopener">winkiller</a> 刷硬件的大佬,回答是应该不行.</p><p><img src="https://img.cyfan.top/pic/post/pasted-130.png" srcset="/img/loading.gif" alt="upload successful"></p><p>不行就不行吧,反正我也没指望刷硬件.</p><p>想一想,对了,父母那台电脑不是挺适合拿来做代理服务器吗?</p><p>思考一下:</p><ul><li><input checked disabled type="checkbox"> 我是笔记本,他们是台式电脑,他们电脑每天开机,早6:00到网上11:00一直开着,也就是我开机的时间他们绝对开着.</li><li><input checked disabled type="checkbox"> 父母根本就没有ipv6这个需求,他们最多上爱奇艺央视看视频,ipv4和ipv6是啥都不知道,不过那台机子ipv6常开.</li><li><input checked disabled type="checkbox"> 父母网速需求不大,我因为路由器一层限制速度最多4MB/s,而家里带宽是12.5MB/s,基本不会影响.</li><li><input checked disabled type="checkbox"> 楼下那台绝大多数情况是空闲的╮(╯▽╰)╭</li><li><input checked disabled type="checkbox"> 楼下那台为了方便我把它设置成静态ip了</li></ul><p>那就把父母那台机子做代理吧!</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>首先要思考拿什么做代理.</p><p>VPN?算了吧,配置太麻烦,还是SS好.</p><p>欸你没看错,没错,把父母电脑作为SS服务端.</p><p>查了查,有一个东西叫做<a href="https://github.com/shadowsocks/libQtShadowsocks/releases" target="_blank" rel="noopener">libQtShadowsocks</a></p><p>不过最新版本有点问题,于是我下载了1.10.0版</p><p>那就下载吧,为了防止楼下Github连不上去,我打包好了</p><p><a class="btn" href="https://drive.cyfan.top/shadowsocks-libqss-v1.10.0-win64.zip" target="_blank" rel="noopener"> &gt;&gt;去网盘下载<br>            </a></p><p>解压,我的版本里已经预置了一下内容,可以修改,如果是用原版的同学请继续.</p><p>在 <code>shadowsocks-libqss.exe</code> 同目录的文件夹下新建 <code>config.json</code> ,里面填上:</p><div class="hljs"><pre><code class="hljs json">&#123;      <span class="hljs-attr">"server"</span>:<span class="hljs-string">"0.0.0.0"</span>,      <span class="hljs-attr">"server_port"</span>:<span class="hljs-number">8023</span>,      <span class="hljs-attr">"local_address"</span>:<span class="hljs-string">"127.0.0.1"</span>,      <span class="hljs-attr">"local_port"</span>:<span class="hljs-number">1080</span>,      <span class="hljs-attr">"password"</span>:<span class="hljs-string">"password"</span>,      <span class="hljs-attr">"timeout"</span>:<span class="hljs-number">600</span>,      <span class="hljs-attr">"method"</span>:<span class="hljs-string">"aes-256-cfb"</span>,      <span class="hljs-attr">"http_proxy"</span>: <span class="hljs-literal">false</span>,      <span class="hljs-attr">"auth"</span>: <span class="hljs-literal">false</span>  &#125;</code></pre></div><ul><li><code>server</code> 表示监听的ip, <code>0.0.0.0</code> 表示监听来自局域网的ip,保持默认即可</li><li><code>server_port</code> 表示监听的端口,随意,只要不被占用即可</li><li><code>password</code> 密码</li><li><code>method</code> 加密方式.</li></ul><p>上面的配置看情况修改,我这里就这样.</p><p>运行,出现个黑色框框碍眼,还报错?</p><p><img src="https://img.cyfan.top/pic/post/pasted-132.png" srcset="/img/loading.gif" alt="upload successful"></p><p>不要紧,因为没有指定配置,在底下新建 <code>Start.vbs</code> 里面填上：</p><div class="hljs"><pre><code class="hljs vbs"><span class="hljs-keyword">Set</span> ws = <span class="hljs-built_in">CreateObject</span>(<span class="hljs-string">"Wscript.Shell"</span>)ws.run <span class="hljs-string">"shadowsocks-libqss.exe  -c config.json -S"</span>,vbhide</code></pre></div><p>双击解决,隐藏运行.</p><h2 id="开机自启"><a href="#开机自启" class="headerlink" title="开机自启"></a>开机自启</h2><p>难道每天早上我都要手动去运行?</p><p>不可能.</p><p>所以要设置开机自启动.</p><p>注册表 <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run</code>,里头新建一个字符串值,名字随意,值为vbs的绝对路径.</p><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p><img src="https://img.cyfan.top/pic/post/pasted-133.png" srcset="/img/loading.gif" alt="upload successful"></p><p>添加浏览器代理.</p><p>于是出现封面如此不可思议的景象.</p><p><img src="https://img.cyfan.top/pic/post/pasted-134.png" srcset="/img/loading.gif" alt="upload successful"></p><p><img src="https://img.cyfan.top/pic/post/pasted-188.png" srcset="/img/loading.gif" alt="upload successful"></p><p>完成!</p><h1 id="后言"><a href="#后言" class="headerlink" title="后言"></a>后言</h1><p>实际上原理是这样的:</p><p><img src="https://img.cyfan.top/pic/post/pasted-135.png" srcset="/img/loading.gif" alt="upload successful"></p><p>另外,不知道是不是楼下360杀毒的锅,http链接经常不能跳转成https,导致一些网页没办法好好运行,emmm,加个HTTPSEverywhere解决问题。</p><p><a class="btn" href="https://pan.cyfan.top/%E6%8F%92%E4%BB%B6/crx/HTTPS_Everywhere.7z" target="_blank" rel="noopener"> &gt;&gt;去私有云下载HTTPSEverywhere<br>            </a></p><p>因为代理在局域网内，速度损耗和延迟基本不计入在内，也就是全天挂在这里都没问题，想要全局笼罩建议加个Proxifier</p><p><a class="btn" href="https://drive.cyfan.top/PHPnow-1.5.6.zip" target="_blank" rel="noopener"> &gt;&gt;去网盘下载Proxifier<br>            </a></p>]]></content>
    
    
    <categories>
      
      <category>好方法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>奇淫巧技</tag>
      
      <tag>网络</tag>
      
      <tag>ipv6</tag>
      
      <tag>代理</tag>
      
      <tag>SS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>愿逝者安息，愿生者坚强</title>
    <link href="/2020/04/04/2020QM/"/>
    <url>/2020/04/04/2020QM/</url>
    
    <content type="html"><![CDATA[<p class="note note-primary">博客首页、项目首页将在2020年4月4日10：00至2020年4月5日10：00保持灰化界面，此篇博文永久保持灰化。</p><p>2020年的清明，与众不同，在我的记忆里，清明，永远是伴随着那蒙蒙小雨和四处弥漫的寒意。今天，2020年地清明，却意外的是晴天，这很令人意外，但也似乎表达了什么。</p><p>可能，老天的眼泪，早已哭干吧…</p><p>今年的清明比往年更添一抹特殊的意义</p><p>一个不明源头的病毒使本应蒙上喜庆色彩的华夏大地变得毫无生机</p><p>一群可敬可爱的人儿用自己的血肉之躯筑起了护我们平安的防线</p><p>是他们日夜坚守勇敢逆行</p><p>是他们治病救人坚守一线</p><p>的确，没有什么岁月静好，只是有人在替我们负重前行罢了。</p><p>花开疫散并非一瞬间</p><p>日夜奋战才换来一座座城市恢复脉搏</p><p>为表达全国各族人民对抗击新冠肺炎疫情斗争牺牲烈士和逝世同胞的深切哀悼，国务院昨天（4月3日）发布公告，决定2020年4月4日举行全国性哀悼活动。在此期间，全国和驻外使领馆下半旗志哀，全国停止公共娱乐活动。4月4日10时起，全国人民默哀3分钟，汽车、火车、舰船鸣笛，防空警报鸣响。</p><p>下半旗….恍惚间除了2019年7月29日就是2015年,这已经很早以前了,下半旗本是领导人死后的待遇;这些疫情战士,用生命给我们换来了一片净土,自己却没能躺回去享受,毫不客气地说,他们就是这个新时代最开始的领导人,带领我们拼过最艰难的时期,下半旗,毫不为过!</p><p>可能没有他们,中国早已生灵涂炭.</p><p>感谢你们，替我们守住了这个春天</p><p>愿逝者安息，愿生者坚强</p><p>静默,悼念.</p><style>html{filter: grayscale(100%);-webkit-filter: grayscale(100%);-moz-filter: grayscale(100%);-ms-filter: grayscale(100%);-o-filter: grayscale(100%);filter:progid:DXImageTransform.Microsoft.BasicImage(grayscale=1);}</style>]]></content>
    
    
    <categories>
      
      <category>随心记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>悼念</tag>
      
      <tag>疫情</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AV?BV!</title>
    <link href="/2020/04/02/AVorBV/"/>
    <url>/2020/04/02/AVorBV/</url>
    
    <content type="html"><![CDATA[<h1 id><a href="#" class="headerlink" title=":("></a>:(</h1><p>Bilibili在2020/3/23公布要将av号全面换成BV号：<a href="https://www.bilibili.com/read/cv5167957" target="_blank" rel="noopener">公告地址</a></p><blockquote><p>尊敬的各位用户：<br>一直以来，AV号都是B站视频稿件的重要标识，在视频的传播和分享中起到了关键作用。<br>为了保护稿件信息安全，容纳更多投稿，维护UP主的权益，自2020年3月23日起，AV号将全面升级为BV号。与纯数字的AV号不同，BV号是一段由数字和大小写字母组成的字符串，经过算法自动生成。未来将统一使用BV号作为稿件标识。<br>同时，2020年3月23日前生成AV号的相关功能保持不变。例如，已分享的稿件链接，AV号搜索，以及动态、评论、私信中的高亮跳转。<br>此外，用户在复制BV号或者包含BV号的链接后，打开B站APP的同时会自动跳转至该视频。<br>更多详细规则说明请见链接FAQ：<a href="https://www.bilibili.com/blackboard/activity-BV-PC.html" target="_blank" rel="noopener">https://www.bilibili.com/blackboard/activity-BV-PC.html</a><br>BV号将继续见证UP主们在这个舞台上创造无限的可能。陪伴大家的每一次灵感迸发，为每一个创意而干杯喝彩！</p></blockquote><p>这就意味着AV号将永远没落于网络世界的角落,50年后b站的AV号将成为这个年代所有人的回忆.</p><p>我当时就觉得这是扯淡,本来AV号弄的好好的为什么又要换成BV号?</p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><h2 id="AV号"><a href="#AV号" class="headerlink" title="AV号"></a>AV号</h2><p><code>AV</code> 指的是AcgVideo（动漫视频）<span class="heimu">而不是AdultVideo</span> ，目的是为了和niconico的 <code>sm</code> 号（SmileVideo）相对应。</p><p>通常AV号是按顺序的，比如前一个视频是AV10491，下一个视频如果审核通过了那一定是AV10492，绝对不可能是AV10493或AV17001，即使被删了那也是永远占了这个坑，想填都填不了， <del>排除后台操作可能性</del></p><p>AV号已经持续了将近12年的时间，具有了非常悠久的历史，b站老用户永远都不会忘记的数字。</p><h2 id="BV号"><a href="#BV号" class="headerlink" title="BV号"></a>BV号</h2><p>BV：“BilibiliVideo”，感觉和油管接轨了一样，也是一堆看似乱码的玩意</p><p>反人类设计：10位固定设计，字母数字混合，最难受的是还要<strong>区分大小写</strong>，这让线下传播视频就变得异常难受啊！！！</p><p>区分大小写意味着如果你忘记按<kbd>CapsLock</kbd>打bv,那么你就会进入一个全新世界<img src="https://img.cyfan.top/pic/moji/huaji.png" srcset="/img/loading.gif"></p><h1 id="坏处"><a href="#坏处" class="headerlink" title="坏处"></a>坏处</h1><h2 id="难记难打"><a href="#难记难打" class="headerlink" title="难记难打"></a>难记难打</h2><p>AV号很简洁,稿件是 <code>av</code> 前缀 加 若干位数字，一般人大都是八到十位，当然一些陈年老梗： <code>av17001</code> <img src="https://img.cyfan.top/pic/moji/huaji.png" srcset="/img/loading.gif">、<code>av10492</code> <img src="https://img.cyfan.top/pic/moji/yhuaji.png" srcset="/img/loading.gif">、<code>av10388</code> <img src="https://img.cyfan.top/pic/moji/zhuaji.png" srcset="/img/loading.gif"> 往往就更加简洁了。</p><h4 id="以前"><a href="#以前" class="headerlink" title="以前"></a>以前</h4><p>A: 看看这个沙雕视频，香蕉哥，哈哈哈哈哈哈哈，AV号10198539</p><p>B: 1…噼里啪啦…9…噼里啪啦…3…噼里啪啦</p><p>B: 噗，哈哈哈哈哈哈哈，笑死我了</p><p>A&amp;B： 哈哈哈哈哈哈</p><h4 id="结果现在"><a href="#结果现在" class="headerlink" title="结果现在"></a>结果现在</h4><p>A: 看看这个沙雕视频，香蕉哥，哈哈哈哈哈哈哈，BV号是17小写x411大写S7小写d大写Y</p><p>B: 什么沙雕玩意，那么难打，懒得看。</p><h2 id="老是有关键字"><a href="#老是有关键字" class="headerlink" title="老是有关键字"></a>老是有关键字</h2><p>比如说av57336629（这个是虚拟的），转成BV是BV17x411R18Y，然后因为有个R18被禁了….</p><p>[当时心情真的无语了]</p><h2 id="换汤不换药"><a href="#换汤不换药" class="headerlink" title="换汤不换药"></a>换汤不换药</h2><p>AV与BV其实是<strong>互通的</strong>,只是算法极其nb,base58(这辈子就听说过base64)加一堆高大上算法,结果还是可逆的,也就是说AV号实际上永远保留下来,但是永远从外部转向内部了.</p><h2 id="分享视频必须进入b站复制bv号或者直接告知标题。"><a href="#分享视频必须进入b站复制bv号或者直接告知标题。" class="headerlink" title="分享视频必须进入b站复制bv号或者直接告知标题。"></a>分享视频必须进入b站复制bv号或者直接告知标题。</h2><p>因为记不住。</p><h2 id="著名的视频早晚会淡出视野。"><a href="#著名的视频早晚会淡出视野。" class="headerlink" title="著名的视频早晚会淡出视野。"></a>著名的视频早晚会淡出视野。</h2><p>因为记不住。</p><h2 id="新用户则会对一些老视频的梗一头雾水。"><a href="#新用户则会对一些老视频的梗一头雾水。" class="headerlink" title="新用户则会对一些老视频的梗一头雾水。"></a>新用户则会对一些老视频的梗一头雾水。</h2><p>因为他们不知道,AV已经成为历史。</p><h2 id="邻居问题"><a href="#邻居问题" class="headerlink" title="邻居问题"></a>邻居问题</h2><p>很多up主都有这样的经历,将自己视频的av号加个1或减个1,看看邻居的视频怎么样.对于自己稿件通过审核的时间也把握的清楚</p><h2 id="搞颜色"><a href="#搞颜色" class="headerlink" title="搞颜色"></a>搞颜色</h2><p><img src="https://img.cyfan.top/pic/post/pasted-184.png" srcset="/img/loading.gif" alt="upload successful"></p><p><img src="https://img.cyfan.top/pic/post/pasted-185.png" srcset="/img/loading.gif" alt="upload successful"></p><p>注：BlueVideo是美国黄片的俚语</p><h1 id="当然也有唯一好处"><a href="#当然也有唯一好处" class="headerlink" title="当然也有唯一好处"></a>当然也有唯一好处</h1><p>孩子:妈妈过来看看B站上的AV!</p><p><strong>啪!</strong></p><p>妈妈:小小年纪不学好, <del>和隔壁老王一样</del> 看AV!</p><hr><p>孩子:妈妈过来看看B站上的BV!</p><p>妈妈:欸,宝贝,来了~~~~</p><h1 id="究竟是为什么-让B站决定要换BV呢"><a href="#究竟是为什么-让B站决定要换BV呢" class="headerlink" title="究竟是为什么,让B站决定要换BV呢?"></a>究竟是为什么,让B站决定要换BV呢?</h1><p>网上众说纷纭,不外乎关于这几点:</p><h2 id="AV号有限-装不下了"><a href="#AV号有限-装不下了" class="headerlink" title="AV号有限,装不下了"></a>AV号有限,装不下了</h2><p>目前我觉得可能性不大,一般性int值能达到2147483647,全中国一人发个视频也勉强装得下,而且最主要的AV号和BV号是互通的,以BV1874111715为例</p><p><img src="https://img.cyfan.top/pic/post/pasted-168.png" srcset="/img/loading.gif" alt="upload successful"></p><p>换成av号av99307985</p><p><img src="https://img.cyfan.top/pic/post/pasted-169.png" srcset="/img/loading.gif" alt="upload successful"></p><p>这说明,av只是从明面转向暗面,实际还是存在的.</p><p>当然,我也不清楚av什么时候会永远被清除,不过我可以肯定,av在最近10年估计都不会消失,因为B站也不想让以前网上流传的b站av链接点进去变成404.</p><h2 id="反爬虫"><a href="#反爬虫" class="headerlink" title="反爬虫"></a>反爬虫</h2><p>反百度爬虫这种沙雕问题不在讨论范围内,b站估计反的是从av1到av100000000获取所有标题简介之类的爬虫.</p><p>可问题是,谁会那么蛋疼去遍历10万个视频的简介,大多数爬虫也就是遍历热搜榜的视频,这些换不换都是一样的啊.</p><h2 id="保护安全和利益"><a href="#保护安全和利益" class="headerlink" title="保护安全和利益"></a>保护安全和利益</h2><p>?????我觉得我语文阅读理解有点小问题,没读懂,有大神在评论区指导一下吗?</p><h2 id="宣扬品牌文化"><a href="#宣扬品牌文化" class="headerlink" title="宣扬品牌文化"></a>宣扬品牌文化</h2><p>其实这个解释有一定道理,但我觉得有点不必要,毕竟av号一贴别人就屁颠屁颠去b站粘贴了,换成bv还导致复制的位数更大了</p><h2 id="模仿油管"><a href="#模仿油管" class="headerlink" title="模仿油管"></a>模仿油管</h2><p>虽然经常上油管鬼混,但我非常厌恶这种行为,av号是b站独有的文化之一,说难听点,现在随意跟youtube屁股,我觉得b站有点变了味.</p><p>常用油管的朋友应该能看到，油管内部链接都是直接复制的链接，而不是一串神秘代码，这使传播视频的同时，强制向所有观众传播了油管的品牌。同样常用/s/xxx神秘代码+密码的朋友，也知道百度网盘、百度盘、百度云是一个多么不清晰的品牌概念。</p><p>以前是AV加一串数字，很是没牌面。</p><p>现在是BV加一串字母数字，看起来像一串密码，不容易记住，跟国际接轨，很有牌面。</p><h2 id="故意避免线下传播"><a href="#故意避免线下传播" class="headerlink" title="故意避免线下传播"></a>故意避免线下传播</h2><p>没什么,五星好评,这个结论我能送上天</p><h2 id="名字难听"><a href="#名字难听" class="headerlink" title="名字难听"></a>名字难听</h2><p>…好像确实是这样的</p><h1 id="转换"><a href="#转换" class="headerlink" title="转换"></a>转换</h1><p>之前提了很多次,av与bv是互通的,接下来随便说几个avbv互相转换的方法,估计有效期能很长.</p><h2 id="原生自带转换"><a href="#原生自带转换" class="headerlink" title="原生自带转换"></a>原生自带转换</h2><p>以BV1874111715</p><p><img src="https://img.cyfan.top/pic/post/pasted-168.png" srcset="/img/loading.gif" alt="upload successful"></p><p>ChromeF12直接开挂开发者调试,选择 <code>Console</code> 控制台,输入aid</p><p><img src="https://img.cyfan.top/pic/post/pasted-170.png" srcset="/img/loading.gif" alt="upload successful"></p><p>返回一串数字,就是av号</p><p><img src="https://img.cyfan.top/pic/post/pasted-171.png" srcset="/img/loading.gif" alt="upload successful"></p><p>同理,对于AV视频,可以输入bvid获取那 <del>F**king</del> BV</p><p><img src="https://img.cyfan.top/pic/post/pasted-172.png" srcset="/img/loading.gif" alt="upload successful"></p><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><ol><li>手机无法使用,当然vConsole那就不再是原生浏览器原汁原味了.</li><li>对于一些已删除和不存在(这两个是有区别的)的视频无法正常返回.</li></ol><h2 id="官方接口"><a href="#官方接口" class="headerlink" title="官方接口"></a>官方接口</h2><h3 id="AV-to-BV"><a href="#AV-to-BV" class="headerlink" title="AV to BV"></a>AV to BV</h3><p>接口: <code>https://api.bilibili.com/x/web-interface/archive/stat?aid=</code></p><p>后面跟av号码,比如99307985,输入</p><div class="hljs"><pre><code class="hljs undefined">https:<span class="hljs-regexp">//</span>api.bilibili.com<span class="hljs-regexp">/x/</span>web-interface<span class="hljs-regexp">/archive/</span>stat?aid=<span class="hljs-number">99307985</span></code></pre></div><p>返回json格式:</p><div class="hljs"><pre><code class="hljs json">&#123;<span class="hljs-attr">"code"</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">"message"</span>:<span class="hljs-string">"0"</span>,<span class="hljs-attr">"ttl"</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">"data"</span>:&#123;<span class="hljs-attr">"aid"</span>:<span class="hljs-number">99307985</span>,<span class="hljs-attr">"bvid"</span>:<span class="hljs-string">"BV1874111715"</span>,<span class="hljs-attr">"view"</span>:<span class="hljs-number">59702</span>,<span class="hljs-attr">"danmaku"</span>:<span class="hljs-number">524</span>,<span class="hljs-attr">"reply"</span>:<span class="hljs-number">1291</span>,<span class="hljs-attr">"favorite"</span>:<span class="hljs-number">1550</span>,<span class="hljs-attr">"coin"</span>:<span class="hljs-number">649</span>,<span class="hljs-attr">"share"</span>:<span class="hljs-number">134</span>,<span class="hljs-attr">"like"</span>:<span class="hljs-number">5068</span>,<span class="hljs-attr">"now_rank"</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">"his_rank"</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">"no_reprint"</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">"copyright"</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">"argue_msg"</span>:<span class="hljs-string">""</span>,<span class="hljs-attr">"evaluation"</span>:<span class="hljs-string">""</span>&#125;&#125;</code></pre></div><p>其中bvid即为bv号.</p><h3 id="BV-to-AV"><a href="#BV-to-AV" class="headerlink" title="BV to AV"></a>BV to AV</h3><p>接口: <code>https://api.bilibili.com/x/web-interface/archive/stat?bvid=</code></p><p>后面跟bv号码,比如1874111715,输入</p><div class="hljs"><pre><code class="hljs undefined">https:<span class="hljs-regexp">//</span>api.bilibili.com<span class="hljs-regexp">/x/</span>web-interface<span class="hljs-regexp">/archive/</span>stat?bvid=<span class="hljs-number">1874111715</span></code></pre></div><p>返回json格式</p><div class="hljs"><pre><code class="hljs undefined">&#123;<span class="hljs-attr">"code"</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">"message"</span>:<span class="hljs-string">"0"</span>,<span class="hljs-attr">"ttl"</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">"data"</span>:&#123;<span class="hljs-attr">"aid"</span>:<span class="hljs-number">99307985</span>,<span class="hljs-attr">"bvid"</span>:<span class="hljs-string">"BV1874111715"</span>,<span class="hljs-attr">"view"</span>:<span class="hljs-number">59704</span>,<span class="hljs-attr">"danmaku"</span>:<span class="hljs-number">524</span>,<span class="hljs-attr">"reply"</span>:<span class="hljs-number">1291</span>,<span class="hljs-attr">"favorite"</span>:<span class="hljs-number">1551</span>,<span class="hljs-attr">"coin"</span>:<span class="hljs-number">649</span>,<span class="hljs-attr">"share"</span>:<span class="hljs-number">134</span>,<span class="hljs-attr">"like"</span>:<span class="hljs-number">5068</span>,<span class="hljs-attr">"now_rank"</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">"his_rank"</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">"no_reprint"</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">"copyright"</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">"argue_msg"</span>:<span class="hljs-string">""</span>,<span class="hljs-attr">"evaluation"</span>:<span class="hljs-string">""</span>&#125;&#125;</code></pre></div><p>其中aid即为av号</p><h3 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a>缺点</h3><p>对于一些特♂殊♂の♀视♂频,比如av17001,就会返回:</p><div class="hljs"><pre><code class="hljs json">&#123;<span class="hljs-attr">"code"</span>:<span class="hljs-number">-404</span>,<span class="hljs-attr">"message"</span>:<span class="hljs-string">"啥都木有"</span>,<span class="hljs-attr">"ttl"</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">"data"</span>:<span class="hljs-literal">null</span>&#125;</code></pre></div><p>关于av10492,则返回</p><div class="hljs"><pre><code class="hljs json">&#123;<span class="hljs-attr">"code"</span>:<span class="hljs-number">-403</span>,<span class="hljs-attr">"message"</span>:<span class="hljs-string">"访问权限不足"</span>,<span class="hljs-attr">"ttl"</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">"data"</span>:<span class="hljs-literal">null</span>&#125;</code></pre></div><h2 id="直接数据库"><a href="#直接数据库" class="headerlink" title="直接数据库"></a>直接数据库</h2><p>这个，我真的服了，方法有点傻，但我还是佩服，大家可以去知乎上看看这位大仙，在这里就不贴链接了。</p><h2 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h2><p>知乎<a href="https://www.zhihu.com/question/381784377/answer/1099055405" target="_blank" rel="noopener">mcfx的回答</a>,欸我是真的服了,下面直接照搬.</p><div class="hljs"><pre><code class="hljs python">table=<span class="hljs-string">'fZodR9XQDSUm21yCkr6zBqiveYah8bt4xsWpHnJE7jL5VG3guMTKNPAwcF'</span>tr=&#123;&#125;<span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(<span class="hljs-number">58</span>):tr[table[i]]=is=[<span class="hljs-number">11</span>,<span class="hljs-number">10</span>,<span class="hljs-number">3</span>,<span class="hljs-number">8</span>,<span class="hljs-number">4</span>,<span class="hljs-number">6</span>]xor=<span class="hljs-number">177451812</span>add=<span class="hljs-number">8728348608</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">dec</span><span class="hljs-params">(x)</span>:</span>r=<span class="hljs-number">0</span><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(<span class="hljs-number">6</span>):r+=tr[x[s[i]]]*<span class="hljs-number">58</span>**i<span class="hljs-keyword">return</span> (r-add)^xor<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">enc</span><span class="hljs-params">(x)</span>:</span>x=(x^xor)+addr=list(<span class="hljs-string">'BV1  4 1 7  '</span>)<span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(<span class="hljs-number">6</span>):r[s[i]]=table[x//<span class="hljs-number">58</span>**i%<span class="hljs-number">58</span>]<span class="hljs-keyword">return</span> <span class="hljs-string">''</span>.join(r)print(dec(<span class="hljs-string">'BV17x411w7KC'</span>))print(dec(<span class="hljs-string">'BV1Q541167Qg'</span>))print(dec(<span class="hljs-string">'BV1mK4y1C7Bz'</span>))print(enc(<span class="hljs-number">170001</span>))print(enc(<span class="hljs-number">455017605</span>))print(enc(<span class="hljs-number">882584971</span>))</code></pre></div><p>互相转换脚本，如果算法没猜错，可以保证在 av 号 <img src="https://img.cyfan.top/pic/post/pasted-183.png" srcset="/img/loading.gif" alt="upload successful"> 时正确，同时应该在<img src="https://img.cyfan.top/pic/post/pasted-174.png" srcset="/img/loading.gif" alt="upload successful"> 时也是正确的。</p><p>此代码以 WTFPL 开源。<br>UPD：之前的代码中，所有数位都被用到是乱凑的，实际上并不需要，目前只要低 6 位就足够了。<br>（更大的 av 号需要 64 位整数存储，但是 b 站现在使用的应该还是 32 位整数，所以应该还要很久）<br>发现的方法：首先从各种渠道的信息来看，应该是 base58 编码的。设 x 是一个钦定的 av 号，查询<img src="https://img.cyfan.top/pic/post/pasted-175.png" srcset="/img/loading.gif" alt="upload successful">这些 av 号对应的 bv 号，发现 bv 号的第 12、11、4、9、5 位分别会变化。所以猜测这些是 58 进制下的相应位。但是直接 base58 是不行的，所以猜测异或了一个大数，并且 base58 的字符表可能打乱了。经过实验，bv 号最低位相同的数，av 号的奇偶性相同，这一定程度上印证了之前的猜想。接下来找了一些 av 号 x，满足 x 和 x+1 对应 bv 号的第 11 位不同。设异或的数为 X，那么<img src="https://img.cyfan.top/pic/post/pasted-176.png" srcset="/img/loading.gif" alt="upload successful">（<img src="https://img.cyfan.top/pic/post/pasted-177.png" srcset="/img/loading.gif" alt="upload successful">表示异或）。由于 av 号（除了最新的少量视频）最多只有 27 bits，所以可以设<img src="https://img.cyfan.top/pic/post/pasted-178.png" srcset="/img/loading.gif" alt="upload successful">。然后可以发现X只和<img src="https://img.cyfan.top/pic/post/pasted-179.png" srcset="/img/loading.gif" alt="upload successful">和b有关，那么可以枚举这两个值（一共<img src="https://img.cyfan.top/pic/post/pasted-180.png" srcset="/img/loading.gif" alt="upload successful">种情况）然后使用上面的式子检查，就能得到若干可能的<img src="https://img.cyfan.top/pic/post/pasted-179.png" srcset="/img/loading.gif" alt="upload successful">和b。这里我得到的可能值如下：（左边是<img src="https://img.cyfan.top/pic/post/pasted-179.png" srcset="/img/loading.gif" alt="upload successful">，右边是b）</p><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-symbol">22 </span><span class="hljs-number">90983642</span><span class="hljs-symbol">22 </span><span class="hljs-number">90983643</span><span class="hljs-symbol">50 </span><span class="hljs-number">43234084</span><span class="hljs-symbol">50 </span><span class="hljs-number">43234085</span></code></pre></div><p>有奇有偶是因为异或 1 之后也能找到轮换表。而<img src="https://img.cyfan.top/pic/post/pasted-181.png" srcset="/img/loading.gif" alt="upload successful">则使得模 58 的余数刚好变成<img src="https://img.cyfan.top/pic/post/pasted-182.png" srcset="/img/loading.gif" alt="upload successful">减它。我取了 b=43234084，然后处理最低位，可以得到一个字符表，即 fZodR9XQDSUm21yCkr6zBqiveYah8bt4xsWpHnJE7jL5VG3guMTKNPAwcF。对于更高位，实际上还需要知道<img src="https://img.cyfan.top/pic/post/pasted-179.png" srcset="/img/loading.gif" alt="upload successful">^2,<img src="https://img.cyfan.top/pic/post/pasted-179.png" srcset="/img/loading.gif" alt="upload successful">^3这些值也可以 枚举 58 次得到，最后我得到的值是<img src="https://img.cyfan.top/pic/post/pasted-179.png" srcset="/img/loading.gif" alt="upload successful">^4=1749968。这时我发现，每一位的字符表是相同的（实际上只对 b=43234084 是这样的），然后再微调一下参数（上面代码中的两个 magic number 就相当于这里的a,b），最后处理了一下<img src="https://img.cyfan.top/pic/post/pasted-183.png" srcset="/img/loading.gif" alt="upload successful">的情况就得到了这份代码。</p><p>讲句大实话,我根本没看懂,不过看起来好牛逼的样子.</p><h2 id="在线工具转换"><a href="#在线工具转换" class="headerlink" title="在线工具转换"></a>在线工具转换</h2><p>既然python能做到,那么js也能做到!</p><p>工具很多,知乎上一搜一大把,这里懒得贴了.</p><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><p><a href="https://greasyfork.org/zh-CN/scripts/398526-give-me-av-not-bv" target="_blank" rel="noopener">Give me AV not BV</a></p><p><img src="https://img.cyfan.top/pic/post/pasted-186.png" srcset="/img/loading.gif" alt="upload successful"></p><p><img src="https://img.cyfan.top/pic/post/pasted-187.png" srcset="/img/loading.gif" alt="upload successful"></p><p>作者估计是个暴躁老哥,骂人骂的挺顺口的,不过脚本不错,脚本检测到地址栏的BV号会自动无刷新替换为AV号，同时会在稿件页标题下方显示原始av号。.</p><p>安装前前请安装Tampermonkey或暴力猴脚本宿主.</p><h1 id="后言"><a href="#后言" class="headerlink" title="后言"></a>后言</h1><p>也许很多人认为这没什么大不了的,不要小题大做,没意思,那你还不是照样要看b站吗?</p><p><span class="heimu">我王境泽就是饿死，死外边，从这里跳下去，不会吃你们一点东西!</span><span class="heimu"> <del>欸,真香</del></span></p><p>对啊,可是这样就给我们b站的老用户一种错觉(其实我是2017入坑的),认为b站没有重视过老用户的感受,似乎就没了这种情怀.</p><p>AV转BV,似乎暗示着B站已经逐渐去ACG化了,这很难令人不落泪,还记得当时b站发的公告吗,大用户与普通用户无异,b站可能会倒闭,但不会变味,b站永远不会添加广告.</p><p>这几条与其它氪金为主的中短视频平台的差异广告,成为了绝大多数用户入坑的原因.</p><p>现在转头看来,大用户似乎有点越权,b站可能会在我们这辈子人的孙子的孙子的孙子死后倒闭,b站的味道依旧真香,但是以前和现在总感觉多了一些孜然味,原来的味道还有,但没有那么重了.唯一不变的是没有添加添加广告,这是我依旧占坑不爬出来的原因.</p><p>AV号历史很悠久,成为b站用户必不可缺的玩意,av梗也很多,很多up辛辛苦苦等在电脑前排个号av号,如今已成为泡影;像av10492,av10388,av17001这些老梗在未来就变成无人能理解的事物,有趣而神秘.</p><p>如果BV是高管随随便便提出来没有考虑过用户的体验而是盲目跟油管风的产物,那我可以毫不犹豫骂这个东西垃圾反人类,甚至很担心从前的niconico将成为b站的翻版,希望这是也只是担心.</p><p>从此,AV号将成为我们这辈子的纪念,50年后提起AV号就变得像如今提起抗日战争,听起来刺激又有意思,但不亲身体会永远没有这种失落感.</p>]]></content>
    
    
    <categories>
      
      <category>随心记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Bilibili</tag>
      
      <tag>AV</tag>
      
      <tag>BV</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PHPnow-Windows下最轻巧的PHP运行软件，没有之一</title>
    <link href="/2020/03/29/PHPnow/"/>
    <url>/2020/03/29/PHPnow/</url>
    
    <content type="html"><![CDATA[<p>虽然作为一个静态博客的博主，但是还是有调试PHP的需求，<span class="heimu">（搭建静态是因为静态博客省钱）</span>，之前用过PHPStudy，不得不说功能真的非常强大，<del>但我很多功能都不需要</del> ，而且相当吃内存，我一个笔记本主要是追求轻巧，PHPStudy一个安装包将近50MB。最头疼的是，我的80端口已经被系统监听了，无法终结，PHPStudy即使改了端口也没用，导致MySQL服务刚启动就停止的奇葩现象，害的我一年都没有好好调试过PHP。</p><p>至于这个安装包哪里来的，讲个笑话，在植物大战僵尸贴吧个人网址flash试玩版里提到：</p><p><img src="https://img.cyfan.top/pic/post/pasted-143.png" srcset="/img/loading.gif" alt="upload successful"></p><p>然后我就把PHPnow提取出来了，一个只有20MB的PHP运行包。</p><p><a class="btn" href="https://drive.cyfan.top/PHPnow-1.5.6.zip" target="_blank" rel="noopener"> &gt;&gt;去网盘下载<br>            </a></p><p> <strong>请注意，PHPnow已经终止开发，最后一版的更新时间是2012-02-03</strong> ，默认官网是<a href="http://phpnow.org" target="_blank" rel="noopener">http://phpnow.org</a>,现在已经重定向至<a href="http://servkit.org/?from=phpnow.org" target="_blank" rel="noopener">http://servkit.org/?from=phpnow.org</a>,最高PHP是5.2.14,最高MySQL是5.1.50,框架只有Apache,最高2.2.16,并且与Windows10存在一定的bug,请仔细阅读下面的文档!</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p><img src="https://img.cyfan.top/pic/post/pasted-152.png" srcset="/img/loading.gif" alt="upload successful"></p><p>解压：</p><p><img src="https://img.cyfan.top/pic/post/pasted-153.png" srcset="/img/loading.gif" alt="upload successful"></p><p>有个7z.exe说明这是个解压Package.7z包，</p><p>Win10因为有UAC，直接双击Setup.cmd有问题，右键管理员也不行，要手动启动管理员命令行，cd到相应文件夹，输入 <code>Setup</code> 安装！否则会安装失败！</p><p><img src="https://img.cyfan.top/pic/post/pasted-154.png" srcset="/img/loading.gif" alt="upload successful"></p><p><img src="https://img.cyfan.top/pic/post/pasted-155.png" srcset="/img/loading.gif" alt="upload successful"></p><p>输入22</p><p><img src="https://img.cyfan.top/pic/post/pasted-156.png" srcset="/img/loading.gif" alt="upload successful"></p><p>输入51</p><p>接着是一番解压，不要管。</p><p><img src="https://img.cyfan.top/pic/post/pasted-157.png" srcset="/img/loading.gif" alt="upload successful"></p><p>输入y</p><p><img src="https://img.cyfan.top/pic/post/pasted-158.png" srcset="/img/loading.gif" alt="upload successful"></p><p><img src="https://img.cyfan.top/pic/post/pasted-159.png" srcset="/img/loading.gif" alt="upload successful"></p><p>Windows10家庭版不知道为什么80端口被禁用了，所以只能选1，我这里端口为4001</p><p><img src="https://img.cyfan.top/pic/post/pasted-160.png" srcset="/img/loading.gif" alt="upload successful"></p><p>安装，设置root密码</p><p><img src="https://img.cyfan.top/pic/post/pasted-161.png" srcset="/img/loading.gif" alt="upload successful"></p><p>任意键后，出现以下</p><p><img src="https://img.cyfan.top/pic/post/pasted-162.png" srcset="/img/loading.gif" alt="upload successful"></p><p>安装完成！</p><h1 id="控制面板"><a href="#控制面板" class="headerlink" title="控制面板"></a>控制面板</h1><p>安装完成后输入 <code>pncp</code> ,进入管理界面</p><p><img src="https://img.cyfan.top/pic/post/pasted-163.png" srcset="/img/loading.gif" alt="upload successful"></p><p>下次启动输入20,关闭输入30,其它的具体看情况</p><h1 id="放入"><a href="#放入" class="headerlink" title="放入"></a>放入</h1><p>将php放入 <code>htdocs</code> 即可!</p><h1 id="测试Typecho"><a href="#测试Typecho" class="headerlink" title="测试Typecho"></a>测试Typecho</h1><p>由于版本真的很古老,安装Typecho之类的请安装0.9,安装最新版1.*会导致错误!</p><p><img src="https://img.cyfan.top/pic/post/pasted-164.png" srcset="/img/loading.gif" alt="upload successful"></p><p><img src="https://img.cyfan.top/pic/post/pasted-165.png" srcset="/img/loading.gif" alt="upload successful"></p><p>一路确认，数据库填写test，安装完成</p><p><img src="https://img.cyfan.top/pic/post/pasted-166.png" srcset="/img/loading.gif" alt="upload successful"></p><p><img src="https://img.cyfan.top/pic/post/pasted-167.png" srcset="/img/loading.gif" alt="upload successful"></p><p>毕竟是古老的php,至少笔记本跑起来真的毫无压力,作为测试环境也完全足够了.</p>]]></content>
    
    
    <categories>
      
      <category>繡软件</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PHP</tag>
      
      <tag>Windows</tag>
      
      <tag>精简</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>讲讲2020/3/26Github遭中间人攻击事件</title>
    <link href="/2020/03/28/%E8%AE%B2%E8%AE%B22020-3-26Github%E9%81%AD%E5%8A%AB%E6%8C%81%E4%BA%8B%E4%BB%B6/"/>
    <url>/2020/03/28/%E8%AE%B2%E8%AE%B22020-3-26Github%E9%81%AD%E5%8A%AB%E6%8C%81%E4%BA%8B%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<p><del><strong>原标题：世界上最大的男同性恋GayHub遭到443端口劫持，是人性的毁灭还是道德的扭曲？</strong></del></p><p>本博文上半篇转载【 <a href="https://blog.qwqdanchun.cn/archives/807" target="_blank" rel="noopener">https://blog.qwqdanchun.cn/archives/807</a> 】的博文，转载如下：</p><hr><hr><h1 id="转载"><a href="#转载" class="headerlink" title="转载"></a>转载</h1><h2 id="GitHub今晨遭遇大规模中间人攻击"><a href="#GitHub今晨遭遇大规模中间人攻击" class="headerlink" title="GitHub今晨遭遇大规模中间人攻击"></a>GitHub今晨遭遇大规模中间人攻击</h2><p>昨晚6，7点左右，国内访问所有的 github pages 页面开启 HTTPS 的话证书都变成下面这个</p><p><img src="https://img.cyfan.top/pic/post/pasted-136.png" srcset="/img/loading.gif" alt="upload successful"></p><p>今晨，github.com也遭受了相同的中间人攻击</p><p><img src="https://img.cyfan.top/pic/post/pasted-137.png" srcset="/img/loading.gif" alt="upload successful"></p><p>谷歌浏览器提示不安全</p><p><img src="https://img.cyfan.top/pic/post/pasted-138.png" srcset="/img/loading.gif" alt="upload successful"></p><p>证书与昨晚的相同<br>疑似GitHub等网站遭到了大规模中间人攻击 。</p><p>中间人攻击（英语：Man-in-the-middle attack，缩写：MITM）在密码学和计算机安全领域中是指攻击者与通讯的两端分别创建独立的联系，并交换其所收到的数据，使通讯的两端认为他们正在通过一个私密的连接与对方直接对话，但事实上整个会话都被攻击者完全控制。在中间人攻击中，攻击者可以拦截通讯双方的通话并插入新的内容。在许多情况下这是很简单的（例如，在一个未加密的Wi-Fi 无线接入点的接受范围内的中间人攻击者，可以将自己作为一个中间人插入这个网络）。</p><p>一个中间人攻击能成功的前提条件是攻击者能将自己伪装成每一个参与会话的终端，并且不被其他终端识破。中间人攻击是一个（缺乏）相互认证的攻击。大多数的加密协议都专门加入了一些特殊的认证方法以阻止中间人攻击。例如，SSL协议可以验证参与通讯的一方或双方使用的证书是否是由权威的受信任的数字证书认证机构颁发，并且能执行双向身份认证。</p><p>简而言之，所谓的中间人攻击就是通过拦截正常的网络通信数据，并进行数据篡改和嗅探，而通信的双方却毫不知情。</p><p>奇特的是，可以实现此攻击需要劫持运营商或者dns才有可能实现，但是这种公然留qq邮箱的做法就十分迷惑</p><p><img src="https://img.cyfan.top/pic/post/pasted-139.png" srcset="/img/loading.gif" alt="upload successful"></p><p>本账号疑似真实姓名：张勇 ，黑龙江人？？？<br>经搜索，该用户曾在 <a href="https://blog.csdn.net/yhyhyhy/article/details/51248497#comments" target="_blank" rel="noopener">https://blog.csdn.net/yhyhyhy/article/details/51248497#comments</a> 帖子下评论，csdn账户： <a href="https://me.csdn.net/blog/qq_29158525" target="_blank" rel="noopener">https://me.csdn.net/blog/qq_29158525</a> ；引出qq： 29158525</p><p><img src="https://img.cyfan.top/pic/post/pasted-140.png" srcset="/img/loading.gif" alt="upload successful"></p><p>本账号疑似真实姓名：周言諭 ，台北人？？？</p><p><img src="https://img.cyfan.top/pic/post/pasted-141.png" srcset="/img/loading.gif" alt="upload successful"></p><p>本账号疑似真实姓名： 谢邵 ，河南人？？？<br>据不可靠消息来源： <a href="https://www.hottg.com/liyuans/p31809.html" target="_blank" rel="noopener">https://www.hottg.com/liyuans/p31809.html</a> 此邮箱可能归属于某三位数公司？？？</p><p><img src="https://img.cyfan.top/pic/post/pasted-142.png" srcset="/img/loading.gif" alt="upload successful"></p><p>另有v2ex老哥声称之前就看到过这个邮箱劫持其他域名</p><p><img src="https://img.cyfan.top/pic/post/pasted-144.png" srcset="/img/loading.gif" alt="upload successful"></p><p>证书生成疑似参照此文章：<a href="https://www.lagou.com/lgeduarticle/52972.html" target="_blank" rel="noopener">https://www.lagou.com/lgeduarticle/52972.html</a>（是否参照存疑，不过原理确实相同，仅加密算法有所更改）</p><p>曾在贴吧提问： <a href="https://tieba.baidu.com/p/400626957?red_tag=3454236974" target="_blank" rel="noopener">https://tieba.baidu.com/p/400626957?red_tag=3454236974</a></p><p>从论坛其他人评论可以得到其qq群关系：</p><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-section">群号:4823518 昵称:张勇</span><span class="hljs-section">群名:建三江一中同学</span><span class="hljs-section">群介绍:三江一中89级92届同学,,本届的加入,加入必须写名字!谢</span><span class="hljs-section">群号:66136842 昵称:张勇</span><span class="hljs-section">群名:亲友群</span><span class="hljs-section">群介绍:沟通</span><span class="hljs-section">群号:69386774 昵称:帅哥5号  张勇</span><span class="hljs-section">群名:帅哥靓女对对碰</span><span class="hljs-section">群介绍:命运负责洗牌，但是玩牌的是我们自己！</span><span class="hljs-section">群号:72876767 昵称:张勇</span><span class="hljs-section">群号:10456040 昵称:张勇</span><span class="hljs-section">群名:synjones</span><span class="hljs-section">群介绍:http://www.synjones.com</span><span class="hljs-section">群号:13602636 昵称:灵山-D3</span><span class="hljs-section">群名:★城东新居—D区★</span><span class="hljs-section">群介绍:哈尔滨城东新居，群策群力，共建美好家园。（有好的主张，可以发到群论坛）</span><span class="hljs-section">群号:15116517 昵称:灵山-D3</span><span class="hljs-section">群名:城东新居</span><span class="hljs-section">群介绍:小区业主维权的专家，溪畔家园业主委员会的李主任，联系电话是13069708074。大家回家</span><span class="hljs-section">群号:15376336 昵称:心即灵山</span><span class="hljs-section">群名:金龙卡服务群</span><span class="hljs-section">群介绍:内部专用</span><span class="hljs-section">群号:32068923 昵称:心即灵山</span><span class="hljs-section">群名:城东新居高级群</span><span class="hljs-section">群介绍:希望大家都能为本群和小区做一些贡献。都想一想办法，怎样能解决我们小区现存的问题。</span><span class="hljs-section">群号:19466772 昵称:我想回到以前</span><span class="hljs-section">群名:张兴庄吧</span><span class="hljs-section">群号:52260534 昵称:我想回到以前</span><span class="hljs-section">群名:巧</span><span class="hljs-section">群号:1363550 昵称:(り Remote、</span><span class="hljs-section">群名:都四班的</span><span class="hljs-section">群号:4250637 昵称:(り Remote、</span><span class="hljs-section">群名:QQ群</span><span class="hljs-section">群介绍:http://www.167cq.com/</span><span class="hljs-section">群号:70152084 昵称:谢绍。</span><span class="hljs-section">群名:国专08三班</span><span class="hljs-section">群介绍:国际经济与贸易专科0803班</span><span class="hljs-section">群号:84351791 昵称:帅气G★Remote</span><span class="hljs-section">群名:荣华09汽三</span><span class="hljs-section">群介绍:-</span><span class="hljs-section">群号:92050039 昵称:(り Remote、</span><span class="hljs-section">群名:ｖ1p&#123;會員&#125;倲.总群</span><span class="hljs-section">群号:92118193 昵称:(り Remote、</span><span class="hljs-section">群名:高楼庄⒐⑥界黄金一班</span><span class="hljs-section">群号:92637291 昵称:(り Remote、</span><span class="hljs-section">群名:小伙伴</span><span class="hljs-section">群号:95128769 昵称:(り Remote、</span><span class="hljs-section">群名:藝术学院体育部</span><span class="hljs-section">群介绍:发掘、培养体育特长学生；做好对班级的考核工作；协助其他部门开展工作。</span><span class="hljs-section">群号:6888129 昵称:(り Remote、</span><span class="hljs-section">群号:9496270 昵称:(り Remote、</span><span class="hljs-section">群名:21中</span><span class="hljs-section">群号:11604443 昵称:収惢養鮏.┊</span><span class="hljs-section">群名:安阳铁路中学高06</span><span class="hljs-section">群介绍:班级群外人勿进</span><span class="hljs-section">群号:22739863 昵称:(り Remote、</span><span class="hljs-section">群名:华□豫□学□院。</span><span class="hljs-section">群号:29121641 昵称:(り Remote、</span><span class="hljs-section">群名:乀闭丄眼﹋⒑指紧筘</span><span class="hljs-section">群号:30215035 昵称:(り Remote、</span><span class="hljs-section">群名:看群公告！好消息！</span><span class="hljs-section">群介绍:免费拿話費兩百块!群里的朋友们用手机拨打1259064212参加侣友在线答题就可以了，我今</span><span class="hljs-section">群号:32591681 昵称:(り Remote、</span><span class="hljs-section">群名:高三一班群</span><span class="hljs-section">群介绍:创建此群的目的：仅仅是为了提供朋友之间的交流。在此群里，拒绝一切色情粗俗</span><span class="hljs-section">群号:34421223 昵称:(り Remote、</span><span class="hljs-section">群名:魭滴系鲥緔</span><span class="hljs-section">群介绍:IC，IP．IQ卡，通通告诉我密码！！</span><span class="hljs-section">群号:38607494 昵称:(り Remote、</span><span class="hljs-section">群名:ωǒ錯了？</span><span class="hljs-section">群介绍:莪們都昰好孩孓。异想’兲開徳孩孒︶￣~°</span><span class="hljs-section">群号:56483925 昵称:谢邵。</span><span class="hljs-section">群名:国专0803班</span><span class="hljs-section">群介绍:国专0803</span></code></pre></div><p>总结：其人曾用qq：346608453，29158525，23853637；地址等不明，有代码基础，有能力实现本次攻击，疑似qq都是盗来的，无法确定本人身份</p><h2 id="最后提醒："><a href="#最后提醒：" class="headerlink" title="最后提醒："></a>最后提醒：</h2><p>《中华人民共和国刑法》第二百八十六条 违反国家规定，对计算机信息系统功能进行删除、修改、增加、干扰，造成计算机信息系统不能正常运行，后果严重的，处五年以下有期徒刑或者拘役；后果特别严重的，处五年以上有期徒刑。</p><p>违反国家规定，对计算机信息系统中存储、处理或者传输的数据和应用程序进行删除、修改、增加的操作，后果严重的，依照前款的规定处罚。</p><p>千万要知法守法，技术无罪，但是拿来做坏事可是要被抓进去的哦</p><h2 id="11：03前来更新"><a href="#11：03前来更新" class="headerlink" title="11：03前来更新"></a>11：03前来更新</h2><p>攻击者换了一个证书，新的邮箱为 <a href="mailto:1396060845037@mymail.com" target="_blank" rel="noopener">1396060845037@mymail.com</a> ，截图如下</p><p><img src="https://img.cyfan.top/pic/post/pasted-145.png" srcset="/img/loading.gif" alt="upload successful"></p><p>第一个qq里的网址可能是因为这个qq是盗的，如果这样的话，几个qq之间没有联系也就正常了</p><p><img src="https://img.cyfan.top/pic/post/pasted-146.png" srcset="/img/loading.gif" alt="upload successful"></p><h2 id="可能是最后的更新（2020-3-28-9：38）"><a href="#可能是最后的更新（2020-3-28-9：38）" class="headerlink" title="可能是最后的更新（2020/3/28 9：38）"></a>可能是最后的更新（2020/3/28 9：38）</h2><p>昨天文章写的有些急，也受了一些言论的误导，出现了一处错误，csdn的昵称后缀是随机生成的，因此推出来的后两个qq号与此无关。而在昨晚，该用户修改签名为：“QQ号码被盗，现已恢复”，并在随后关闭空间（确实很多老哥前去轰炸），这一波貌似洗白的操作却是疑点重重。</p><p>首先，大家基本已经认为这个号是被盗的了，但是号主现身就有些奇妙，作为一个 从事软件开发工作近 16 年（ CSDN 介绍 ）的人，被长时间盗号，却不找回或无法找回，突然出事了便轻松找回，可能性？？？</p><p>而且，这样的话，另一个昨天没用到的点就有意思了，928天 qq达人，如果是盗号，那盗号的人也是把这个号当大号用了叭。这样我们可以假设确实被盗号，那么如果明天达人就该断了叭。找回了一个三年多没用的号，发完解释还会占着手机那一个qq登录的位置吗，大概率不会。而如果不是盗号，咳咳，那这位张勇兄弟大概就是真的勇了叭，哈哈。</p><p>其实说了这么多，就是我们这些GitHub重度用户，想要一个合理的解释，不管是有些人猜测的G||F||//，还是一线小兵误操作，抑或是黑客在家闲极无聊等等。如果是误操作或被黑，大家就当吃瓜一场，就算是墙的问题，我们也好提前搬好仓库吧。</p><hr><hr><p>好的，视线转回来，我要开始bb了。</p><p>刚开始知道这件事还是我的好<span class="heimu">基</span>友 <a href="https://blog.say521.cn" target="_blank" rel="noopener">奥秘Sir</a> QQ空间里的转载:</p><p><img src="https://img.cyfan.top/pic/post/pasted-147.png" srcset="/img/loading.gif" alt="upload successful"></p><p>哦，发生了什么？</p><p>于是拿着QQ号去网上一找，冷汗直流：</p><p>这个QQ号的主人在2020/3/26通过手段劫持了Github、CloudflareCDN、京东网站，不过证书有问题被截下来了。</p><p>为什么冷汗直流？因为我全站绑定在Github+CloudFlare上，那岂不是我也被影响了吗？</p><p>至于为什么我没有察觉到,是因为3/26-3/27我在认真学习,没有上github<img src="https://img.cyfan.top/pic/moji/huaji.png" srcset="/img/loading.gif"></p><p>后来查找了一下，这次攻击只是影响了国内的互联网，CloudFlare劫持也只是针对美国那几个节点。</p><p>正好，上次嫌美国节点慢，通过自代理的方式节点到香港线，也就是我和攻击玩了个擦边球。</p><p>于是我就放心了.</p><p>但这次攻击不是一般的诡异，有很多疑点，当我松了一口气后又觉得不对，请听我慢慢讲解：</p><h1 id="1-本次攻击并非DNS劫持，而是中间人劫持"><a href="#1-本次攻击并非DNS劫持，而是中间人劫持" class="headerlink" title="1.本次攻击并非DNS劫持，而是中间人劫持"></a>1.本次攻击并非DNS劫持，而是中间人劫持</h1><p>DNS劫持那是G||F||\/\/的老把戏了,如果这一次这三家遭到DNS劫持,也许我也就懒得说了,毕竟这已经见怪不怪了，手动绕开来就可以了。</p><p>但是这一次，是七层精准劫持,也许这个名词不懂,那就是<strong>中间人攻击特定端口</strong>.</p><h2 id="什么是中间人"><a href="#什么是中间人" class="headerlink" title="什么是中间人?"></a>什么是中间人?</h2><p><strong>MITM</strong>,全称Man-in-the-middle attack,这种攻击在一定程度上能突破HTTPS,通俗的来讲是这样的:</p><p>先说正常https传输:</p><p><img src="https://img.cyfan.top/pic/post/pasted-148.png" srcset="/img/loading.gif" alt="upload successful"></p><p>这种加密方式叫<strong>非对称加密</strong>,应用的很广泛,至于为什么要用非对称加密而不用对称加密,这不是这里该讨论的.</p><p>假设有个黑客,想要窃取他们之间的信息:</p><p><img src="https://img.cyfan.top/pic/post/pasted-149.png" srcset="/img/loading.gif" alt="upload successful"></p><p>为什么毫无卵用?因为,非对称加密有个特点,<strong>用公钥加密的东西就不能用公钥解密了</strong>,而公钥是公开的.</p><p>但是,这样还有攻击的方式:</p><p><img src="https://img.cyfan.top/pic/post/pasted-150.png" srcset="/img/loading.gif" alt="upload successful"></p><p>这种黑客卡中间的方式,叫<strong>中间人攻击</strong>.</p><p>而且这种攻击,做的好就可以神不知鬼不觉窃听通话<strong>甚至篡改内容</strong>,最惨的是你都不知道被窃听了,用户和服务器都以为自己和对方直接通话,这才是最阴险的地方.解决办法只有HSTS。</p><p>至于用户是怎么被误导到黑客的,这就相当有意思,这就是路由污染,我们所说的ip查找,其实没有说有ip就可以直接找到对方了,还是要经过路由的.</p><p>比如说我第一次上百度（假设沿途完全没有缓存）:baidu.com,真正完整的经过是这样的</p><ol><li>电脑查找hosts,没有baidu</li><li>电脑于是向DNS（假如是8.8.8.8）发送请求包，问baidu.com在哪？</li><li>8.8.8.8这台服务器查了查，没有缓存，于是回头和我说稍等，自己去联系.com服务器</li><li>.com服务器查了查,和8.8.8.8说,你去北京I根域名服务器找,我这里没有缓存</li><li>于是8.8.8.8又屁颠屁颠去北京I根域名服务器找NS记录,I根查了查,你去ns1.baidu.com找,它的ip是202.108.22.220</li><li>于是8.8.8.8回来跟我说,nameserver是202.108.22.220</li><li>于是我去202.108.22.220,向上一级路由(我的路由器)问202.108.22.220在哪?</li><li>路由器不知道,于是向上一级询问</li><li>上一级返回给我的路由器稍等,自己还要去上上级查询,我这里是117.149.*.*<br>(此处省略17步路由查询)</li><li>最终,层层路由查询告诉我,ip202.108.22.220在北京联通,我帮你找到了</li><li>发个握手包,连接,返回baidu.com的ip 39.156.69.79</li><li>又一次经历7-10步，我与百度连接成功<br>||完了？嘿嘿，其实还没完</li><li>百度301重定向将我从 <code>baidu.com</code> 定向到 <code>www.baidu.com</code></li><li>又一次经历1-10步,最终,百度界面华丽丽地展开来.</li></ol><p>那么,中间的路由查询变得很有意思,如果我在骨干网那么干,故意把 <code>github.io</code> 路由到我的服务器上,是不是所有人都被劫持了?</p><p>很不巧,这一次真的就是那么干的.</p><h1 id="2-只劫持443端口-没有劫持80端口"><a href="#2-只劫持443端口-没有劫持80端口" class="headerlink" title="2.只劫持443端口,没有劫持80端口"></a>2.只劫持443端口,没有劫持80端口</h1><p>有人curl一下github.io,80端口TTL是51,443就变成56了<img src="https://img.cyfan.top/pic/moji/ld.jpg" srcset="/img/loading.gif"></p><p>更nb是，有人ping了一下github.io:80和github.io:443,前者延迟280ms,丢包率25%,后者延迟20ms,不丢包<img src="https://img.cyfan.top/pic/moji/dy.png" srcset="/img/loading.gif">.</p><p>所以这玩意还能降低延迟?</p><p>我笑了.</p><p>更厉害的是,由于是中间人攻击,有网友说如果信任证书还能上github,不过速度很慢.</p><p>也对,谁叫他手贱修改了全国路由,现在他的服务器正在遭受全国的DDoS.</p><p>敢情难道是他想给全国人民一个惊喜,反向代理gihub以提高访问速度?</p><h1 id="3-留下QQ邮箱"><a href="#3-留下QQ邮箱" class="headerlink" title="3.留下QQ邮箱"></a>3.留下QQ邮箱</h1><p>【以一己之力攻击国家骨干网污染三个大网站的路由】和【留下自己的QQ邮箱】，干这两件事情的真的是同一个人吗？？？？？</p><p>有人说这是仿照一篇文章伪造的，文章什么我就懒得贴了，反正伪造证书这种事情我也不会( ﹁ ﹁ ) ~→</p><p>但是，能攻击国家骨干网却拿了个自签名的证书攻击，这种事情都可以上诡异录了，唯一的解释可能是混淆视听，或者是大攻击前的试水，亦或是真的QQ被盗了，来当个替罪羊。</p><h1 id="4-声称自己QQ被盗"><a href="#4-声称自己QQ被盗" class="headerlink" title="4.声称自己QQ被盗"></a>4.声称自己QQ被盗</h1><p>这是QQ对应的空间，3/27晚上已无法正常访问，这是之前截图的：</p><p><img src="https://img.cyfan.top/pic/post/pasted-151.png" srcset="/img/loading.gif" alt="upload successful"></p><h1 id="5-同时攻击了京东和CloudFlare"><a href="#5-同时攻击了京东和CloudFlare" class="headerlink" title="5.同时攻击了京东和CloudFlare"></a>5.同时攻击了京东和CloudFlare</h1><p>如果说只攻击了Github，那我能肯定，多半是G||F||\/\/技术人员手动失误,但你把京东给搞了,我觉得这……没搞懂啊,所以这真的可能是试水咯?</p><h1 id="6-初学者"><a href="#6-初学者" class="headerlink" title="6.初学者?"></a>6.初学者?</h1><p>网上有很多人说这是个初学者,想测试一下,没想到惹出那么大的事情.</p><p>好啊,初学者随随便便搞塌国内Github京东CF,再学一点签个真实证书,下次干脆把gov.cn全站劫持了,是不是这样才能让zf了解到https的重要性.</p><p>如果真的是初学者,那么从侧面就可以讽刺我国网络安全堪忧啊.</p><p>教练,我想学这个.<img src="https://img.cyfan.top/pic/moji/zcbg.jpg" srcset="/img/loading.gif"></p><h1 id="7-这么值得报道的新闻，官媒毫无反应"><a href="#7-这么值得报道的新闻，官媒毫无反应" class="headerlink" title="7.这么值得报道的新闻，官媒毫无反应"></a>7.这么值得报道的新闻，官媒毫无反应</h1><p>我觉得这就很有意思了，我不说，大家应该知道为什么</p><h1 id="后言"><a href="#后言" class="headerlink" title="后言"></a>后言</h1><p>关于这次被攻击，为什么Github错误页面会被显示呢？</p><p>1.Github开了HSTS，匹配的头字符不对，浏览器直接拦截，连<kbd>忽略警告,继续访问</kbd>这样的字符都没有,吓得我赶紧给我全站开了HSTS.<br>2.证书是个自签名,按理说能攻击骨干网的大佬伪造个证书应该很容易,为什么用了这个呢?</p><p>另外，以国内的环境，大家上Github扔代码一定要用SSH，因为SSH双方是强加密的，可以预防中间人攻击！</p>]]></content>
    
    
    <categories>
      
      <category>随心记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CloudFlare</tag>
      
      <tag>Github</tag>
      
      <tag>网络</tag>
      
      <tag>京东</tag>
      
      <tag>劫持</tag>
      
      <tag>安全</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一次“修”冰箱的经历</title>
    <link href="/2020/03/26/%E4%B8%80%E6%AC%A1%E2%80%9C%E4%BF%AE%E2%80%9D%E5%86%B0%E7%AE%B1%E7%9A%84%E7%BB%8F%E5%8E%86/"/>
    <url>/2020/03/26/%E4%B8%80%E6%AC%A1%E2%80%9C%E4%BF%AE%E2%80%9D%E5%86%B0%E7%AE%B1%E7%9A%84%E7%BB%8F%E5%8E%86/</url>
    
    <content type="html"><![CDATA[<p>奶奶家有一台2年前买到的美的智能冰箱，当时买过来时因为在清仓，花了800块。后来出了点小问题停用了，闲置了1年。今年疫情，我只能窝在奶奶家，<span class="heimu">这个孙子又特别能吃</span>,所以只能重新启用了这台冰箱.</p><p>但是开始用的时候就出了点问题,不知道是不是放久了,冰箱两个按键短路了<img src="https://img.cyfan.top/pic/moji/huaji.png" srcset="/img/loading.gif">.</p><p>短路也就罢了,关键是这冰箱有安全锁，10秒钟不操作就锁住了，如果在锁住的时候试图操纵，冰箱蜂鸣器就会B~~~~~一声,锁键就会闪烁表示不允许操作;</p><p>结果现在这台冰箱变成电音演奏者了,短路短的很有节奏;而且最重要的是这安全锁没办法彻底禁用…<img src="https://img.cyfan.top/pic/moji/dhuaji.gif" srcset="/img/loading.gif">.</p><p>最重要的是这蜂鸣器非常响亮,冰箱在一楼,我在三楼睡觉都能听的清清楚楚<img src="https://img.cyfan.top/pic/moji/qgbf.png" srcset="/img/loading.gif">.</p><p>而且家里必须要用这台冰箱，不用不行。</p><p>以前上去扇两巴掌就安静了，最近变<span class="heimu">屌</span>了，怎么扇都没用了。欸，好生生的智能冰箱变成智障冰箱了。这设计者是怎么想的。 <img src="https://img.cyfan.top/pic/moji/whks.png" srcset="/img/loading.gif">.</p><p>最致命的是如果修就要回厂重修，费用200元，那还不如不修呢<br><img src="https://img.cyfan.top/pic/moji/fn.gif" srcset="/img/loading.gif"></p><p>至于为什么解决是因为这货不识像,在晚上吃饭的时候在我耳边响.<img src="https://img.cyfan.top/pic/moji/s.png" srcset="/img/loading.gif">，怎么响我也就忍了，在我耳边响，不好意思,我上去用力一扣,把整个面板扣了下来.后面有一束线连着,仔细一看是可插拔的,使劲一拔:</p><p><img src="https://img.cyfan.top/pic/post/pasted-127.jpg" srcset="/img/loading.gif" alt="upload successful"></p><p>欸，整个世界都安静了。</p><p>安心吃完饭，我拿着面板上楼了，现在必须要修理一下，否则没面板这个冰箱是不能运行的。</p><h1 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h1><p>我思考了一下，为什么它会发出恼人的声音呢？</p><p><img src="https://img.cyfan.top/pic/post/pasted-131.png" srcset="/img/loading.gif" alt="upload successful"></p><p>简单思考一下，解决短路我觉得是不可能的，把安全锁彻底解除也没有办法，</p><p>一、我没有螺丝刀<br>二、短路具体在哪我也不知道<br>三、解锁键没有短路，安全锁不可能解除，所以不会乱调温<br>四、这台冰箱没有解锁的需求</p><p>所以最经济最治标不治本的方法就是把蜂鸣器破坏掉。</p><h1 id="观察"><a href="#观察" class="headerlink" title="观察"></a>观察</h1><p>背面：</p><p><img src="https://img.cyfan.top/pic/post/pasted-128.jpg" srcset="/img/loading.gif" alt="upload successful"></p><p>侧面：</p><p><img src="https://img.cyfan.top/pic/post/pasted-129.jpg" srcset="/img/loading.gif" alt="upload successful"></p><p>这是六针接口，待会儿从这里重新插进去。</p><p>观察了一下，很快就确定了蜂鸣器的位置：</p><p><img src="https://img.cyfan.top/pic/post/pasted-130.jpg" srcset="/img/loading.gif" alt="upload successful"></p><p>（虚化没做好，请见谅）</p><p>以前拆过计算器，发出声音的就是这个玩意。</p><p>拿了把剪刀，伸进去，夹住，弄两下就下来了：</p><p><img src="https://img.cyfan.top/pic/post/pasted-132.jpg" srcset="/img/loading.gif" alt="upload successful"></p><p>这是蜂鸣器的三张特写：</p><p><img src="https://img.cyfan.top/pic/post/pasted-133.jpg" srcset="/img/loading.gif" alt="upload successful"></p><p><img src="https://img.cyfan.top/pic/post/pasted-134.jpg" srcset="/img/loading.gif" alt="upload successful"></p><p>蜂鸣器设计者还是用心的，起码标注了正极在哪：</p><p><img src="https://img.cyfan.top/pic/post/pasted-135.jpg" srcset="/img/loading.gif" alt="upload successful"></p><p>搞定，下去重新插上去，接着不管怎么闪烁、怎么按，它都不会响啦！</p>]]></content>
    
    
    <categories>
      
      <category>随心记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>冰箱</tag>
      
      <tag>动手实践</tag>
      
      <tag>修理</tag>
      
      <tag>电器</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>学习笔记:物理12课 天体运动 </title>
    <link href="/2020/03/25/%E5%A4%A9%E4%BD%93%E8%BF%90%E5%8A%A8/"/>
    <url>/2020/03/25/%E5%A4%A9%E4%BD%93%E8%BF%90%E5%8A%A8/</url>
    
    <content type="html"><![CDATA[<p>翘课翘太多了，不能接着翘课了，不然接着挂科，所以干脆拿来做笔记，顺便复习一下。</p><h1 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h1><p><img src="https://img.cyfan.top/pic/post/pasted-93.png" srcset="/img/loading.gif" alt="upload successful"></p><h1 id="小记"><a href="#小记" class="headerlink" title="小记"></a>小记</h1><h2 id="4"><a href="#4" class="headerlink" title="*4"></a>*4</h2><p><img src="https://img.cyfan.top/pic/post/pasted-94.png" srcset="/img/loading.gif" alt="upload successful"></p><p>什么是冲日现象？</p><p>太阳地球某行星变成一条线。</p><p><img src="https://img.cyfan.top/pic/post/pasted-95.png" srcset="/img/loading.gif" alt="upload successful"></p><p>圆周运动：GMm/r^2=m·w^2r</p><p>这一题考虑的是地球以外,金星水星不算.</p><p>P表示地外行星;<br>某一时刻链接到一线,下一时刻也链接到一线.</p><p>则EE’与PP’的角速度绝对不一样(废话)</p><p><img src="https://img.cyfan.top/pic/post/pasted-96.png" srcset="/img/loading.gif" alt="upload successful"></p><p>由于考虑的是地外行星,所以这是个追击问题,追的是角度.</p><p>E转到E’比P多转了一圈(问题所在).</p><p>在同样时间T中,地球比外面行星多转了2π角度(弧度制)</p><p>地球转过的角度减去外面行星转过的角度.</p><p>所以:</p><p><img src="https://img.cyfan.top/pic/post/pasted-97.png" srcset="/img/loading.gif" alt="upload successful"></p><p>而TE=1year</p><p>==&gt; 得出t(两次冲日时间)</p><p>核心公式</p><p><img src="https://img.cyfan.top/pic/post/pasted-98.png" srcset="/img/loading.gif" alt="upload successful"></p><p>回到题目:<br>A:每年冲日,那么t必须小于等于1,也就是TE=1year,本质就是问t能不能小于1,脑子想想就知道不可能了.</p><p>上述公式修改.</p><p><img src="https://img.cyfan.top/pic/post/pasted-99.png" srcset="/img/loading.gif" alt="upload successful"></p><p>接着算周期:</p><p>根据开普勒第三定律:</p><p><img src="https://img.cyfan.top/pic/post/pasted-100.png" srcset="/img/loading.gif" alt="upload successful"></p><p>得出每一个周期:</p><p><img src="https://img.cyfan.top/pic/post/pasted-101.png" srcset="/img/loading.gif" alt="upload successful"></p><p>回到B,从2014年1/1到2015年12/31有就可以,但是木星周期是11.86年,代入公式,选B。</p><p>依次算出C错D对。</p><p>选BD。</p><h2 id="7"><a href="#7" class="headerlink" title="*7"></a>*7</h2><p><img src="https://img.cyfan.top/pic/post/pasted-102.png" srcset="/img/loading.gif" alt="upload successful"></p><h2 id="9"><a href="#9" class="headerlink" title="*9"></a>*9</h2><p><img src="https://img.cyfan.top/pic/post/pasted-103.png" srcset="/img/loading.gif" alt="upload successful"></p><p><img src="https://img.cyfan.top/pic/post/pasted-104.png" srcset="/img/loading.gif" alt="upload successful"></p><h2 id="10"><a href="#10" class="headerlink" title="*10"></a>*10</h2><p><img src="https://img.cyfan.top/pic/post/pasted-105.png" srcset="/img/loading.gif" alt="upload successful"></p><p>因为两个 w 相同,所以Mw^2R=mw^2r</p><p><img src="https://img.cyfan.top/pic/post/pasted-106.png" srcset="/img/loading.gif" alt="upload successful"></p><p>R+r是来自距离(M与m),而R是圆周运动轨道半径.</p><p>对于双星问题,有一个条件,w相同.</p><p>所以因为角速度一样,A是错误,w相同,所以t相同,B错误.</p><p>而D中向心力就是应力,只有两个,D错误.</p><p>由公式得出,C错误.</p><p>如果假设M不动,m绕着它转,那么m的质量就不是m了,而是约化质量 <img src="https://img.cyfan.top/pic/moji/huaji.png" srcset="/img/loading.gif"></p><p><img src="https://img.cyfan.top/pic/post/pasted-107.png" srcset="/img/loading.gif" alt="upload successful"></p><p><img src="https://img.cyfan.top/pic/post/pasted-108.png" srcset="/img/loading.gif" alt="upload successful"></p><p>绝大多数情况下m引=m惯,所以一般无视.</p><p><img src="https://img.cyfan.top/pic/post/pasted-109.png" srcset="/img/loading.gif" alt="upload successful"></p><p>严重超纲,所以..不考虑</p><h2 id="11"><a href="#11" class="headerlink" title="*11"></a>*11</h2><p><img src="https://img.cyfan.top/pic/post/pasted-110.png" srcset="/img/loading.gif" alt="upload successful"></p><p>公式一套就完事了</p><p><img src="https://img.cyfan.top/pic/post/pasted-111.png" srcset="/img/loading.gif" alt="upload successful"></p><p>==&gt;<br><img src="https://img.cyfan.top/pic/post/pasted-112.png" srcset="/img/loading.gif" alt="upload successful"></p><p>质量变为k倍，M+m==&gt;k(M+m)<br>距离变为n倍, R+r==&gt;n(R+r)</p><p>导出结果，B</p><h2 id="12-这题没搞懂-lll￢ω￢"><a href="#12-这题没搞懂-lll￢ω￢" class="headerlink" title="*12 (这题没搞懂(lll￢ω￢))"></a>*12 (这题没搞懂(lll￢ω￢))</h2><p><img src="https://img.cyfan.top/pic/post/pasted-113.png" srcset="/img/loading.gif" alt="upload successful"></p><p><img src="https://img.cyfan.top/pic/post/pasted-114.png" srcset="/img/loading.gif" alt="upload successful"></p><p>答案是AD</p><h2 id="16"><a href="#16" class="headerlink" title="*16"></a>*16</h2><p><img src="https://img.cyfan.top/pic/post/pasted-115.png" srcset="/img/loading.gif" alt="upload successful"></p><p><img src="https://img.cyfan.top/pic/post/pasted-116.png" srcset="/img/loading.gif" alt="upload successful"></p><p>由于是椭圆,所以可以用开普勒第三定律解决.</p><p>令椭圆轨道周期为T0,可以把圆看成椭圆,链接AB,AB=R+R0,则中间的椭圆半长轴为(R+R0)/2</p><p>直接上公式</p><p><img src="https://img.cyfan.top/pic/post/pasted-117.png" srcset="/img/loading.gif" alt="upload successful"></p><p>很快就能得出T0.</p><p>但是题目需要的是t,而不是周期,</p><p>所以:<br><img src="https://img.cyfan.top/pic/post/pasted-118.png" srcset="/img/loading.gif" alt="upload successful"></p><h2 id="18"><a href="#18" class="headerlink" title="*18"></a>*18</h2><p><img src="https://img.cyfan.top/pic/post/pasted-119.png" srcset="/img/loading.gif" alt="upload successful"></p><p><img src="https://img.cyfan.top/pic/post/pasted-120.png" srcset="/img/loading.gif" alt="upload successful"></p><p>挖空?则m完整球+m负质量球=m挖空球(奇葩定律)</p><p>所以挖空的地方也有引力,但是斥力,这个地方比较好理解.</p><p><img src="https://img.cyfan.top/pic/post/pasted-121.png" srcset="/img/loading.gif" alt="upload successful"></p><p>物理上挖空的地方假设为斥力,等效替代.(这种思想真的很巧妙)</p><h2 id="19"><a href="#19" class="headerlink" title="*19"></a>*19</h2><p><img src="https://img.cyfan.top/pic/post/pasted-122.png" srcset="/img/loading.gif" alt="upload successful"></p><p>黄金代换<br><img src="https://img.cyfan.top/pic/post/pasted-124.png" srcset="/img/loading.gif" alt="upload successful"></p><p>(1) 重力多少?g’=4/9g=40/9 m/s^2</p><p>G=mg’=222.2N</p><p><img src="https://img.cyfan.top/pic/post/pasted-123.png" srcset="/img/loading.gif" alt="upload successful"></p><h2 id="20-暂时没搞懂"><a href="#20-暂时没搞懂" class="headerlink" title="*20(暂时没搞懂)"></a>*20(暂时没搞懂)</h2><p><img src="https://img.cyfan.top/pic/post/pasted-125.png" srcset="/img/loading.gif" alt="upload successful"></p><h2 id="21"><a href="#21" class="headerlink" title="*21"></a>*21</h2><p><img src="https://img.cyfan.top/pic/post/pasted-126.png" srcset="/img/loading.gif" alt="upload successful"></p><p>好了，题目暂时到这里，有空回来接着整理。</p>]]></content>
    
    
    <categories>
      
      <category>爱学习</category>
      
      <category>物理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>物理</tag>
      
      <tag>学习</tag>
      
      <tag>天体运动</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GooseDesktop桌面鸭_网课好宠物</title>
    <link href="/2020/03/24/GooseDesktop%E6%A1%8C%E9%9D%A2%E9%B8%AD-%E7%BD%91%E8%AF%BE%E5%A5%BD%E5%AE%A0%E7%89%A9/"/>
    <url>/2020/03/24/GooseDesktop%E6%A1%8C%E9%9D%A2%E9%B8%AD-%E7%BD%91%E8%AF%BE%E5%A5%BD%E5%AE%A0%E7%89%A9/</url>
    
    <content type="html"><![CDATA[<h1 id="GooseDesktop"><a href="#GooseDesktop" class="headerlink" title="GooseDesktop"></a>GooseDesktop</h1><a class="btn" href="https://g.cyfan.ga/Public/DesktopGoose%2520v0.3.7z" target="_blank" rel="noopener">              >>点我去下载            </a><p>可玩性非常高:</p><ul><li>会随机拖出一些<del>治愈人心</del>毒鸡汤(可以自定义)<br>  <img src="https://img.cyfan.top/pic/post/10.gif" srcset="/img/loading.gif" alt></li><li>会随机拖出一些你珍藏多年的图片(可以自定义)<br>  <img src="https://img.cyfan.top/pic/post/11.gif" srcset="/img/loading.gif" alt></li><li>关闭它拖出了来的图片会导致它追你的鼠标,追到就咬住,鼠标暂时失控.</li><li>双击它也会追鼠标(可以关闭)</li><li>自定义鸭子的颜色</li></ul><p>好的,也就这么多,更多的可以自己用VSCode写一些mod.</p><p>试着想一下,这是不是特别适合网课的时候玩呢<img src="https://img.cyfan.top/pic/moji/huaji.png" srcset="/img/loading.gif">?</p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>下载下来,打开来应该是这样:</p><p><img src="https://img.cyfan.top/pic/post/pasted-91.png" srcset="/img/loading.gif" alt="upload successful"></p><p>进入 <code>Assets</code>:</p><p><img src="https://img.cyfan.top/pic/post/pasted-92.png" srcset="/img/loading.gif" alt="upload successful"></p><p><code>Images\memes</code>,里面是鸭子随机拖出来的图片,我的版本里已经预置了10张美图+2张脖子以下不能看.jpg<img src="https://img.cyfan.top/pic/moji/bx.png" srcset="/img/loading.gif">.注意不要在家长旁边打开!当然你也可以替换成别的,文件名随意.</p><p>在 <code>/Assets/Text/NotepadMessages</code> 里是鸭子拖出来的文本,里面已经预置了1222句毒鸡汤,句句治愈人心<img src="https://img.cyfan.top/pic/moji/yhuaji.png" srcset="/img/loading.gif">.当然你也可以替换成别的,文件名随意.</p><p>打开 <code>/config.ini</code> 应该是这样:</p><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-attr">Version_DoNotEdit</span>=<span class="hljs-number">1</span><span class="hljs-attr">EnableMods</span>=<span class="hljs-literal">false</span><span class="hljs-attr">SilenceSounds</span>=<span class="hljs-literal">false</span><span class="hljs-attr">Task_CanAttackMouse</span>=<span class="hljs-literal">True</span><span class="hljs-attr">AttackRandomly</span>=<span class="hljs-literal">False</span><span class="hljs-attr">UseCustomColors</span>=<span class="hljs-literal">true</span><span class="hljs-attr">GooseDefaultWhite</span>=<span class="hljs-comment">#ffffff</span><span class="hljs-attr">GooseDefaultOrange</span>=<span class="hljs-comment">#ffa500</span><span class="hljs-attr">GooseDefaultOutline</span>=<span class="hljs-comment">#d3d3d3</span><span class="hljs-attr">MinWanderingTimeSeconds</span>=<span class="hljs-number">10</span><span class="hljs-attr">MaxWanderingTimeSeconds</span>=<span class="hljs-number">10</span><span class="hljs-attr">FirstWanderTimeSeconds</span>=<span class="hljs-number">1</span></code></pre></div><p>第二行指开不开启mod,目前它还没有很多mod,保持false即可.</p><p><code>SilenceSounds</code> 指鸭子发布发出声音,false表示发出,默认false.</p><p><code>Task_CanAttackMous</code> 指点击它会不会咬,默认为true(否则桌面鸭意义何在)</p><p><code>AttackRandomly</code> 指会不会随机咬,默认保持false,这个最好不要开起来(否则后果难以想象)</p><p><code>UseCustomColors</code> 使用自定义颜色,默认false</p><p>下面三行是颜色自定义.</p><p><code>MinWanderingTimeSeconds</code> 鸭子随机拖出文件等待时间最小值,单位秒,建议:30<br><code>MaxWanderingTimeSeconds</code> 鸭子随机拖出文件等待时间最小值,单位秒,建议:120</p><p><code>FirstWanderTimeSeconds</code> 第一次打开鸭子后多久开始拖,随意</p><h1 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h1><h2 id="关闭"><a href="#关闭" class="headerlink" title="关闭"></a>关闭</h2><p><strong>回到桌面</strong> 其他应用无效,长按Esc即可.</p><p>或双击运行 <code>Close Goose.bat</code> 快速关闭</p><p>或直接运行: <code>taskkill/f /im goosedesktop.exe</code> 也行.</p><h2 id="静音"><a href="#静音" class="headerlink" title="静音"></a>静音</h2><p>配置文件 <code>SilenceSounds=true</code> 即可</p><h2 id="惹怒"><a href="#惹怒" class="headerlink" title="惹怒"></a>惹怒</h2><p>双击它,它就会追着你的鼠标,咬到了就是将近5秒鼠标失控时间,鼠标就会被这只鸭子叼着走.</p><p>或关闭它拖出来的文件,也是同样的效果.</p><h1 id="后言"><a href="#后言" class="headerlink" title="后言"></a>后言</h1><p>这篇水的有点彻底啊….</p>]]></content>
    
    
    <categories>
      
      <category>繡软件</category>
      
    </categories>
    
    
    <tags>
      
      <tag>宠物</tag>
      
      <tag>桌面</tag>
      
      <tag>GooseDesktop</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>回形针 真的辱华了吗？</title>
    <link href="/2020/03/22/%E5%9B%9E%E5%BD%A2%E9%92%88-%E7%9C%9F%E7%9A%84%E8%BE%B1%E5%8D%8E%E4%BA%86%E5%90%97/"/>
    <url>/2020/03/22/%E5%9B%9E%E5%BD%A2%E9%92%88-%E7%9C%9F%E7%9A%84%E8%BE%B1%E5%8D%8E%E4%BA%86%E5%90%97/</url>
    
    <content type="html"><![CDATA[<p>讲真，写这篇文章时我心情很沉重。</p><p>回形针是我在所有节目里最喜欢的节目,没有之一;利用简洁风俏的语言讲解一个个生涩难懂的道理,巧妙运用插播广告方式盈利,这样互惠双赢的方式真的很新奇,也很值得学习.</p><p>我知道回形针辱华一事，居然是在暗网里，看到中文论坛里人们在激烈的讨论这一事情。</p><p>回来查的时候才明白了这一切：</p><blockquote><p>** 提示 **<br>本文章均代表个人意志，我不想趟浑水，但我就想好好理一理这一件事！</p></blockquote><p>先回答一个问题：回形针究竟有没有辱华？<br>我可以肯定的回答：至少在最后一部视频里没有！</p><h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><h2 id="2020-3-21-上传"><a href="#2020-3-21-上传" class="headerlink" title="2020/3/21 上传"></a>2020/3/21 上传</h2><p>回形针在b站上上传了一部新视频《如何快速消灭全世界森林》，视频内容讲述了因为人们的肉蛋奶消费导致了南美洲热带雨林的过度砍伐。</p><img src="https://img.cyfan.top/pic/post/pasted-82.png" srcset="/img/loading.gif"><a href="https://drive.cyfan.top/~viewer/video?urlBase64=aHR0cHM6Ly9kcml2ZS5jeWZhbi50b3AvJUU1JUE2JTgyJUU0JUJEJTk1JUU1JUJGJUFCJUU5JTgwJTlGJUU2JUI2JTg4JUU3JTgxJUFEJUU1JTg1JUE4JUU0JUI4JTk2JUU3JTk1JThDJUU3JTlBJTg0JUU2JUEzJUFFJUU2JTlFJTk3JTIwJTIwJTIwJUU1JTlCJTlFJUU1JUJEJUEyJUU5JTkyJTg4JTIwLm1wNA%3D%3D" class="btn" target="_blank" rel="noopener">【点击我快速跳转至备份视频】</a><p>现在，B站已经下架了这部视频，原因是辱华。</p><p>让我们看看为什么说辱华。</p><h2 id="视频1-32"><a href="#视频1-32" class="headerlink" title="视频1:32"></a>视频1:32</h2><p><img src="https://img.cyfan.top/pic/post/pasted-85.png" srcset="/img/loading.gif" alt="upload successful"></p><p>如果没看错,这个地方说的是”人类吃的肉越来越多”吧,而不是说中国人吃的越来越多,是吧,那这个攻击回形针,是不是有些站不住脚啊?</p><h2 id="视频3-00"><a href="#视频3-00" class="headerlink" title="视频3:00"></a>视频3:00</h2><p><img src="https://img.cyfan.top/pic/post/pasted-83.png" srcset="/img/loading.gif" alt="upload successful"></p><p>通过指出中国是巴西大豆的主要消费国，而大豆的种植一定程度上引发了热带雨林的过度砍伐，从而表达作者对雨林过度开发和产业链的深厚的担忧。</p><p>有错吗？没错！到现在人们依旧不知道雨林过度开发原来还跟身边的大豆有关！</p><p>说刻意针对中国的朋友，问一下，中国进口大量大豆本来就是事实，为何要争辩呢？</p><p><img src="https://img.cyfan.top/pic/post/pasted-84.png" srcset="/img/loading.gif" alt="upload successful"></p><h2 id="视频3-26"><a href="#视频3-26" class="headerlink" title="视频3:26"></a>视频3:26</h2><p><img src="https://img.cyfan.top/pic/post/pasted-86.png" srcset="/img/loading.gif" alt="upload successful"></p><p>后面的: <code>在经济全球化时代，巴西的蝴蝶扇一下翅膀，未必会引起得克萨斯州的龙卷风，但我们的肉蛋奶消费，却可以事实在在影响巴西森林的存亡。</code> 是的,这句话深究一遍,你就会发现非常有意思,资本家为了获得更多利益从而毁灭巴西森林,这事情已经确凿了,而且字字没有提到中国,这句“我们”被认为指的是中国，是辱华了。且不说这个地方的“我们”很可能指的是“我们人类”，而且就算是真的说的是中国，也不至于被这样上纲上线。中国人多,本就要大量的肉蛋奶,这没有错,虽然语言激烈了一些,但并不是攻击的理由.</p><p>况且回形针的致歉信里面说的非常清楚了:</p><p><img src="https://img.cyfan.top/pic/post/pasted-87.png" srcset="/img/loading.gif" alt="upload successful"></p><h1 id="现在-回来讲讲视频"><a href="#现在-回来讲讲视频" class="headerlink" title="现在,回来讲讲视频"></a>现在,回来讲讲视频</h1><p>这部视频联合了WWF世界自然基金会（World Wide Fund for Nature or World Wildlife Fund）,这是家公益基金会,网上说的ngo(非政府组织)就变得有点过分了.</p><p>视频主要讲解了如今一些不起眼的消费也会造成环境的毁坏,呼吁人们从身边保护环境,这根本没有错!</p><h1 id="涉嫌分裂"><a href="#涉嫌分裂" class="headerlink" title="涉嫌分裂"></a>涉嫌分裂</h1><p>回形针有一些视频是独立发布在油管上的,包括但不限于国内法律灰色地带的.</p><p>网上有人说回形针在B站和youtube上发布的一期《自然水从哪里来》其中中国地图不一样。</p><p><img src="https://img.cyfan.top/pic/post/pasted-88.png" srcset="/img/loading.gif" alt="upload successful"></p><p>这里，我不想深究两面派，也不想说什么时间太短，回形针说的话也有问题，这些我们都暂且不谈。</p><p>这个地方辱华了么？<br>我回答；没错，<strong>确实辱华了！</strong></p><p>我不能睁眼说瞎话，这个地方辱华就是事实，说什么对比度的我自己都不信，但是我们需要换一个角度，</p><p>为什么这件事请过了那么久才会发现？</p><p>因为发布这个视频的平台是被封锁了。</p><p>结果，突破审查去一个被封锁的地方拿到了一个被封锁的视频然后告诉那些因为封锁而看不到视频的人说这个被封锁的视频是多么多么SB。</p><p>你这TM从逻辑上根本说不通啊。</p><p>额，还有顺便问一下肖战粉丝，请问，当年说科学上网违法的一群人去哪了呢？</p><p>说台湾已经回归的同学，建议去复习一下初三道德与法治。</p><p>而且，台湾这个东西本就是还没有解决的事情（但是香港已经解决了，不要跟我扯到这上面），上世纪70年代台湾被驱逐出联合国，但并不是代表台湾真正回归祖国，虽然我希望台湾能尽早回归，但至少现在，台湾真的真的还没有回归，一些大国也不断阻扰这件事情，虽然申国不断宣扬台湾是申国的，但除了一些盟友，很多大国如美帝根本就不承认。但是我们必须分清楚一件事情，台湾是不是中国和台湾有没有回归依旧是两码事；很多盲目爱国者叫嚣台湾是中国的，但是，爱国者，请拿出自己的行动，让台湾尽早回归，这比直接叫嚣要好太多了。</p><p>回形针为什么要放视频到油管上，因为他们想要更多国外人看到，根据局势而更改视频内容，这也不能成为抨击他们两面派的原因。</p><p>如果你还想杠，那么，我推荐你去Steam地区统计、CloudFlare地区统计、<del>Google地图</del>（这个奇葩除外）、Bing国际版地图（国内版显然是不言而喻的）、MapBox上看看，把鼠标移到 <code>中华人民共和国</code>上,台湾这一块是不会亮起的（至少现在），如果要举报，我建议你还是不要针对回形针了，赶紧把Steam、CloudFlare、Microsoft通通举报了，这样难道不好吗？</p><p><img src="https://img.cyfan.top/pic/post/pasted-89.png" srcset="/img/loading.gif" alt="upload successful"></p><p>在我看来，那些国外稍微好一些的企业，台湾是地区；但在暗网、外网、零网，这些言论”自由”的地方,TW居然是被列为<code>国家</code>!那么,这些举报党,既然这么闲,为何不去把这些地方都给举报呢?</p><h1 id="那么-为什么会有这么多人举报呢"><a href="#那么-为什么会有这么多人举报呢" class="headerlink" title="那么,为什么会有这么多人举报呢?"></a>那么,为什么会有这么多人举报呢?</h1><p>这事情,还得从B站说起.</p><p>B站是年轻人聚会的地方,我当然也不例外,但是2年的站龄,我发现有一件事情值得好好谈谈:</p><p>B站的言论,越来越倾向盲目了.</p><p>国外一群人讽刺Bilibili里全是一堆 <code>小粉红</code>，原先我是不信的，但是现在我觉得至少有一部分是（但不是全部），年轻人爱国有错么？我要是说有错那我可以跳楼了。但是爱国的方式不对却会造成其它人的反感。</p><p>2019年有人举报回形针的时候并没有引起什么舆论关注，因为那个时候“爱国”网友们不觉得回形针是敌人，甚至还觉得回形针的有些视频侧面描述了中国的强大，是自己人。只要是自己人，犯的错误也不算是错误。而回形针和外国NGO合作，并且“指责中国人”，那回形针就是敌人，犯的错误就是不可饶恕。</p><p>这是一件有着很强中国特色的互联网事件。事件爆发于哔哩哔哩（B站）并不是偶然，B站的用户在所有视频网站中平均年龄最小，有着许多高中生、初中生甚至小学生。这其实不难理解，本身中学生处于没有任何资本的人生时期，荣誉感成了他们唯一的资本，他们获得的“英雄快感”实际上是霸凌别人的快感。</p><p>以至于有一些靠流量赚钱的人,在油管上公然辱骂:<br><img src="https://img.cyfan.top/pic/post/pasted-90.png" srcset="/img/loading.gif" alt="upload successful"></p><h1 id="后言"><a href="#后言" class="headerlink" title="后言"></a>后言</h1><p>这篇文章并没有分裂国家，我只是在阐述一个事实,一国两制\一中原则这一些我都是遵守的，建议大家理性爱国，尽自己努力让台湾尽早回归！</p><p>回形针现在该做的不应该是暂更，而是尽早更新出一期中国不可分裂,这样才最有用.</p><p>回形针每一期都在尽可能避免政治内容,但是他们万万没想到,只要有一点不和盲目者,万物皆政治.</p><p>因为没有任何实质上的证明回形针有反华行为，目前为止所有歪屁股的行为都是通过暗示进行的，也就是说你可以理解成这个意思也可以理解成那个意思，并且当很多人理解成那个意思并举报时回形针就会说我们根本不是那个意思然后下架视频。这种行为可以说很聪明也可以说很蠢，很蠢是因为现在回形针名声渐起，明明只要一直产出科普视频就能一直恰大钱，非要整这种小动作。很聪明体现在整的小动作都掩饰的很好，哪怕被人看出来也能洗的动。最后只要没被封就不会凉，因为回形针除了某些视频整小动作其他视频都挺有意思，我至今没发现有哪个up科普向内容比回形针要好。我宁愿在回形针10个视频里挑8个能看的也不想在其他10个里挑2个能看的。希望以后回形针好好表现吧。毕竟硬核科普已经很少很少了。<br>欸,真希望回形针能够挺过这一次网络文革.</p><p><strong>To PaperClip:即使Bilibili容不下你,我也会在油管永远跟这你!</strong></p>]]></content>
    
    
    <categories>
      
      <category>随心记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>回形针</tag>
      
      <tag>台湾</tag>
      
      <tag>辱华</tag>
      
      <tag>国家</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GithubのUnlimited Private Repo有感</title>
    <link href="/2020/03/22/Github%E3%81%AEUnlimited-Private-Repo%E6%9C%89%E6%84%9F/"/>
    <url>/2020/03/22/Github%E3%81%AEUnlimited-Private-Repo%E6%9C%89%E6%84%9F/</url>
    
    <content type="html"><![CDATA[<p>Unlimited Repo这个项目上一年就开了，只不过当时我身边一堆垃圾新闻客户端根本没有提到这件事，我居然不知道<img src="https://img.cyfan.top/pic/moji/k.png" srcset="/img/loading.gif">。直到现在手贱开了一个PrivateRepo才发现什么时候变免费了<img src="https://img.cyfan.top/pic/moji/s.png" srcset="/img/loading.gif">？？？顿时感觉失去了关爱….</p><p><span class="heimu"><del>欸没错这篇又是水文</del></span>今天讲讲关于这件事以及对于github的心理感想。</p><h1 id="收购"><a href="#收购" class="headerlink" title="收购"></a>收购</h1><p>微软<del>爸爸</del>2018年末收购Github这件事情我是知道的。</p><p>哦，知道就知道呗，我当时的心理想法是这样的。</p><p>确实是这样，我虽然知道网上很多人对这件事褒贬不一，可我确实是心中毫无波澜。</p><p>因为很多人认为，有那么一个大靠山，就可以接着<del>薅</del>撸羊毛。</p><p>也有一些程序员觉得，这样Github就丧失了它开源（OpenSource）的初衷。</p><p>甚至还有Gitlab公然在底下挑衅。</p><p>（当然这篇博文不是过来喷GitLab的，我只是想描述当时Github有多惨。<img src="https://img.cyfan.top/pic/moji/huaji.png" srcset="/img/loading.gif">）</p><p>我为什么当时毫无波澜呢，说实话原因有下：</p><p>1.当时还是个萌新，不知道这有什么意义。（雾<img src="https://img.cyfan.top/pic/moji/h.png" srcset="/img/loading.gif">）<br>2.感觉收购后和收购前没什么不同。（大雾<img src="https://img.cyfan.top/pic/moji/m.png" srcset="/img/loading.gif">）<br>3.当时还没有理解Git是什么东西，上传方式都是拖拽上传（大大雾<img src="https://img.cyfan.top/pic/moji/c.png" srcset="/img/loading.gif">）</p><p>嗯<img src="https://img.cyfan.top/pic/moji/huaji.gif" srcset="/img/loading.gif">。</p><h1 id="成长"><a href="#成长" class="headerlink" title="成长"></a>成长</h1><p>渐渐的，用到Github多了，虽然是个学生，但还是有抽出心思写写无聊的程序，对于一些吊炸天的repo一个star，对于一些有版权风险的一个fork…逐渐对于github熟悉起来,也渐渐喜欢上了github,虽然后面使用过coding和gitee,但用户体验就没做那么好(个人感想),最终还是没有抛弃github…</p><p>Github附加功能有些真的没法比,光是那pages我就觉得好上天了,用过codingpages,A记录绑定的ip过几天就要换一次,CNAME绑定的又不会宕机时自动切换,有时候速度还不如Github.</p><h1 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h1><h2 id="拿来当网盘用"><a href="#拿来当网盘用" class="headerlink" title="拿来当网盘用"></a>拿来当网盘用</h2><p>很多人说github开放Unlimited Private Repo后国内会引起一波免费网盘潮,我觉得这似乎不大可能:</p><p>1.Github本身只是托管代码的,那些放私人文件的一群人难道没有感觉到这一点么?<br>2.光是那Github全英文注册界面估计就能拦截一堆小学生了<img src="https://img.cyfan.top/pic/moji/j.png" srcset="/img/loading.gif">,滥用的可能性就会大大降低了.<br>3.Github被国内防火*限速了(这似乎才是最大原因好不好),用起来比百度网盘还难过.<img src="https://img.cyfan.top/pic/moji/8082.png" srcset="/img/loading.gif"></p><p>当然,如果只是放一些文档,我觉得大部分人也就是睁一只眼闭一只眼,毕竟临时放一些文档也不为过么.</p><p>只是有时候瞎逛github总能找到一些SB宗教的信息,欸,打广告打到这上面来了,亏他们想得出,不过网页有时候也是可以借鉴的,一些比较好的科学上网法则有些时候也能发现.</p><p>当然有一些正义的人会到这些repo上抗议,我看过了,但这些repo的拥有者反而更加不讲理,开口就是骂人.我觉得这样的人根本没有理可以讲,而且这种人也没有交流的价值,我个人建议还是不要管这些人,毕竟上Github的人大都都是有理智的,没有多少人会相信这一群讲话毫无根据的人,让他们自生自灭,不被人看得起,才是最好的解决办法.</p><h2 id="好代码不会开源"><a href="#好代码不会开源" class="headerlink" title="好代码不会开源"></a>好代码不会开源</h2><p>好,我就说几个结局,看看大家有没有身同感受.</p><h3 id="Public坑"><a href="#Public坑" class="headerlink" title="Public坑"></a>Public坑</h3><p>开了一个Public坑 ==&gt; 被dalao给了一个Star ==&gt; 两个人互相follow ==&gt; PY交易(雾) ==&gt;两个人都被互相激励,写出更好的代码</p><p>开了一个Public坑 ==&gt; 没人来 ==&gt; 默默自己写着repo ==&gt; 有一天有人把你的repo分享到了知乎 ==&gt; Star过一千 ==&gt; <del>接到局里喝茶(大大雾)</del><img src="https://img.cyfan.top/pic/moji/8082.png" srcset="/img/loading.gif"> ==&gt; 删除repo</p><p>开了一个Public坑 ==&gt; 没人来 ==&gt; 归档,不想写了 ==&gt; 一个人看到了,测试了一下,发了一个issues ==&gt; 一群人被吸引过来,发了一堆issues ==&gt;被迫续更</p><p>开了一个Public坑 ==&gt; 吸引了一群人 ==&gt;没空写了,转给社区,自己去悠哉悠哉了 ==&gt;社区继续维护</p><p>开了一个Public坑 ==&gt; 然后就没有然后了…</p><h3 id="Private坑"><a href="#Private坑" class="headerlink" title="Private坑"></a>Private坑</h3><p>开了一个Private Repo ==&gt; 哎呀自己写的怎么这么烂,欸,幸好没有开源 ==&gt; 清空repo重新写</p><p>开了一个Private Repo ==&gt; 欸我写的这么好,赶紧开源 ==&gt;跳回public坑 ==&gt;结局与前四个一样</p><p>开了一个Private Repo ==&gt; 欸我写的这么好,怎么没人Star呢 ==&gt;四处宣扬自己的项目 ==&gt; 最后发现开成私人坑了 ==&gt; 转回public ==&gt; 结局相同</p><p>开了一个Private Repo ==&gt; 做网盘 ==&gt; 这特么什么神速度 ==&gt; 退坑</p><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><p>至少现在看来Private Repo似乎没有被滥用的很厉害,当然,善用免费服务才能让服务变得更加长久,多了微软<del>爸爸</del>,相信Github会做的更好!</p>]]></content>
    
    
    <categories>
      
      <category>瞎扯淡</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Github</tag>
      
      <tag>Repository</tag>
      
      <tag>撸羊毛</tag>
      
      <tag>私人</tag>
      
      <tag>无限制</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Heroku~Websocket~Workers浅谈</title>
    <link href="/2020/03/21/Heroku~Websocket~Workers%E6%B5%85%E8%B0%88/"/>
    <url>/2020/03/21/Heroku~Websocket~Workers%E6%B5%85%E8%B0%88/</url>
    
    <content type="html"><![CDATA[<p>不好意思，我又抛弃了 <code>diaspora</code>(刚满一天),跳槽到了 <code>fluid</code><img src="https://img.cyfan.top/pic/moji/huaji.png" srcset="/img/loading.gif"> 而且感觉用户体验比 <code>diaspora</code> 好多了,因为以前 <code>NexT</code>是不能添加图片表情的，因为图片会强制居中，<del>那玩意叫表情</del>,所以只能使用emoji😭,可是emoji没有我想要的表情,<span class="heimu">比如滑稽</span>,所以一般使用颜文字（〃｀ 3′〃）,<span class="heimu">但颜文字还是没有滑稽</span>,所以一般强制居左居右;现在这个主题,图片默认靠左,而且可以环绕,<del>所以很适合添加表情</del><img src="https://img.cyfan.top/pic/moji/yhuaji.png" srcset="/img/loading.gif">.而且现在看来, <code>fluid</code> 并不比 <code>NexT</code> 差,该有的还是有,而且个性化程度很高,基本常用的插件都自己集成了<img src="https://img.cyfan.top/pic/moji/xy.png" srcset="/img/loading.gif">,比如懒加载<img src="https://img.cyfan.top/pic/moji/zhuaji.png" srcset="/img/loading.gif">.所以我可以随意添加图片啦!!!于是决定用这个主题了。</p><p>好了,今天带来的又是一篇撸羊毛的技巧.</p><blockquote><h1 id="警告"><a href="#警告" class="headerlink" title="警告"></a>警告</h1><p>脚本作者承认了该脚本违反了Heroku使用条款,所以使用该脚本造成Heroku账号被封本站概不负责!</p></blockquote><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>我这个脚本Fork了自己的Github小号，我以前的小号Fork的是onplus的repo,onplusFork并改版了mrluanma的repo了,而mrluanma是fork了shadowsocks组织的php项目,所以这个脚本是8年前的…..<img src="https://img.cyfan.top/pic/moji/lh.png" srcset="/img/loading.gif"></p><p>不得不说这个脚本的生存时间是真的强，从2012年至今，这个脚本依旧可以用<img src="https://img.cyfan.top/pic/moji/xy.png" srcset="/img/loading.gif">，只不过速度被硬生生压到了20kb/s，不过，我有提速的秘诀<del>废话，没点真本事我在这儿瞎晃？</del></p><p>原理非常好理解，虽然教程上口口声声说原理是SS，但实际上脚本是基于NodeJS的WebSocks技术，所以其实就是个代理。</p><h1 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h1><p>Heroku免费dyno也有550H/mo,自己用完全足够了,不过公开的话就够呛了,这个脚本注定只能偷偷摸摸的使用.(谁挂代理24小时挂着的呀)</p><p>本教程为了避免 <code>教授方法</code> 故此避嫌（其实就是懒得写），具体可以看看<a href="https://github.com/ChenYFan/shadowsocks-heroku" target="_blank" rel="noopener">我Fork的项目</a>,里面写的已经很详细了,所以不要问我了….</p><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>这个脚本虽然开源了，但是至今仍然能被正常访问，但经历了 <code>「羲农去我久」1PjT8X/2TCX3i。</code> 特别关照，80端口已经被限速成了一副狗样，如果不加速，那速度…上传慢速,下载20kb/s,勉强与i2p争锋.</p><h1 id="加速"><a href="#加速" class="headerlink" title="加速"></a>加速</h1><p>这个脚本并不是特别加速heroku的,我有一次在外网tele群里看到了有人说可以用workers复活加速V2Ray + ws + tls,当时我就灵光一闪,Heroku的Websocks也是同样基于这种想法的,为何不试试呢?</p><details><summary>避免大规模泛滥和爬虫，已用很简单的方式加密脚本，点击展开</summary><div class="hljs"><pre><code class="hljs undefined">YWRkRXZlb<span class="hljs-symbol">nRMaXN0</span>ZW<span class="hljs-number">5</span>lciUyOCUwQSUyMmZldG<span class="hljs-symbol">NoJTIyJTJDZXZlbnQlMjAlM0</span>Ql<span class="hljs-name">M0</span>UlMjAl<span class="hljs-symbol">N0</span>IlMEFsZXQlMjB<span class="hljs-number">1</span>cmwl<span class="hljs-name">M0</span>RuZXclMjBVUkwlMjhldmVudC<span class="hljs-number">5</span>yZXF<span class="hljs-number">1</span>ZX<span class="hljs-symbol">N0</span>L<span class="hljs-symbol">nVybCUyOSUzQiUwQXVybC5</span>ob<span class="hljs-number">3</span><span class="hljs-symbol">N0</span>bmFtZSUzRCUyM<span class="hljs-symbol">nNzLWJ5</span>Y<span class="hljs-number">3</span>lmLWV<span class="hljs-number">1</span>MS<span class="hljs-number">5</span>oZXJva<span class="hljs-number">3</span>VhcHAuY<span class="hljs-number">29</span>tJTIyJT<span class="hljs-symbol">NCJTBBbGV0</span>JTIwcmVxdWVzdCUzR<span class="hljs-name">G5</span>ldyUyMFJlcXVlc<span class="hljs-number">3</span>QlMjh<span class="hljs-number">1</span>cmwlMk<span class="hljs-symbol">NldmVudC5</span>yZXF<span class="hljs-number">1</span>ZX<span class="hljs-symbol">N0</span>JTI<span class="hljs-number">5</span>JT<span class="hljs-symbol">NCJTBBZXZlbnQuJTIwcmVzcG9</span>uZFdpdGglMjglMEFmZXRjaCUyOHJlcXVlc<span class="hljs-number">3</span>QlMjklMEElMjklMEEl<span class="hljs-symbol">N0</span>QlMEElMjk=</code></pre></div></details><p>解密,替换第四行的herokuapp地址。</p><p>下载我repo里的ss-win32/64或ss-mac，选择对应系统，解压，编辑 <code>conf.json</code> 替换地址为workers的地址。</p><h1 id="自选节点"><a href="#自选节点" class="headerlink" title="自选节点"></a>自选节点</h1><p>由于workers默认解析至美国，延迟太大速度太低，可以绑定域名自选CDN或hosts修改。推荐hosts修改，这样省得DNS污染导致无法正常使用。</p><p>可以试试1.1.1.*，日本节点,对于各种运营商支持不错.或者使用ipv6,避免水管拥堵.</p><h1 id="表现"><a href="#表现" class="headerlink" title="表现:"></a>表现:</h1><p><img src="https://img.cyfan.top/pic/post/pasted-77.png" srcset="/img/loading.gif" alt="upload successful"></p><p>无论是作为备用还是主用,表现都还可以.毕竟老是白嫖我同学康哥在JMS的搬瓦工花的每月20多美元的SS线(100MBps)总是觉得愧疚.</p><h1 id="后言"><a href="#后言" class="headerlink" title="后言"></a>后言</h1><p><span class="heimu"><del>很好,又水了一篇</del></span></p><p>但是前面说的很清楚,拿来应个急还可以,你要是拿来主用…那么很容易引起Heroku注意,账号封锁了就不要怪我喽<img src="https://img.cyfan.top/pic/moji/huaji.png" srcset="/img/loading.gif">.</p><p>Heroku的服务器用的是Amazon的,所以不要指望带宽和延迟能很好.</p><p>非常推荐自定义域名后故意手动污染DNS至一些封锁ip避免引起 <code>「羲农去我久」1PjT8X/2TCX3i。</code> 注意,这个脚本如果加上privoxy,在监听至0.0.0.0,还可以给手机做代理,速度也就一般吧.</p>]]></content>
    
    
    <categories>
      
      <category>撸羊毛</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CloudFlare</tag>
      
      <tag>科学上网</tag>
      
      <tag>Heroku</tag>
      
      <tag>Workers</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一次糟糕的换主题过程</title>
    <link href="/2020/03/20/%E4%B8%80%E6%AC%A1%E7%B3%9F%E7%B3%95%E7%9A%84%E6%8D%A2%E4%B8%BB%E9%A2%98%E8%BF%87%E7%A8%8B/"/>
    <url>/2020/03/20/%E4%B8%80%E6%AC%A1%E7%B3%9F%E7%B3%95%E7%9A%84%E6%8D%A2%E4%B8%BB%E9%A2%98%E8%BF%87%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<p>前天看到了一个自称 <code>无名小辈</code> 的博主的博客，那界面，简洁又华丽，正好符合我的审美，</p><p>回头看看自己的，NexT最大的缺点是什么？大众脸,通常随便点几个博客都跟我的博客差不多。因为集成了大量插件以及修改简单、界面优雅，NexT已经在Hexo里占了半边江山，基本上网上搜索Hexo建立博客教程，其中主题绝大多数是NexT。</p><p>当然，NexT也有NexT的好处，毕竟作为一款主打全兼容的主题，NexT修改起来真的很简单，而且任何常见错误网上一搜就行了。但是，自建博客的主要目的是什么？当然是个性化，那不然我何苦不在CSDN、简书、掘金这些平台上写，还免去一番折腾，<span class="heimu">还能免去高额的域名价钱</span>.</p><p>于是去<a href="https://hexo.io/themes" target="_blank" rel="noopener">hexo主题市场</a>看看，感觉 Diaspora主题不错：</p><p><img src="https://img.cyfan.top/pic/post/pasted-71.png" srcset="/img/loading.gif" alt="upload successful"></p><p>因为NexT真的过于豪华，所以我就决定开始换主题，</p><p>最后发现我究竟是入了一个什么大坑<img src="https://img.cyfan.top/pic/post/pasted-5.png" srcset="/img/loading.gif">…</p><p>因为这是个个人主题，根本没有很多详细的使用文档，整合的东西也不多，网上基本没有资料，所以修改时全靠经验，有一些根本没办法在本地预览…</p><p>说个数字就知道这坑有多大了，昨天刨掉上传前天博文一次，push量达到了30次。<img src="https://img.cyfan.top/pic/post/pasted-5.png" srcset="/img/loading.gif">  我还能说什么。</p><h1 id="更换"><a href="#更换" class="headerlink" title="更换"></a>更换</h1><p>下载，解压，修改站点配置文件指向Diaspora。</p><p>这一步简单极了，那么接下来谈谈这到底有多少问题。</p><h2 id="Gitalk问题"><a href="#Gitalk问题" class="headerlink" title="Gitalk问题"></a>Gitalk问题</h2><p>首先，之前说过Gitalk一个lable不能超过50字，很多人采用了decode方式规避解码，但对于我这种<del>标题党</del>人来说，50字显然不够。</p><p>于是看了一下主题配置文件:</p><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-attr">gitalk:</span>    <span class="hljs-comment"># 是否启用评论功能</span><span class="hljs-attr">    enable:</span> <span class="hljs-literal">false</span>    <span class="hljs-comment"># 是否自动展开评论框</span><span class="hljs-attr">    autoExpand:</span> <span class="hljs-literal">false</span>    <span class="hljs-comment"># 应用编号</span><span class="hljs-attr">    clientID:</span> <span class="hljs-string">''</span>    <span class="hljs-comment"># 应用秘钥</span><span class="hljs-attr">    clientSecret:</span> <span class="hljs-string">''</span>    <span class="hljs-comment"># issue仓库名</span><span class="hljs-attr">    repo:</span> <span class="hljs-string">''</span>    <span class="hljs-comment"># Github名</span><span class="hljs-attr">    owner:</span> <span class="hljs-string">''</span>    <span class="hljs-comment"># Github名</span><span class="hljs-attr">    admin:</span> <span class="hljs-string">['']</span>    <span class="hljs-comment"># Ensure uniqueness and length less than 50</span><span class="hljs-attr">    id:</span> <span class="hljs-string">location.pathname</span>    <span class="hljs-comment"># Facebook-like distraction free mode</span><span class="hljs-attr">    distractionFreeMode:</span> <span class="hljs-literal">false</span></code></pre></div><p>那么修改 <code>id</code> 不就行了么.</p><p>但是我修改后毫无卵用啊.</p><p>…</p><p>在 <code>\layout\_partial\post</code> 下,我看到了 <code>gitalk.ejs</code>,本来以为抓到核心了,结果打开来:</p><div class="hljs"><pre><code class="hljs undefined">&lt;% <span class="hljs-keyword">if</span> (theme.gitalk != undefined)&#123; %&gt;    &lt;div id=<span class="hljs-string">'gitalk-container'</span> <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">comment</span> <span class="hljs-title">link</span>"</span><span class="hljs-keyword">data</span>-enable=<span class="hljs-string">'&lt;%=theme.gitalk.enable%&gt;'</span>        <span class="hljs-keyword">data</span>-ae=<span class="hljs-string">'&lt;%=theme.gitalk.autoExpand%&gt;'</span>        <span class="hljs-keyword">data</span>-ci=<span class="hljs-string">'&lt;%=theme.gitalk.clientID%&gt;'</span>        <span class="hljs-keyword">data</span>-cs=<span class="hljs-string">'&lt;%=theme.gitalk.clientSecret%&gt;'</span>        <span class="hljs-keyword">data</span>-r=<span class="hljs-string">'&lt;%=theme.gitalk.repo%&gt;'</span>        <span class="hljs-keyword">data</span>-o=<span class="hljs-string">'&lt;%=theme.gitalk.owner%&gt;'</span>        <span class="hljs-keyword">data</span>-a=<span class="hljs-string">'&lt;%=theme.gitalk.admin%&gt;'</span>        <span class="hljs-keyword">data</span>-d=<span class="hljs-string">'&lt;%=theme.gitalk.distractionFreeMode%&gt;'</span>    &gt;查看评论&lt;/div&gt;&lt;%&#125;%&gt;</code></pre></div><p><img src="https://img.cyfan.top/pic/post/pasted-73.png" srcset="/img/loading.gif" alt="upload successful"></p><p>根本没有id好不好!!!!!!!!所以你放在主题配置文件有什么用?????</p><p>最终拿出notepad++的文件夹搜索功能</p><p><img src="https://img.cyfan.top/pic/post/pasted-72.png" srcset="/img/loading.gif" alt="upload successful"></p><p>在 <code>\source\js\diaspora.js</code> 里有关于gitalk的配置,</p><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-comment">// comment</span>           case - <span class="hljs-number">1</span> != tag.indexOf(<span class="hljs-string">"comment"</span>): <span class="hljs-keyword">if</span>($(<span class="hljs-string">'#gitalk-container'</span>).<span class="hljs-keyword">data</span>(<span class="hljs-string">'enable'</span>) == <span class="hljs-literal">true</span>)&#123;Diaspora.loading(),comment = $(<span class="hljs-string">'#gitalk-container'</span>);gitalk = new Gitalk(&#123;  clientID: comment.<span class="hljs-keyword">data</span>(<span class="hljs-string">'ci'</span>),  clientSecret: comment.<span class="hljs-keyword">data</span>(<span class="hljs-string">'cs'</span>),  repo: comment.<span class="hljs-keyword">data</span>(<span class="hljs-string">'r'</span>),  owner: comment.<span class="hljs-keyword">data</span>(<span class="hljs-string">'o'</span>),  admin: comment.<span class="hljs-keyword">data</span>(<span class="hljs-string">'a'</span>),  id: decodeURI(window.location.pathname),  distractionFreeMode: comment.<span class="hljs-keyword">data</span>(<span class="hljs-string">'d'</span>)&#125;)$(<span class="hljs-string">".comment"</span>).removeClass(<span class="hljs-string">"link"</span>)gitalk.render(<span class="hljs-string">'gitalk-container'</span>)Diaspora.loaded();&#125;<span class="hljs-keyword">else</span>&#123;$(<span class="hljs-string">'#gitalk-container'</span>).html(<span class="hljs-string">"评论已关闭"</span>);&#125;               <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;               <span class="hljs-keyword">break</span>;</code></pre></div><p>把id换成 <code>id: md5(location.pathname),</code> ,回到 <code>\layout\_partial\post\gitalk.ejs</code> 添加一行 <code>&lt;script src=&quot;https://cdn.bootcss.com/blueimp-md5/2.10.0/js/md5.js&quot;&gt;&lt;/script&gt;</code> 才行.</p><p>更惨的是当我测试的时候,issues却多开了一个</p><p><img src="https://img.cyfan.top/pic/post/pasted-74.png" srcset="/img/loading.gif" alt="upload successful"></p><p><img src="https://img.cyfan.top/pic/post/pasted-75.png" srcset="/img/loading.gif" alt="upload successful"></p><p><img src="https://img.cyfan.top/pic/post/pasted-73.png" srcset="/img/loading.gif" alt="upload successful"></p><p>编码之后才发现，NexT主题默认是在打开文章后添加了一个 <code>#more</code> 用于定位加载更多的地方，这个位置被gitalk统计进去了….</p><p>还好博客没有人留言，这个坑总算是填上去了。</p><h2 id="google-analytics"><a href="#google-analytics" class="headerlink" title="google-analytics"></a>google-analytics</h2><p>由于我不用谷歌统计,因为谷歌统计在国内真的支持很差,很容易拖慢速度,所以一直在用百度统计.</p><p>但这个主题只整合了谷歌,没有百度.</p><p>欸,这就是小主题和大主题的区别.(つ&amp;⊂)</p><p>不过这个坑还好填,文件夹搜索google,很快定位到位置 <code>\diaspora\layout\_partial\post\google-analytics.ejs</code> ,直接全部替换,解决.</p><h2 id="搜索功能"><a href="#搜索功能" class="headerlink" title="搜索功能"></a>搜索功能</h2><p><img src="https://img.cyfan.top/pic/post/pasted-76.png" srcset="/img/loading.gif" alt="upload successful"></p><p>按照官方文档说明,首先</p><div class="hljs"><pre><code class="hljs undefined">hexo new<span class="hljs-built_in"> page </span>search</code></pre></div><p>接着在search添加</p><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-attr">title:</span> <span class="hljs-string">search</span><span class="hljs-attr">date:</span> <span class="hljs-number">2014</span><span class="hljs-bullet">-12</span><span class="hljs-bullet">-22</span> <span class="hljs-number">12</span><span class="hljs-string">:39:04</span><span class="hljs-attr">type:</span> <span class="hljs-string">"search"</span><span class="hljs-meta">---</span></code></pre></div><p>由于之前装过插件,我以为就这样打开直接使用,</p><p>结果搜索功能是正常的,链接点开就不正常了.</p><p>点开链接,地址栏变成这样:</p><div class="hljs"><pre><code class="hljs undefined">https://blog.cyfan.top/search/<span class="hljs-symbol">%2</span>F<span class="hljs-number">2020</span><span class="hljs-symbol">%2</span>F<span class="hljs-number">03</span><span class="hljs-symbol">%2</span>F<span class="hljs-number">18</span><span class="hljs-symbol">%2</span>F<span class="hljs-symbol">%E5</span><span class="hljs-symbol">%85</span><span class="hljs-symbol">%8</span>D<span class="hljs-symbol">%C2</span><span class="hljs-symbol">%B7</span><span class="hljs-symbol">%E7</span><span class="hljs-symbol">%88</span><span class="hljs-symbol">%AC</span><span class="hljs-symbol">%C2</span><span class="hljs-symbol">%B7</span><span class="hljs-symbol">%E5</span><span class="hljs-symbol">%9</span>F<span class="hljs-symbol">%8</span>E<span class="hljs-symbol">%C2</span><span class="hljs-symbol">%B7</span><span class="hljs-symbol">%E5</span><span class="hljs-symbol">%9</span>B<span class="hljs-symbol">%BD</span><span class="hljs-symbol">%E5</span><span class="hljs-symbol">%86</span><span class="hljs-symbol">%85</span><span class="hljs-symbol">%E7</span><span class="hljs-symbol">%AE</span><span class="hljs-symbol">%A1</span><span class="hljs-symbol">%E7</span><span class="hljs-symbol">%90</span><span class="hljs-symbol">%86</span><span class="hljs-symbol">%E5</span><span class="hljs-symbol">%88</span><span class="hljs-symbol">%86</span><span class="hljs-symbol">%E4</span><span class="hljs-symbol">%BA</span><span class="hljs-symbol">%ABGoogleDrive</span><span class="hljs-symbol">%2</span>F</code></pre></div><p>地址栏不正确.</p><p>由于我是直接从NexT迁到Diaspora,没有重新安装插件,以前的NexT是直接在主页就可以搜索了,但Diaspora这个似乎要跳到一个专门的页面,导致链接不正确…</p><p>在作者主页和issues找过,发现了只有一个open的issues和我一样…</p><p>欸算了,自己动手丰衣足食.</p><p>同样是文件夹全局搜索,还是在 <code>\source\js\diaspora.js</code> 找到了目标:</p><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-comment">// 返回搜索结果</span><span class="hljs-keyword">if</span> (isMatch) &#123;<span class="hljs-comment">//结果标签</span>str += <span class="hljs-string">"&lt;li&gt;&lt;a href='"</span>+ data_url +<span class="hljs-string">"' class='search-result-title' target='_blank'&gt;"</span>+ data_title +<span class="hljs-string">"&lt;/a&gt;"</span>;<span class="hljs-keyword">var</span> content = data.content.trim().replace(/&lt;[^&gt;]+&gt;/g,<span class="hljs-string">""</span>);<span class="hljs-keyword">if</span> (first_occur &gt;= <span class="hljs-number">0</span>) &#123;<span class="hljs-comment">// 拿出含有搜索字的部分</span><span class="hljs-keyword">var</span> start = first_occur - <span class="hljs-number">6</span>;<span class="hljs-keyword">var</span> <span class="hljs-keyword">end</span> = first_occur + <span class="hljs-number">6</span>;<span class="hljs-keyword">if</span>(start &lt; <span class="hljs-number">0</span>)&#123;start = <span class="hljs-number">0</span>;&#125;<span class="hljs-keyword">if</span>(start == <span class="hljs-number">0</span>)&#123;<span class="hljs-keyword">end</span> = <span class="hljs-number">10</span>;&#125;<span class="hljs-keyword">if</span>(<span class="hljs-keyword">end</span> &gt; content.length)&#123;<span class="hljs-keyword">end</span> = content.length;&#125;<span class="hljs-keyword">var</span> match_content = content.substr(start, <span class="hljs-keyword">end</span>); <span class="hljs-comment">// 列出搜索关键字，定义class加高亮</span></code></pre></div><p>在第四行我发现这个是根据地址跳转的,所以将 <code>str += &quot;&lt;li&gt;&lt;a href=&#39;&quot;+ data_url +&quot;&#39; class=&#39;search-result-title&#39; target=&#39;_blank&#39;&gt;&quot;+ data_title +&quot;&lt;/a&gt;&quot;;</code> 替换成 <code>str += &quot;&lt;li&gt;&lt;a href=&#39;https://blog.cyfan.top/&quot;+ data_url +&quot;&#39; class=&#39;search-result-title&#39; target=&#39;_blank&#39;&gt;&quot;+ data_title +&quot;&lt;/a&gt;&quot;;</code> , 其中域名改成你自己的。</p><h2 id="友链"><a href="#友链" class="headerlink" title="友链"></a>友链</h2><p>这个在浏览页是没有显示友链框的，所以干脆开辟了一个新的，使用的是孟坤的卡片式友链，这里就不多介绍了。</p><h2 id="menu"><a href="#menu" class="headerlink" title="menu"></a>menu</h2><p>菜单不再使用fontawesome，注意要去掉NexT的图标文字。</p><h2 id="Jquery"><a href="#Jquery" class="headerlink" title="Jquery"></a>Jquery</h2><p>这个主题jquery库位置不对/(ㄒoㄒ)/，通常来讲jquery库需要放在所有要用到jquery的上方,否则会报错,这就要靠自己了.</p><h2 id="Lazyload"><a href="#Lazyload" class="headerlink" title="Lazyload"></a>Lazyload</h2><p>这个我硬生生折腾了4小时,原因是这个主题似乎是不兼容懒加载的.</p><p>主题主页点击文章后,载入方式是直接平滑载入,这确实有助于提升访问好感,但这样js就不会自动载入了呀.必须手动刷新才行.</p><p>…</p><p>最后还是手动关闭懒加载,虽然提升了页面载入时间,但平滑加载从某种意义上来说也可以算作懒加载.</p><h1 id="后言"><a href="#后言" class="headerlink" title="后言"></a>后言</h1><p>总的来说,总算拜托了NexT的豪华和臃肿,以及大众脸.博客载入速度缩短至0.8秒(指打开到显示加载图像),首次载入时间缩短至6秒.</p><p>不过这个主题毕竟是小主题,修改还是很麻烦的,新手还是用NexT吧.</p>]]></content>
    
    
    <categories>
      
      <category>爱折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>主题</tag>
      
      <tag>NexT</tag>
      
      <tag>Diaspora</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何++CloudFlare Warp+ </title>
    <link href="/2020/03/19/%E5%A6%82%E4%BD%95-CloudFlare-Warp/"/>
    <url>/2020/03/19/%E5%A6%82%E4%BD%95-CloudFlare-Warp/</url>
    
    <content type="html"><![CDATA[<p>自从CloudFlare渐渐浮出大众的视野，现在它的各项服务已经玩出花了，如果不陌生，它有一个应用叫 <code>1.1.1.1</code>,简单的说就是在手机上搭建DoH和DoT,本来的意思就是绕开域名污染,结果正好撞到某些人怀里,<span class="heimu">当然也包括我 </span>,亲测使用DoH虽然速度慢了点,但是上<code>DuckDuckGo</code> 不是梦啊.</p><p>另外,CloudFlare有多了一个功能叫 <code>Warp+</code>,简单的说就是 <code>代理</code> ,嗯~ o(<em>￣▽￣</em>)o,我想我在说什么你应该知道,由于CloudFlare主打边缘服务,所以.😏</p><h1 id="什么是边缘服务"><a href="#什么是边缘服务" class="headerlink" title="什么是边缘服务?"></a>什么是边缘服务?</h1><p>这里简单介绍一下,边缘服务指的是当用户发出请求后,接到相应的不再是少量的中心服务,而是所有的在用户身边CDN进行相应.</p><p>就拿CFWorker来说,传统服务是这样的:</p><p><img src="https://img.cyfan.top/pic/post/pasted-67.png" srcset="/img/loading.gif" alt="upload successful"></p><p>但是CloudFlare换了个思路,为什么所有数据都要一个中心节点算,在用户旁边的CDN不能算吗?</p><p><img src="https://img.cyfan.top/pic/post/pasted-68.png" srcset="/img/loading.gif" alt="upload successful"></p><p>让用户身边的服务器进行相应,在用户与服务器的边缘计算,这就是边缘服务.</p><h1 id="Warp"><a href="#Warp" class="headerlink" title="Warp+"></a>Warp+</h1><p>手机端上Warp+主打的功能是在网络拥堵时提供更好的服务,个人用了一下,速度不快,大约100kb/s,勉强支撑正常使用,而且默认只有1GB,需要靠分享获取更多流量.</p><p>那么,我现在告诉你我有多少流量:</p><p><img src="https://img.cyfan.top/pic/post/pasted-69.png" srcset="/img/loading.gif" alt="upload successful"></p><p>这全都依赖这个脚本：</p><details><summary>避免大规模泛滥和爬虫，已用很简单的方式加密，点击展开</summary><div class="hljs"><pre><code class="hljs undefined">Ly<span class="hljs-number">8</span>lMjBGYWtlJTIwcmV<span class="hljs-symbol">naXN0</span>ZXIlMjBmb<span class="hljs-number">3</span>IlMjByZWZlc<span class="hljs-symbol">nJlciUyMHRvJTIwZ2</span>V<span class="hljs-number">0</span>JTIwd<span class="hljs-number">2</span>FycCUyMHBsdXMlMjBiYW<span class="hljs-number">5</span>kd<span class="hljs-number">2</span>lkdGglMEFjb<span class="hljs-number">25</span>zdCUyMHJlZmVycmVyJTIwJT<span class="hljs-symbol">NEJTIwJTIyMGY0</span><span class="hljs-symbol">NGRkZWEtY2</span>My<span class="hljs-symbol">NS00</span><span class="hljs-symbol">NzNhLWE4</span>OTctOWEzYzdh<span class="hljs-symbol">NDVlZjc5</span>JTIyJT<span class="hljs-symbol">NCJTBBY29</span>uc<span class="hljs-number">3</span>QlMjB<span class="hljs-number">0</span>aW<span class="hljs-number">1</span>lc<span class="hljs-number">1</span>RvT<span class="hljs-name">G9</span><span class="hljs-attr">vcCUyMCUzRCUyMDEwMDAlM0</span>IlMEFjb<span class="hljs-number">25</span>zdCUyMHJldHJ<span class="hljs-number">5</span>VGltZXMlMjAl<span class="hljs-name">M0</span>QlMjAxMDAl<span class="hljs-name">M0</span>IlMEEvLyUyMEhvdyUyM<span class="hljs-name">G1</span>hb<span class="hljs-symbol">nklMjBzZWMlMjB0</span>byUyMH<span class="hljs-symbol">NsZWVwJTJDJTIwY3</span>VycmVudGx<span class="hljs-number">5</span>JTIwcmF<span class="hljs-number">0</span>ZSUyMGxpbWl<span class="hljs-number">0</span>JTIwbWl<span class="hljs-symbol">naHQlMjBiZSUyMGFwcGx5</span>JTIwd<span class="hljs-name">G8</span>lMjBwZXIlMjBtaW<span class="hljs-number">4</span>lMjBwZXIlMjBpcCUyMGZyb<span class="hljs-number">20</span>lMjBteSUyM<span class="hljs-name">G9</span>ic<span class="hljs-number">2</span>VydmF<span class="hljs-number">0</span>aW<span class="hljs-number">9</span>uLiUwQW<span class="hljs-symbol">NvbnN0</span>JTIwc<span class="hljs-number">2</span>xlZXBTZW<span class="hljs-symbol">NvbmRzJTIwJTNEJTIwMzAlM0</span>IlMEElMEFjb<span class="hljs-number">25</span>zdCUyMGh<span class="hljs-number">0</span>dHBzJTIwJT<span class="hljs-symbol">NEJTIwcmVxdWlyZSUyOCUyMmh0</span>dHBzJTIyJTI<span class="hljs-number">5</span>JT<span class="hljs-symbol">NCJTBBY29</span>uc<span class="hljs-number">3</span>QlMjB<span class="hljs-number">6</span>bGliJTIwJT<span class="hljs-symbol">NEJTIwcmVxdWlyZSUyOCUyMnpsaWIlMjIlMjklM0</span>IlMEElMEFhc<span class="hljs-number">3</span>luYyUyMGZ<span class="hljs-number">1</span>bm<span class="hljs-symbol">N0</span>aW<span class="hljs-number">9</span>uJTIwaW<span class="hljs-number">5</span>pdCUyOCUyOSUyMCU<span class="hljs-number">3</span>QiUwQSUyMCUyMGZ<span class="hljs-attr">vciUyMCUyOGxldCUyMGklMjAlM0</span>QlMjAwJT<span class="hljs-symbol">NCJTIwaSUyMCUzQyUyMHRpbWVzVG9</span>Mb<span class="hljs-number">29</span>wJT<span class="hljs-symbol">NCJTIwaSsrJTI5</span>JTIwJTdCJTBBJTIwJTIwJTIwJTIwaWYlMjAlMjhhd<span class="hljs-number">2</span>FpdCUyMHJ<span class="hljs-number">1</span>biUyOCUyOSUyOSUyMCU<span class="hljs-number">3</span>QiUwQSUyMCUyMCUyMCUyMCUyMCUyMG<span class="hljs-symbol">NvbnNvbGUubG9</span><span class="hljs-symbol">nJTI4</span>aSUyMCslMjAxJTJDJTIwJTIyT<span class="hljs-number">0</span>slMjIlMjkl<span class="hljs-name">M0</span>IlMEElMjAlMjAlMjAlMjAl<span class="hljs-symbol">N0</span>QlMjBlbH<span class="hljs-symbol">NlJTIwJTdCJTBBJTIwJTIwJTIwJTIwJTIwJTIwY29</span>uc<span class="hljs-number">29</span>sZS<span class="hljs-number">5</span>sb<span class="hljs-number">2</span>clMjhpJTIwKyUyMDElMkMlMjAl<span class="hljs-symbol">NjBFcnJvciUyQyUyMHdpbGwlMjBzbGVlcCUyMGZvciUyMCUyNCU3</span>Q<span class="hljs-symbol">nNsZWVwU2</span>Vjb<span class="hljs-number">25</span>kcyU<span class="hljs-number">3</span>RHMl<span class="hljs-symbol">NjAlMjklM0</span>IlMEElMjAlMjAlMjAlMjAlMjAlMjBmb<span class="hljs-number">3</span>IlMjAlMjhsZXQlMjByJTIwJT<span class="hljs-symbol">NEJTIwMCUzQiUyMHIlMjAlM0</span>MlMjByZXRyeVRpbWVzJT<span class="hljs-symbol">NCJTIwcisrJTI5</span>JTIwJTdCJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwYXdhaXQlMjBzbGVlcCUyOH<span class="hljs-symbol">NsZWVwU2</span>Vjb<span class="hljs-number">25</span>kcyUyMColMjAxMDAwJTI<span class="hljs-number">5</span>JT<span class="hljs-symbol">NCJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwaWYlMjAlMjhhd2</span>FpdCUyMHJ<span class="hljs-number">1</span>biUyOCUyOSUyOSUyMCU<span class="hljs-number">3</span>QiUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMG<span class="hljs-symbol">NvbnNvbGUubG9</span><span class="hljs-symbol">nJTI4</span>aSUyMCslMjAxJTJDJTIwJTIyUmV<span class="hljs-number">0</span>c<span class="hljs-symbol">nklMjAlMjMlMjIlMjArJTIwJTI4</span>ciUyMCslMjAxJTI<span class="hljs-number">5</span>JTJDJTIwJTIyT<span class="hljs-number">0</span>slMjIlMjkl<span class="hljs-name">M0</span>IlMEElMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjBicmVhayUzQiUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCU<span class="hljs-number">3</span>RCUyMG<span class="hljs-attr">Vsc2</span>UlMjAl<span class="hljs-symbol">N0</span>IlMEElMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjBjb<span class="hljs-number">25</span>zb<span class="hljs-number">2</span>xlLmxvZyUyOGklMjArJTIwMSUyQyUyMCUyMlJldHJ<span class="hljs-number">5</span>JTIwJTIzJTIyJTIwKyUyMCUyOHIlMjArJTIwMSUyOSUyQyUyMCU<span class="hljs-number">2</span>MEVyc<span class="hljs-name">m9</span>yJTJDJTIwd<span class="hljs-number">2</span>lsbCUyMH<span class="hljs-symbol">NsZWVwJTIwZm9</span>yJTIwJTI<span class="hljs-number">0</span>JTdCc<span class="hljs-number">2</span>xlZXBTZW<span class="hljs-symbol">NvbmRzJTdEcyU2</span>MCUyOSUzQiUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMGlmJTIwJTI<span class="hljs-number">4</span>ciUyMCUzRCUzRCUzRCUyMHJldHJ<span class="hljs-number">5</span>VGltZXMlMjAtJTIwMSUyOSUyMCU<span class="hljs-number">3</span>QiUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMHJldHVybiUzQiUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCU<span class="hljs-number">3</span>RCUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCU<span class="hljs-number">3</span>RCUwQSUyMCUyMCUyMCUyMCUyMCUyMCU<span class="hljs-number">3</span>RCUwQSUyMCUyMCUyMCUyMCU<span class="hljs-number">3</span>RCUwQSUyMCUyMCU<span class="hljs-number">3</span>RCUwQSU<span class="hljs-number">3</span>RCUwQSUwQWFzeW<span class="hljs-number">5</span>jJTIwZ<span class="hljs-symbol">nVuY3</span>Rpb<span class="hljs-number">24</span>lMjBydW<span class="hljs-number">4</span>lMjglMjklMjAl<span class="hljs-symbol">N0</span>IlMEElMjAlMjByZXR<span class="hljs-number">1</span>c<span class="hljs-name">m4</span>lMjBuZXclMjBQc<span class="hljs-name">m9</span>taX<span class="hljs-symbol">NlJTI4</span>cmVzb<span class="hljs-number">2</span>x<span class="hljs-number">2</span>ZSUyMCUzRCUzRSUyMCU<span class="hljs-number">3</span>QiUwQSUyMCUyMCUyMCUyMG<span class="hljs-symbol">NvbnN0</span>JTIwaW<span class="hljs-number">5</span>zdGFsbF<span class="hljs-number">9</span>pZCUyMCUzRCUyMGdlbl<span class="hljs-symbol">N0</span>cmluZyUyODExJTI<span class="hljs-number">5</span>JT<span class="hljs-symbol">NCJTBBJTIwJTIwJTIwJTIwY29</span>uc<span class="hljs-number">3</span>QlMjBwb<span class="hljs-number">3</span><span class="hljs-symbol">N0</span>RGF<span class="hljs-number">0</span>YSUyMCUzRCUyMEpTT<span class="hljs-number">04</span>uc<span class="hljs-number">3</span>RyaW<span class="hljs-number">5</span><span class="hljs-symbol">naWZ5</span>JTI<span class="hljs-number">4</span>JTdCJTBBJTIwJTIwJTIwJTIwJTIwJTIwa<span class="hljs-number">2</span>V<span class="hljs-number">5</span>JT<span class="hljs-symbol">NBJTIwJTYwJTI0</span>JTdCZ<span class="hljs-number">2</span>VuU<span class="hljs-number">3</span>RyaW<span class="hljs-number">5</span><span class="hljs-symbol">nJTI4</span><span class="hljs-symbol">NDMlMjklN0</span>Ql<span class="hljs-name">M0</span>Ql<span class="hljs-symbol">NjAlMkMlMEElMjAlMjAlMjAlMjAlMjAlMjBpbnN0</span>YWxsX<span class="hljs-number">2</span>lkJT<span class="hljs-symbol">NBJTIwaW5</span>zdGFsbF<span class="hljs-number">9</span>pZCUyQyUwQSUyMCUyMCUyMCUyMCUyMCUyMGZjbV<span class="hljs-number">90</span>b<span class="hljs-number">2</span>tlbiUzQSUyMCU<span class="hljs-number">2</span>MCUy<span class="hljs-symbol">NCU3</span>Qmluc<span class="hljs-number">3</span>RhbGxfaWQl<span class="hljs-symbol">N0</span>Ql<span class="hljs-name">M0</span>FBUEE<span class="hljs-number">5</span>MWIlMjQl<span class="hljs-symbol">N0</span>J<span class="hljs-symbol">nZW5</span>TdHJpbmclMjgxMzQlMjkl<span class="hljs-symbol">N0</span>Ql<span class="hljs-symbol">NjAlMkMlMEElMjAlMjAlMjAlMjAlMjAlMjByZWZlcnJlciUzQSUyMHJlZmVycmVyJTJDJTBBJTIwJTIwJTIwJTIwJTIwJTIwd2</span>FycF<span class="hljs-number">9</span>lbmFibGVkJT<span class="hljs-symbol">NBJTIwZmFsc2</span>UlMkMlMEElMjAlMjAlMjAlMjAlMjAlMjB<span class="hljs-number">0</span>b<span class="hljs-number">3</span>Ml<span class="hljs-name">M0</span>ElMjBuZXclMjBEYXRlJTI<span class="hljs-number">4</span>JTI<span class="hljs-number">5</span>L<span class="hljs-symbol">nRvSVNPU3</span>RyaW<span class="hljs-number">5</span><span class="hljs-symbol">nJTI4</span>JTI<span class="hljs-number">5</span>L<span class="hljs-symbol">nJlcGxhY2</span>UlMjglMjJaJTIyJTJDJTIwJTIyKzA<span class="hljs-number">3</span>JT<span class="hljs-symbol">NBMDAlMjIlMjklMkMlMEElMjAlMjAlMjAlMjAlMjAlMjB0</span>eXBlJT<span class="hljs-symbol">NBJTIwJTIyQW5</span>kc<span class="hljs-name">m9</span>pZCUyMiUyQyUwQSUyMCUyMCUyMCUyMCUyMCUyMGxvY<span class="hljs-number">2</span>FsZSUzQSUyMCUyM<span class="hljs-symbol">npoX0</span><span class="hljs-symbol">NOJTIyJTBBJTIwJTIwJTIwJTIwJTdEJTI5</span>JT<span class="hljs-symbol">NCJTBBJTBBJTIwJTIwJTIwJTIwY29</span>uc<span class="hljs-number">3</span>QlMjB<span class="hljs-attr">vcHRpb25</span>zJTIwJT<span class="hljs-symbol">NEJTIwJTdCJTBBJTIwJTIwJTIwJTIwJTIwJTIwaG9</span>zd<span class="hljs-name">G5</span>hbWUl<span class="hljs-name">M0</span>ElMjAlMjJhcGkuY<span class="hljs-number">2</span>xvdWRmbGFyZW<span class="hljs-symbol">NsaWVudC5</span>jb<span class="hljs-number">20</span>lMjIlMkMlMEElMjAlMjAlMjAlMjAlMjAlMjBwb<span class="hljs-number">3</span>J<span class="hljs-number">0</span>JT<span class="hljs-symbol">NBJTIwNDQzJTJDJTBBJTIwJTIwJTIwJTIwJTIwJTIwcGF0</span>aCUzQSUyMCUyMi<span class="hljs-number">92</span>MGE<span class="hljs-number">3</span><span class="hljs-symbol">NDUvcmVnJTIyJTJDJTBBJTIwJTIwJTIwJTIwJTIwJTIwbWV0</span>a<span class="hljs-name">G9</span>kJT<span class="hljs-symbol">NBJTIwJTIyUE9</span>T<span class="hljs-attr">VCUyMiUyQyUwQSUyMCUyMCUyMCUyMCUyMCUyMGhlYWRlcnMlM0</span>ElMjAl<span class="hljs-symbol">N0</span>IlMEElMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjJDb<span class="hljs-number">250</span>ZW<span class="hljs-number">50</span>LVR<span class="hljs-number">5</span>cGUlMjIl<span class="hljs-name">M0</span>ElMjAlMjJhcHBsaW<span class="hljs-symbol">NhdGlvbi9</span>qc<span class="hljs-number">29</span>uJTIyJTJDJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwS<span class="hljs-name">G9</span>zdCUzQSUyMCUyMmFwaS<span class="hljs-number">5</span>jb<span class="hljs-name">G91</span>ZGZsYXJlY<span class="hljs-number">2</span>xpZW<span class="hljs-number">50</span>Lm<span class="hljs-symbol">NvbSUyMiUyQyUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMENvbm5</span>lY<span class="hljs-number">3</span>Rpb<span class="hljs-number">24</span>l<span class="hljs-name">M0</span>ElMjAlMjJLZWVwLUFsaXZlJTIyJTJDJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIyQW<span class="hljs-symbol">NjZXB0</span>LUVuY<span class="hljs-number">29</span>kaW<span class="hljs-number">5</span><span class="hljs-symbol">nJTIyJTNBJTIwJTIyZ3</span>ppcCUyMiUyQyUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMlVzZXItQWdlb<span class="hljs-symbol">nQlMjIlM0</span>ElMjAlMjJva<span class="hljs-number">2</span>h<span class="hljs-number">0</span>dHAvMy<span class="hljs-number">4</span>xMi<span class="hljs-number">4</span>xJTIyJTJDJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIyQ<span class="hljs-number">29</span>udGVudC<span class="hljs-number">1</span>MZW<span class="hljs-number">5</span><span class="hljs-symbol">ndGglMjIlM0</span>ElMjBwb<span class="hljs-number">3</span><span class="hljs-symbol">N0</span>RGF<span class="hljs-number">0</span>YS<span class="hljs-number">5</span>sZW<span class="hljs-number">5</span><span class="hljs-symbol">ndGglMEElMjAlMjAlMjAlMjAlMjAlMjAlN0</span>QlMEElMjAlMjAlMjAlMjAl<span class="hljs-symbol">N0</span>Ql<span class="hljs-name">M0</span>IlMEElMEElMjAlMjAlMjAlMjBjb<span class="hljs-number">25</span>zdCUyMHJlcSUyMCUzRCUyMGh<span class="hljs-number">0</span>dHBzL<span class="hljs-symbol">nJlcXVlc3</span>QlMjh<span class="hljs-attr">vcHRpb25</span>zJTJDJTIwcmVzJTIwJT<span class="hljs-symbol">NEJTNFJTIwJTdCJTBBJTIwJTIwJTIwJTIwJTIwJTIwaWYlMjhyZXMuc3</span>RhdHVzQ<span class="hljs-number">29</span>kZSUyMCUzRCUzRCUzRCUyMDQyOSUyOSUyMCU<span class="hljs-number">3</span>QiUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMC<span class="hljs-number">8</span>vJTIwV<span class="hljs-name">G9</span>vJTIwbWFueSUyMHJlcXVlc<span class="hljs-number">3</span>RzJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwcmVzb<span class="hljs-number">2</span>x<span class="hljs-number">2</span>ZSUyOGZhbH<span class="hljs-symbol">NlJTI5</span>JT<span class="hljs-symbol">NCJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTdEJTBBJTIwJTIwJTIwJTIwJTIwJTIwY29</span>uc<span class="hljs-number">3</span>QlMjB<span class="hljs-symbol">nemlwJTIwJTNEJTIwemxpYi5</span>jcmVhdGVHdW<span class="hljs-number">56</span>aXAlMjglMjkl<span class="hljs-name">M0</span>IlMEElMjAlMjAlMjAlMjAlMjAlMjAvLyUyMG<span class="hljs-symbol">NvbnN0</span>JTIwY<span class="hljs-symbol">nVmZmVyJTIwJTNEJTIwJTVCJTVEJTNCJTBBJTIwJTIwJTIwJTIwJTIwJTIwcmVzLnBpcGUlMjhnemlwJTI5</span>JT<span class="hljs-symbol">NCJTBBJTIwJTIwJTIwJTIwJTIwJTIwZ3</span>ppcCUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMC<span class="hljs-number">5</span>vbiUyOCUyMmRhdGElMjIlMkMlMjBmdW<span class="hljs-number">5</span>jdGlvbiUyOGRhdGElMjklMjAl<span class="hljs-symbol">N0</span>IlMEElMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAvLyUyMGJ<span class="hljs-number">1</span>ZmZlci<span class="hljs-number">5</span>wdX<span class="hljs-symbol">NoJTI4</span>ZGF<span class="hljs-number">0</span>YS<span class="hljs-number">50</span>b<span class="hljs-number">1</span><span class="hljs-symbol">N0</span>cmluZyUyOCUyOSUyOSUzQiUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCU<span class="hljs-number">3</span>RCUyOSUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMC<span class="hljs-number">5</span>vbiUyOCUyMmVuZCUyMiUyQyUyMGZ<span class="hljs-number">1</span>bm<span class="hljs-symbol">N0</span>aW<span class="hljs-number">9</span>uJTI<span class="hljs-number">4</span>JTI<span class="hljs-number">5</span>JTIwJTdCJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwLy<span class="hljs-number">8</span>lMjBjb<span class="hljs-number">25</span>zb<span class="hljs-number">2</span>xlLmRpciUyOEpTT<span class="hljs-number">04</span>ucGFyc<span class="hljs-number">2</span>UlMjhidWZmZXIua<span class="hljs-name">m9</span>pbiUyOCUyMiUyMiUyOSUyOSUyOSUzQiUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMHJlc<span class="hljs-number">29</span>sdmUlMjh<span class="hljs-number">0</span>c<span class="hljs-symbol">nVlJTI5</span>JT<span class="hljs-symbol">NCJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTdEJTI5</span>JTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwL<span class="hljs-name">m9</span>uJTI<span class="hljs-number">4</span>JTIyZXJyb<span class="hljs-number">3</span>IlMjIlMkMlMjBmdW<span class="hljs-number">5</span>jdGlvbiUyOGUlMjklMjAl<span class="hljs-symbol">N0</span>IlMEElMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAvLyUyMG<span class="hljs-symbol">NvbnNvbGUuZXJyb3</span>IlMjhlJTI<span class="hljs-number">5</span>JT<span class="hljs-symbol">NCJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwcmVzb2</span>x<span class="hljs-number">2</span>ZSUyOGZhbH<span class="hljs-symbol">NlJTI5</span>JT<span class="hljs-symbol">NCJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTdEJTI5</span>JT<span class="hljs-symbol">NCJTBBJTIwJTIwJTIwJTIwJTdEJTI5</span>JT<span class="hljs-symbol">NCJTBBJTBBJTIwJTIwJTIwJTIwcmVxLm9</span>uJTI<span class="hljs-number">4</span>JTIyZXJyb<span class="hljs-number">3</span>IlMjIlMkMlMjBlc<span class="hljs-symbol">nJvciUyMCUzRCUzRSUyMCU3</span>QiUwQSUyMCUyMCUyMCUyMCUyMCUyMC<span class="hljs-number">8</span>vJTIwY<span class="hljs-number">29</span>uc<span class="hljs-number">29</span>sZS<span class="hljs-number">5</span>lc<span class="hljs-symbol">nJvciUyOGVycm9</span>yJTI<span class="hljs-number">5</span>JT<span class="hljs-symbol">NCJTBBJTIwJTIwJTIwJTIwJTIwJTIwcmVzb2</span>x<span class="hljs-number">2</span>ZSUyOGZhbH<span class="hljs-symbol">NlJTI5</span>JT<span class="hljs-symbol">NCJTBBJTIwJTIwJTIwJTIwJTdEJTI5</span>JT<span class="hljs-symbol">NCJTBBJTBBJTIwJTIwJTIwJTIwcmVxLndyaXRlJTI4</span>c<span class="hljs-name">G9</span>zdERhdGElMjkl<span class="hljs-name">M0</span>IlMEElMjAlMjAlMjAlMjByZXEuZW<span class="hljs-number">5</span>kJTI<span class="hljs-number">4</span>JTI<span class="hljs-number">5</span>JT<span class="hljs-symbol">NCJTBBJTIwJTIwJTdEJTI5</span>JT<span class="hljs-symbol">NCJTBBJTdEJTBBJTBBZnVuY3</span>Rpb<span class="hljs-number">24</span>lMjBzbGVlcCUyO<span class="hljs-name">G1</span>zJTI<span class="hljs-number">5</span>JTIwJTdCJTBBJTIwJTIwcmV<span class="hljs-number">0</span>dXJuJTIwbmV<span class="hljs-number">3</span>JTIwUHJvbWlzZSUyOHJlc<span class="hljs-number">29</span>sdmUlMjAl<span class="hljs-name">M0</span>Ql<span class="hljs-name">M0</span>UlMjBzZXRUaW<span class="hljs-number">1</span>lb<span class="hljs-number">3</span>V<span class="hljs-number">0</span>JTI<span class="hljs-number">4</span>cmVzb<span class="hljs-number">2</span>x<span class="hljs-number">2</span>ZSUyQyUyM<span class="hljs-name">G1</span>zJTI<span class="hljs-number">5</span>JTI<span class="hljs-number">5</span>JT<span class="hljs-symbol">NCJTBBJTdEJTBBJTBBZnVuY3</span>Rpb<span class="hljs-number">24</span>lMjB<span class="hljs-symbol">nZW5</span>TdHJpbmclMjhsZW<span class="hljs-number">5</span><span class="hljs-symbol">ndGglMjklMjAlN0</span>IlMEElMjAlMjAvLyUyMGh<span class="hljs-number">0</span>dHBzJT<span class="hljs-symbol">NBLy9</span>zdGFja<span class="hljs-number">292</span>ZXJmb<span class="hljs-name">G93</span>Lm<span class="hljs-symbol">NvbS9</span>hLzEz<span class="hljs-symbol">NDk0</span>MjYvMTE<span class="hljs-number">4</span><span class="hljs-symbol">NjAzMTYlMEElMjAlMjBsZXQlMjByZXN1</span>bHQlMjAl<span class="hljs-name">M0</span>QlMjAlMjIlMjIl<span class="hljs-name">M0</span>IlMEElMjAlMjBjb<span class="hljs-number">25</span>zdCUyMG<span class="hljs-symbol">NoYXJhY3</span>Rlc<span class="hljs-symbol">nMlMjAlM0</span>QlMjAlMjJBQk<span class="hljs-symbol">NERUZHSElKS0</span>x<span class="hljs-symbol">NTk9</span>QUVJTVFVWV<span class="hljs-number">1</span>hZWmFiY<span class="hljs-number">2</span>RlZmdoaWprb<span class="hljs-name">G1</span>ub<span class="hljs-number">3</span>Bxc<span class="hljs-symbol">nN0</span>dXZ<span class="hljs-number">3</span>eHl<span class="hljs-number">6</span>JTIyJT<span class="hljs-symbol">NCJTBBJTIwJTIwY29</span>uc<span class="hljs-number">3</span>QlMjBjaGFyYW<span class="hljs-symbol">N0</span>ZXJzTGVuZ<span class="hljs-number">3</span>RoJTIwJT<span class="hljs-symbol">NEJTIwY2</span>hhcmFjdGVycy<span class="hljs-number">5</span>sZW<span class="hljs-number">5</span><span class="hljs-symbol">ndGglM0</span>IlMEElMjAlMjBmb<span class="hljs-number">3</span>IlMjAlMjhsZXQlMjBpJTIwJT<span class="hljs-symbol">NEJTIwMCUzQiUyMGklMjAlM0</span>MlMjBsZW<span class="hljs-number">5</span><span class="hljs-symbol">ndGglM0</span>IlMjBpKyslMjklMjAl<span class="hljs-symbol">N0</span>IlMEElMjAlMjAlMjAlMjByZX<span class="hljs-symbol">N1</span>bHQlMjArJT<span class="hljs-symbol">NEJTIwY2</span>hhcmFjdGVycy<span class="hljs-number">5</span>jaGFyQXQlMjh<span class="hljs-symbol">NYXRoLmZsb29</span>yJTI<span class="hljs-number">4</span>TWF<span class="hljs-number">0</span>aC<span class="hljs-number">5</span>yYW<span class="hljs-number">5</span>kb<span class="hljs-number">20</span>lMjglMjklMjAqJTIwY<span class="hljs-number">2</span>hhcmFjdGVyc<span class="hljs-number">0</span>xlbmd<span class="hljs-number">0</span>aCUyOSUyOSUzQiUwQSUyMCUyMCU<span class="hljs-number">3</span>RCUwQSUyMCUyMHJldHVybiUyMHJlc<span class="hljs-number">3</span><span class="hljs-attr">VsdCUzQiUwQSU3</span>RCUwQSUwQWluaXQlMjglMjkl<span class="hljs-name">M0</span>I=</code></pre></div></details><p><img src="https://img.cyfan.top/pic/post/pasted-70.png" srcset="/img/loading.gif" alt="upload successful"></p><p>解密脚本，前面四行是这样的：</p><div class="hljs"><pre><code class="hljs javascript"><span class="hljs-comment">// Fake register for referrer to get warp plus bandwidth</span><span class="hljs-keyword">const</span> referrer = <span class="hljs-string">"0f44ddea-cc25-473a-a897-9a3c7a45ef79"</span>;<span class="hljs-keyword">const</span> timesToLoop = <span class="hljs-number">1024</span>;<span class="hljs-keyword">const</span> retryTimes = <span class="hljs-number">100</span>;<span class="hljs-comment">// How many sec to sleep, currently rate limit might be apply to per min per ip from my observation.</span><span class="hljs-keyword">const</span> sleepSeconds = <span class="hljs-number">30</span>;</code></pre></div><p>第二行 <code>const referrer</code> 是你的ID，点击设置=》更多设置=》诊断，客户端配置的ID就是你的ID,默认是我的,<span class="heimu">当然你不介意也可以帮我刷哦 </span></p><p>第三行 <code>timesToLoop</code>,指你刷几个GB流量，1024表示1024个模拟，一个模拟1GB，默认保持刷1TB。</p><p>第四行 <code>const retryTimes</code> 指失败重试几次,这个值越大越好,默认100次足够了.</p><p>第七行 <code>const sleepSeconds</code> 指失败后冷却几秒,个人测试下来发现值大约稳定在30s~50s间,太小了重试过多会封ip,太大了效率太低.默认为30.</p><p>安装nodejs环境,解密脚本,重命名为 <code>n.js</code> ,命令行进入脚本所在文件夹使用 <code>node n.js</code>,使劲刷吧!</p><blockquote><p>警告：玩过火了导致封号，本站不负责一切责任！</p></blockquote><h1 id="后言"><a href="#后言" class="headerlink" title="后言"></a>后言</h1><p>欸，很担心CF被这么玩会不会玩坏掉，拿到好处时才觉得CF良心啊！</p><p>由于脚本用的是Nodejs,而heroku也有nodejs环境,所以.嗯,对,你懂的.</p><p>嗯，又是一篇优雅的撸羊毛技巧。</p>]]></content>
    
    
    <categories>
      
      <category>撸羊毛</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CloudFlare</tag>
      
      <tag>撸羊毛</tag>
      
      <tag>奇淫巧计</tag>
      
      <tag>Warp+</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>免·爬·城·国内管理分享GoogleDrive</title>
    <link href="/2020/03/18/%E5%85%8D%C2%B7%E7%88%AC%C2%B7%E5%9F%8E%C2%B7%E5%9B%BD%E5%86%85%E7%AE%A1%E7%90%86%E5%88%86%E4%BA%ABGoogleDrive/"/>
    <url>/2020/03/18/%E5%85%8D%C2%B7%E7%88%AC%C2%B7%E5%9F%8E%C2%B7%E5%9B%BD%E5%86%85%E7%AE%A1%E7%90%86%E5%88%86%E4%BA%ABGoogleDrive/</url>
    
    <content type="html"><![CDATA[<p>昨天网上早早写完作业在Github上瞎逛，话说回来Github Explorer有时候真的很神奇给我推荐一些稀奇好用或正好急缺的东西，比如Accesser、MusicPlayer2、PHPProxy等等等等。结果昨天搜罗了这么一个极棒的玩意：<a href="https://github.com/maple3142/GDIndex" target="_blank" rel="noopener">GDIndex</a>。</p><h2 id="这个是拿过来干什么的"><a href="#这个是拿过来干什么的" class="headerlink" title="这个是拿过来干什么的"></a>这个是拿过来干什么的</h2><p>基于rClone和CFWorkers的脚本，可以免F下载上传管理GoogleDrive。</p><p>国内访问GoogleDrive总会被…咳咳…那个…对了…嗯…你懂的东西干掉,所以只能隔洋兴叹.说实话个人使用googledrive真的不频繁,当时注册的时候只有4GB,2017年注册至今,我就放了一部400MB的视频,根本没有用多少. 至于当时为什么不用,这是后面的事情了,这里暂时不讲.<br>只是不知道为什么,现在我的谷歌硬盘变成15GB了,emmmm,也不差.</p><p>这个脚本有两个作用:1.在国内管理GoogleDrive2.快速分享给国内用户.</p><p>说实话,这个正好填充我的缺陷,小文件我直接扔在Heroku+CF Always Online,静态文件缓存我调到一星期,勉强支撑私有云的下载;太大的文件直接放百度网盘上,虽然下载速度慢了点,但对于分享还是可以的;</p><p>但那种不大不小的文件,比如一个80MB的安装包,你让我放哪?放heroku?由于它有500MB的限制,似乎不可能;放百度网盘?就因此要启动一个客户端,还那么慢,我觉得估计没人会下载.</p><p>因此,原先准备放OneDrive上,但OneIndex脚本运行在Heroku上失败了…这个时候我看到了GDIndex.</p><p>…<br>简直上天!这是我搭好的公开分享:<br>[<a href="https://drive.cyfan.top" target="_blank" rel="noopener">https://drive.cyfan.top</a> ]<br>避免和谐,有用户密码,均为User.主要分享一些不是特别大的安装包,当然不会<br>放那些违反中国大陆法律的东西,某些人就省省心吧.</p><h2 id="搭建"><a href="#搭建" class="headerlink" title="搭建:"></a>搭建:</h2><p>搭建过程变得异常简单:</p><p>准备:</p><ul><li>Google账号(没有可以注册一个)</li><li>CloudFlare账号(可以没有自己的域名)</li></ul><h3 id="1-代码生成"><a href="#1-代码生成" class="headerlink" title="1:代码生成"></a>1:代码生成</h3><p>(确保在代理情况下进行,因为要登入googledrive)</p><p>进入[<a href="https://gdindex-code-builder.glitch.me/" target="_blank" rel="noopener">https://gdindex-code-builder.glitch.me/</a> ],</p><p><img src="https://img.cyfan.top/pic/post/pasted-52.png" srcset="/img/loading.gif" alt="upload successful" title="界面"></p><p>点击<kbd>Click me</kbd></p><p><img src="https://img.cyfan.top/pic/post/pasted-53.png" srcset="/img/loading.gif" alt="upload successful"></p><p>点击登入,允许(此时需要你的谷歌账号授权,如果你觉得这对你的账号造成了危险,可以换一个不常用的谷歌账号,反正我个人使用时没有问题)</p><p><img src="https://img.cyfan.top/pic/post/pasted-54.png" srcset="/img/loading.gif" alt="upload successful"><br>获取密钥:<br>回到[<a href="https://gdindex-code-builder.glitch.me/" target="_blank" rel="noopener">https://gdindex-code-builder.glitch.me/</a> ]，粘贴密钥</p><p>关于 <code>Default Root ID</code> 如果你只是管理自己个人网盘,私有使用,那么请保持默认,但如果和我一样是公开的,而且只希望访问其中一个文件夹内容,那么:</p><p>登入自己的谷歌drive</p><p><img src="https://img.cyfan.top/pic/post/pasted-55.png" srcset="/img/loading.gif" alt="upload successful"></p><p>进入希望分享的文件夹,比如 <code>Public</code></p><p><img src="https://img.cyfan.top/pic/post/pasted-56.png" srcset="/img/loading.gif" alt="upload successful"></p><p>那么地址栏就会变成这样:</p><div class="hljs"><pre><code class="hljs undefined">https:<span class="hljs-regexp">//</span>drive.google.com<span class="hljs-regexp">/drive/</span>folders<span class="hljs-regexp">/1Gv9Un9FGJtbpVY4-xuxI3ELsUzAlxwrx</span></code></pre></div><p>folders后面就是文件夹ID,我这里是 <code>1Gv9Un9FGJtbpVY4-xuxI3ELsUzAlxwrx</code></p><p>回到[<a href="https://gdindex-code-builder.glitch.me/" target="_blank" rel="noopener">https://gdindex-code-builder.glitch.me/</a> ]，粘贴ID</p><p><code>Enable authentication</code> 强烈建议开启,如果你不希望自己搭起来的GDIndex被和谐,请听信我的话!即使是公开分享,也最好设置一个!</p><p><code>Enable file uploading</code> 如果只是个人使用,请开启,如果公开分享…你肯定不希望你的网盘被拿来做公开网盘.</p><p>点击<kbd>Get Code</kbd>,底下会生成代码,这里就不公开展示了</p><h3 id="2-部署代码"><a href="#2-部署代码" class="headerlink" title="2.部署代码"></a>2.部署代码</h3><p>回到cloudflare,点击workers,新建,粘贴代码,重命名workers（比如pdrive）,点击部署,完成!</p><p>(我甚至都懒得贴图了,这一步真的没什么技术含量可言)</p><p>这个时候的地址是：<code>https://#WorkersName.#UserName.workers.dev</code> 把它输入地址栏直接访问，看看行不行。</p><h3 id="3-自选CDN-可选"><a href="#3-自选CDN-可选" class="headerlink" title="3.自选CDN(可选)"></a>3.自选CDN(可选)</h3><p>实际上到这一部已经完成了,直接访问workers网址就可以使用了,但速度很慢，而且搞不好某一天 <code>「羲农去我久」1PjT8X/2TCX3i。</code> 发威，把workers全盘封禁怎么办？</p><p>（这一步需要有你自己的域名，没有自己域名的可以不做，但速度就很慢了）</p><p>进入cloudflare，点击workers,新建路由，选择之前新建的Workers，写入需要绑定的域名：</p><p><img src="https://img.cyfan.top/pic/post/pasted-57.png" srcset="/img/loading.gif" alt="upload successful"></p><p><img src="https://img.cyfan.top/pic/post/pasted-58.png" srcset="/img/loading.gif" alt="upload successful"></p><p>确定，回到DNS，添加A记录，名字为刚刚绑定的那个，ip地址请去我博客-关于界面查看所有CFIPv4地址，这里比较推荐1.0.0.* CN2线路，速度不错。</p><p><img src="https://img.cyfan.top/pic/post/pasted-59.png" srcset="/img/loading.gif" alt="upload successful"></p><p>最好在加个ipv6，这样对于ipv4小水管比较好解决问题，本站暂时不添加，因为国内ipv6环境真的不是很好。</p><p>完成，试试自己的谷歌硬盘吧！</p><h2 id="一些比较棒的功能"><a href="#一些比较棒的功能" class="headerlink" title="一些比较棒的功能"></a>一些比较棒的功能</h2><h3 id="支持密码保护"><a href="#支持密码保护" class="headerlink" title="支持密码保护"></a>支持密码保护</h3><p>此处不详解。</p><h3 id="支持直接上传"><a href="#支持直接上传" class="headerlink" title="支持直接上传"></a>支持直接上传</h3><p><img src="https://img.cyfan.top/pic/post/pasted-60.png" srcset="/img/loading.gif" alt="upload successful"></p><p>自选CDN，上传速度很可观</p><p>但是有个问题，上传大于100MB的文件会随机失败，这应该是Workers的限制，因为免费Workers每分钟最多支持1000次，超过了就会暂时宕机</p><h3 id="支持离线下载"><a href="#支持离线下载" class="headerlink" title="支持离线下载"></a>支持离线下载</h3><p>这是我远远没有想到的，没想到还可以从网址获取，可惜不支持种子磁力电驴，也许可以和WebTorrent结合。</p><p>打开Upload From Url，输入网址：</p><p><img src="https://img.cyfan.top/pic/post/pasted-61.png" srcset="/img/loading.gif" alt="upload successful"></p><p><img src="https://img.cyfan.top/pic/post/pasted-62.png" srcset="/img/loading.gif" alt="upload successful"></p><p><img src="https://img.cyfan.top/pic/post/pasted-63.png" srcset="/img/loading.gif" alt="upload successful"></p><p><img src="https://img.cyfan.top/pic/post/pasted-64.png" srcset="/img/loading.gif" alt="upload successful"></p><p>不过上面也写的很清楚，由于CFWorkers的限制，下载大文件有可能会失败。</p><h3 id="支持免F下载"><a href="#支持免F下载" class="headerlink" title="支持免F下载"></a>支持免F下载</h3><p><img src="https://img.cyfan.top/pic/post/pasted-65.png" srcset="/img/loading.gif" alt="upload successful"></p><p>速度很可观，将近1.5MB/s，但请不要使用IDM！本来速度就可以了，如果使用IDM多线程，会导致CFWorkers提早达到每分钟阈值导致无法下载！</p><h3 id="支持在线预览视频文档音乐"><a href="#支持在线预览视频文档音乐" class="headerlink" title="支持在线预览视频文档音乐"></a>支持在线预览视频文档音乐</h3><p><img src="https://img.cyfan.top/pic/post/pasted-66.png" srcset="/img/loading.gif" alt="upload successful"></p><h3 id="支持放一些XXX福利的东西"><a href="#支持放一些XXX福利的东西" class="headerlink" title="支持放一些XXX福利的东西"></a>支持放一些XXX福利的东西</h3><p>这就是谷歌硬盘和百度网盘最大的区别（笑）<br>但我绝对不会在公开云上放这些的！（认真脸！）</p><h2 id="一些比较严重的缺陷"><a href="#一些比较严重的缺陷" class="headerlink" title="一些比较严重的缺陷"></a>一些比较严重的缺陷</h2><h3 id="上传很容易失败"><a href="#上传很容易失败" class="headerlink" title="上传很容易失败"></a>上传很容易失败</h3><p><img src="https://img.cyfan.top/pic/post/pasted-78.png" srcset="/img/loading.gif" alt="upload successful"></p><p>这个问题是在我试图上传htmlDesigner时发现的，上传上传就卡住了，原来是达到100MB,CloudFlare免费计划最多上传100MB限制，而且有时候上传完成却没有出现等等。这个就比较影响用户体验了。</p><h3 id="没有新建文件夹功能"><a href="#没有新建文件夹功能" class="headerlink" title="没有新建文件夹功能"></a>没有新建文件夹功能</h3><p>这个还行</p><h3 id="没有删除功能"><a href="#没有删除功能" class="headerlink" title="没有删除功能"></a>没有删除功能</h3><p>这个就比较糟心了</p><h3 id="水管有限"><a href="#水管有限" class="headerlink" title="水管有限"></a>水管有限</h3><p>这个倒还好，只要不太过分就行</p><h1 id="后言"><a href="#后言" class="headerlink" title="后言"></a>后言</h1><p>至少我已经很满意了，起码可以充分利用那15GB空间，而且可以外链，所以拿来当图床还行，只是延迟大了点。更棒的是只要不大规模分享，放些XXX还是可以滴…..</p><p>至于为什么以前不用GD原因:</p><ul><li>任何操作(哪怕是删除)就要F一次,我真的没这个耐心.</li><li>上传个大文件就很糟心了,免费代理的上传速度就…而且丢包断线常有,经常上传失败</li><li>4GB(GoogleDrive)&lt;2TB(BaiduDrive)</li><li>没有离线下载功能</li><li>当时百度限速还没有这么严重,哪怕是油猴脚本+IDM轻松跑满速(12.5MB/s),下部4GB电影6分钟完成</li></ul><p>现在百度网盘下载速度真的是…PanDownload是很聪明,采用Aria2多线程尽可能突破百度单线程限速,采用分享下载绕开账号限制,采用打包下载绕开IP限制…架不住百度网盘铁了心收费，现在单线程下载只有可怜的10kb/s…  </p><p>网上很多在疯传除了PanDownload的下载器,都是声称不限速,其实还没有pandownload聪明,有的用cookie登陆其实和账号密码登陆一样,只是多了个障眼法,让用户感觉安全一些;  </p><p>有的说爱奇艺播放器…好吧我这个不能驳回，但当时我下载了两部哈利波特电影将近12GB后又被限速了…</p><p>或者还有一个还可以说机智的下载器:ENFI下载器,采用P2P下载,这样从根本解决源头慢的问题,但是有流量限制,而且资源不热门时就根本没有加速效果了..</p><p>甚至现在百度网盘变本加利,多了个临时下载加速流量券,所以百度网盘这是侧面承认限速了吗???</p><p>欸,毕竟百度网盘采用新用户2TB本身就是个错误,虽然采用哈希储存的方式,架不住下载人多速度快.</p>]]></content>
    
    
    <categories>
      
      <category>撸羊毛</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CloudFlare</tag>
      
      <tag>Workers</tag>
      
      <tag>网盘</tag>
      
      <tag>干货</tag>
      
      <tag>脚本</tag>
      
      <tag>GoogleDrive</tag>
      
      <tag>下载</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一次愉快的更换域名经历</title>
    <link href="/2020/03/17/%E4%B8%80%E6%AC%A1%E6%84%89%E5%BF%AB%E7%9A%84%E6%9B%B4%E6%8D%A2%E5%9F%9F%E5%90%8D%E7%BB%8F%E5%8E%86/"/>
    <url>/2020/03/17/%E4%B8%80%E6%AC%A1%E6%84%89%E5%BF%AB%E7%9A%84%E6%9B%B4%E6%8D%A2%E5%9F%9F%E5%90%8D%E7%BB%8F%E5%8E%86/</url>
    
    <content type="html"><![CDATA[<p>五天前买了白菜价cyfan.top，由于没有实名被ServerHold了，从昨天回了趟老家，顺便拿回了我的身份证，早上八点开始了实名认证的经历。</p><p>现在，全站从 <code>cyfan.ga</code> 永久迁址到 <code>cyfan.top</code>。</p><p>所花的时间：从早上8点到现在11点，只用了3小时。</p><p>这已经很快了好吧…</p><h1 id="实名："><a href="#实名：" class="headerlink" title="实名："></a>实名：</h1><p>由于事先为了方便提交，我很早就下好了阿里云手机端。</p><p>拿到身份证，点击阿里云，分别实名认证账号、信息模板、域名账号。</p><p>接着，我看了一下说明，实名认证大约要3-5天。</p><p>好吧╮(╯-╰)╭，这工单处理速度真的是。</p><p>结果刚发完牢骚，手机信息就给我发进来，说信息模板实名认证成功。</p><p>.<br>..<br>…<br>….</p><p>这就是你说的3天?是不是你的时间跟我不太一样啊,这工单的处理速度真的是…还好未成年可以实名…</p><p>不出3分钟,当我正在实名认证支付宝(对,我的支付宝还没有实名认证),连续两条信息发过来,分别是账号和域名实名成功…</p><p>说实话，这速度真的是大大超乎我的预料，这里真心赞扬阿里云工单的处理速度！给个赞！</p><p>接着等待Whois上ServerHold消失，等待了15分钟,终于!:</p><p><img src="https://img.cyfan.top/pic/post/pasted-42.png" srcset="/img/loading.gif" alt="upload successful"></p><h1 id="更换NS"><a href="#更换NS" class="headerlink" title="更换NS"></a>更换NS</h1><p>由于习惯了CF的简洁控制台、良心的附加服务、高效的更新和较快的速度，我还是迁回了CF：</p><p>更换NameServer：</p><p><img src="https://img.cyfan.top/pic/post/pasted-43.png" srcset="/img/loading.gif" alt="upload successful"></p><p>回到CloudFlare上，删除重新添加，结果卡在了这么哭笑不得的步骤：</p><p><img src="https://img.cyfan.top/pic/post/pasted-44.png" srcset="/img/loading.gif" alt="upload successful"></p><p>NS你让我怎么改？？？</p><p>好吧，估计是ServerHold缓存没有搞回来,预计24小时…</p><p>于是手贱在CF论坛上发了一篇求助:</p><p><img src="https://img.cyfan.top/pic/post/pasted-46.png" srcset="/img/loading.gif" alt="upload successful"></p><p>但!问!题!是!当我发出这篇求助后3秒不到,我的邮箱里就接到一篇来自CF的邮件,显示域名托管成功:</p><p><img src="https://img.cyfan.top/pic/post/pasted-47.png" srcset="/img/loading.gif" alt="upload successful"></p><p>当时我脸都黑了,你这个托管时间有点及时啊,为什么偏偏在我发出求助后…</p><p>欸不管了,开工!</p><h1 id="更替域名"><a href="#更替域名" class="headerlink" title="更替域名"></a>更替域名</h1><p>期间的痛苦我觉得没必要在这里重新复述一遍了,也就是一个一个删除,一个一个增加,Github飞快的解绑加绑,CloudFlare修改Workers,这也没得抱怨,欸,起码比上次更换Hexo环境轻松多了.</p><p>很快,所有替换都完毕了,接下来要处理第三方服务了.</p><h1 id="第三方服务"><a href="#第三方服务" class="headerlink" title="第三方服务"></a>第三方服务</h1><h2 id="Google-Adsense"><a href="#Google-Adsense" class="headerlink" title="Google Adsense"></a>Google Adsense</h2><p>说实话广告收入本来就是附加的,到现在只赚了0.24$,折合人民币一块五毛,正好抵得上2个月的域名费用。。。</p><p>添加域名，添加代码，提示人工审核要2星期，欸，经历以前的添加广告的经历，我觉得可能不止，算了，添加都添加了，还能怎样…估计两个星期我都要上学去了..</p><h2 id="Gitalk"><a href="#Gitalk" class="headerlink" title="Gitalk"></a>Gitalk</h2><p>由于换了域名,回源地址要改一下,这里也就不展开说了</p><h2 id="Google-Search"><a href="#Google-Search" class="headerlink" title="Google Search"></a>Google Search</h2><p>之前仅仅只是在谷歌上提交了搜索,也不知道怎么搞得,百度必应DuckDuckGo上都有了(也不是什么坏事),不过主要来源是谷歌,而且只是在谷歌上搞.</p><p>谷歌还是比较贴心的,多了一个快速迁移,只要是更换域名就都可以使用:</p><p><img src="https://img.cyfan.top/pic/post/pasted-48.png" srcset="/img/loading.gif" alt="upload successful"></p><p><img src="https://img.cyfan.top/pic/post/pasted-49.png" srcset="/img/loading.gif" alt="upload successful"></p><p>PS:使用时需要添加301永久重定向,CloudFlare上可以快速设置PageRule达到,不过Free最多设置三个…(资本主义大佬)</p><p><img src="https://img.cyfan.top/pic/post/pasted-51.png" srcset="/img/loading.gif" alt="upload successful" title="你这个有点小贵啊"></p><p>由于 <code>.ga</code> 这个域名还有4个月,我还有其他用途,总不可能泛域名301吧,所以也就添加了两个原先在谷歌上有较多记录的两个.</p><p><img src="https://img.cyfan.top/pic/post/pasted-50.png" srcset="/img/loading.gif" alt="upload successful"></p><h2 id="QQ企业邮箱"><a href="#QQ企业邮箱" class="headerlink" title="QQ企业邮箱"></a>QQ企业邮箱</h2><p>eeeeeeeem,我自己是删除了原先的账号重新添加,当然这是最简单的法子,因为这个账号里真的没什么可以用的.</p><h1 id="个人API类"><a href="#个人API类" class="headerlink" title="个人API类"></a>个人API类</h1><p>这个真的很蛋疼,因为我自己都忘记了到底添加了多少个api,只能依靠Github自带功能搜索 <code>cyfan.ga</code> 手动替换,对于一些多的api就直接下载,靠Notepad++的批量替换功能解决,比如Bing美图一替换就有40个,这个做起来还是可以的.</p><h1 id="源站跳转"><a href="#源站跳转" class="headerlink" title="源站跳转"></a>源站跳转</h1><p>由于本人比较活泼,在各个站点都有留下足迹,别人点击就可以进入我的博客.</p><p>但是全部301跳转是不可能的,所以干脆加了个CFWorker+GithubPages+JS跳转,重写了一下UI,访问原先站点就通通跳向 <code>cyfan.top</code></p><h1 id="安定下来了"><a href="#安定下来了" class="headerlink" title="安定下来了"></a>安定下来了</h1><p>话说为什么要花大钱(9￥)买个 <code>.top</code> 域名，纯粹是想安定下来好好写博客， <code>.ga</code> 毕竟是免费1年域名,测试开发还行,想永久下去真的很难了,而且最主要的是Freenom最近一直关闭注册,一直换域名就很难让别人能关注到你写的东西..</p><p>阿里云是真的便宜, <code>.top</code>首年只要 <code>9￥</code>，可以随时续费，接下来每年都只要续费 <code>26￥</code>,对于我这种学生党而言,过年的时候支付宝攒个26块还是有的.</p><p>说实话搭建这个站点的费用真的不高,每年花费点鼠标钱（一个鼠标30块）就可以永久维护下去</p><ul><li>静态托管:Github (Coding托管些大文件): <strong>0.00￥/year</strong></li><li>动态托管:Heroku(600hours/m) <strong>0.00￥/year</strong></li><li>域名: <code>.top</code> 白菜价 <strong>26.00￥/year</strong></li><li>CDN:CloudFlare,国内外还行的速度(当然不指望在特殊时期还能保持较高的速度) <strong>0.00￥/year</strong></li></ul><p>另外Adsense提供了微薄的收入…(0.24$/year)</p><p>折算下来折腾这个站点真的很值得了,花那么一点小钱就可以在互联网一个角落里打理一片属于自己的天地,这真的很让人兴奋.</p><p><span class="heimu">加个域名的好处就是可以随便加友链啦,hiahiahia○( ＾皿＾)っHiahiahia…</span></p><p>顺便测试了一下全国访问情况:</p><p><img src="https://img.cyfan.top/pic/post/pasted-45.png" srcset="/img/loading.gif" alt="upload successful"></p><p>还行,那就这么办吧!</p>]]></content>
    
    
    <categories>
      
      <category>爱折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>域名</tag>
      
      <tag>更换</tag>
      
      <tag>迁址</tag>
      
      <tag>公告</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Bing美图与故事PHP正式上线</title>
    <link href="/2020/03/16/Bing%E7%BE%8E%E5%9B%BE%E6%95%85%E4%BA%8BPHP%E6%AD%A3%E5%BC%8F%E4%B8%8A%E7%BA%BF/"/>
    <url>/2020/03/16/Bing%E7%BE%8E%E5%9B%BE%E6%95%85%E4%BA%8BPHP%E6%AD%A3%E5%BC%8F%E4%B8%8A%E7%BA%BF/</url>
    
    <content type="html"><![CDATA[<p>欸…自己挖的坑必须要自己填啊…</p><p>最近听信了某个·大佬·<span class="heimu" title="你知道的太多了">其实是把我做实验的</span>,在Hexo环境安装了dplayer,结果装到一半,断网了,重新安装就疯狂报错,以至于想要npm卸载都卸不了,结果手贱，手动删除了几个npm依赖，结果导致整个Hexo环境崩溃了<img src="https://img.cyfan.top/pic/post/pasted-5.png" srcset="/img/loading.gif">，一旦进行 <code>hexo server -w</code> 就会冒出一大片红海。害的我不得不备份文章和主题后删除了整个Hexo环境，从头安装Hexo，结果忘记了我还安装了一大堆插件，只好一个一个安装回去，期间的痛苦我真的再也不想回忆一遍,新手可以自己安装一遍Hexo+数十个插件，体验一下。问题是还把鼠标按坏了,现在打字变成异常困难的事情了…<img src="https://img.cyfan.top/pic/post/pasted-5.png" srcset="/img/loading.gif"></p><p>欸，最近逃课太频繁，理科全挂科了，甚至在这一次<span class="heimu" title="你知道的太多了">尖子班</span>考试里化学挂科了，不应该这样的啊，我以前化学老棒老棒的了，看起来要拾回学习的心了。所以以后站点维护估计不会那么频繁了。</p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这两天因为Heroku每月时间重置了，又可以接着用了，于是考虑了很长时间决定工具箱和私有云重新上线。</p><p>不过工具箱因为绝大部分都是静态，没几个是动态的，所以打算采用动静态前后分离，动态资源以接口形式接到静态页面上，这样可以尽可能减少动态Heroku的运行时间，同样由于前端CloudFlare缓存大大减少调用时间。而私有云静态不可能,所以完全动态,又因为Heroku的时间计算是一个没验证账户一个月600小时,上个月不知道分成两个应用运行…所以干脆私有云和接口并在了一起，加上CloudFlare2hours的缓存，600小时一个月应该够用了…</p><h2 id="关于bing接口"><a href="#关于bing接口" class="headerlink" title="关于bing接口"></a>关于bing接口</h2><p>以前我在博客上写过怎么用BingPHP,但当时是用缓存的方式写入,但换到heroku上缓存写入就不可能了,于是想想办法解决, <code>windows.location</code> 会导致强制https至bing,对于不支持http就很吃亏了,最终采用 <code>header</code> 注入方式.</p><p>由于如果没有获取版权总觉得空荡荡，所以又特地写了一个获取bingcopyright的PHP，同时好好恶补了一下正则获取和解析xml。</p><p>还有当时没空写UI,这次特地去淘了两个css3和html5漂亮的界面,同时解决了手机端莫名其妙的UI问题.采用js检测UA的方式实现移动端和桌面端分别跳转.</p><p>这是实际使用:</p><p>桌面端:</p><p><img src="https://img.cyfan.top/pic/post/8.gif" srcset="/img/loading.gif" alt="实际使用" title="桌面端动图"></p><p>手机端:</p><img src="https://img.cyfan.top/pic/post/9.gif" srcset="/img/loading.gif" width="200%" height="200%"><p>解决手机端不兼容桌面端问题：</p><p>手机横屏bug（已修复）：</p><p><img src="https://img.cyfan.top/pic/post/pasted-40.png" srcset="/img/loading.gif" alt="upload successful"></p><p>以及我的头像版权镇压，保证没有bug（不要删除ヽ（≧□≦）ノ！）</p><p><img src="https://img.cyfan.top/pic/post/pasted-41.png" srcset="/img/loading.gif" alt="upload successful"></p><p>已开源，<a href="https://github.com/ChenYFan/Bing_Pic_and_Copyright_Catcher" target="_blank" rel="noopener">https://github.com/ChenYFan/Bing_Pic_and_Copyright_Catcher</a><br>不过暂时不允许转载删除版权和头像,因为修改这个花费我太多精力了,感谢您的理解!</p><p>今日Bing美图：</p><p><img src="https://pan.cyfan.top/api/bing/bing.php" srcset="/img/loading.gif" alt="Bing" title="今日Bing美图"></p>]]></content>
    
    
    <categories>
      
      <category>屌代码</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PHP</tag>
      
      <tag>Bing</tag>
      
      <tag>美图</tag>
      
      <tag>版权</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>工具箱和私有云恢复！顺便讨论一下免费php供应商怎么选=&gt;</title>
    <link href="/2020/03/13/%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%92%8C%E7%A7%81%E6%9C%89%E4%BA%91%E6%81%A2%E5%A4%8D%EF%BC%81/"/>
    <url>/2020/03/13/%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%92%8C%E7%A7%81%E6%9C%89%E4%BA%91%E6%81%A2%E5%A4%8D%EF%BC%81/</url>
    
    <content type="html"><![CDATA[<h1 id="所有"><a href="#所有" class="headerlink" title="所有"></a>所有</h1><p>早上折腾了3个小时，终于完美恢复了两个因为heroku宕机而失效的php网站。</p><p>现在选择的是这家免费php ： <a href="https://ProFreeHost.com" target="_blank" rel="noopener">ProFreeHost</a></p><p><span class="heimu" title="你知道的太多了">你让我买一台服务器???对不起,做不到,没钱.</span><span class="heimu" title="你知道的太多了">不过捐个八十一百还有可能会考虑</span></p><p>讲讲最近跳槽的free php hosts</p><h2 id="000Webhost"><a href="#000Webhost" class="headerlink" title="000Webhost"></a>000Webhost</h2><p>之前一直使用000webhost,这里给大家提个醒,千万不要用三蛋空间的东西了!!!太坑了!!!!虽然1GB硬盘10GB流量免费套餐很诱人,可完全就是个骗子!</p><p>之前在很多社交网站上都看到有人极力推荐，没广告，速度快。</p><p>PS：现在变成300MB磁盘和3GB带宽了：</p><p><img src="https://img.cyfan.top/pic/post/pasted-38.png" srcset="/img/loading.gif" alt="upload successful"></p><p>可我真的登进去后才发现暗坑汹涌，<br>随便捡几个：</p><ul><li>绑定自定义域名最多<strong>2个</strong>，三个？对不起，请付费或左转至上司Hostinger购买<del>炒鸡便宜</del>的vps主机</li><li>MySQL数据库最多<strong>2个</strong>，三个？对不起，请付费或左转至上司Hostinger购买<del>炒鸡便宜</del>的vps主机</li><li>右下角的000wenhost广告需要你的支持，不能关闭哦！要关闭？对不起，请付费或左转至上司Hostinger购买<del>炒鸡便宜</del>的php</li><li>超长时间在线，保证你的网站能被别人访问！（官方介绍） 实际情况：在经历了多重人机检测、多重广告关闭，我终于在一个隐藏的很深的协议里看到了免费网站在线时间不少于95%，实际上个人检测在90%上下波动。</li><li>对于中国服务很不友好，其中不仅仅有 <code>「羲农去我久」1PjT8X/2TCX3i。</code> 的功劳，他自己也对来自中国的ip进行了限速。</li><li>以及隐私政策里写的很隐蔽的 ·我们可以在特殊情况下掌握您账户的控制权 ·</li><li>…</li></ul><p>以至于首页极其搞笑的计数器：</p><p><img src="https://img.cyfan.top/pic/post/7.gif" srcset="/img/loading.gif" alt="upload successful" title="中间短暂的空白是刷新"></p><p>当时我注册了两个账号,一个拿来搭建网站,另一个搭建 <code>「故人重分携，临流驻归驾」1lDFXf/1wDWhT。</code> 个人使用,结果没用几天搭建的  <code>「故人重分携，临流驻归驾」1lDFXf/1wDWhT。</code> 直接给我Block了，点进去说是第三方服务举报，说我违反了使用条约，就把整个账户禁用了，而且恢复还要提交个人身份证明。</p><p><img src="https://img.cyfan.top/pic/post/pasted-37.png" srcset="/img/loading.gif" alt="upload successful"></p><p>？？？？？？？？？</p><p>见了鬼了，我就想问一下，搭个个人镜像哪来的第三方？流量没走到20MB，使用不超过5天，根本没有理由就把我禁止了，什么玩意？</p><p>更令人难受的是没过一星期，把我的工具箱和私有云也给禁用了，也是同样的第三方举报，也是违反使用条约，也是整个账户禁用。</p><p>我就服了，直接说不干不行吗，为什么p话怎么多？？？</p><p>随便一找就在百度上找到难兄难弟：</p><p><img src="https://img.cyfan.top/pic/post/pasted-36.png" srcset="/img/loading.gif" alt="upload successful" title="emmmmm..."></p><p>幸好我的所有网站资料一直有一份备份在本地，不然整个网站没了我就要疯了。</p><p>幸好我博客没有使用动态，要是连窝颠了那不就完蛋了。</p><p>况且对于000webhost种种限制我真的没办法忍受,于是我就出坑了.</p><h2 id="heroku"><a href="#heroku" class="headerlink" title="heroku"></a>heroku</h2><p>这个其实我很早就开用了.</p><p>这个还是比较良心的,免费没验证的用户最多五个应用,经过信用卡验证的最多20个,支持php\nodejs\ruby\python主流网页应用.</p><p>据这个nodejs可以搭建代理,php可以搭建 <code>「故人重分携，临流驻归驾」1lDFXf/1wDWhT。</code>,结果Youtube上涌现出一堆 <code>「遥夜亭皋闲信步，乍过清明，早觉伤春暮。数点雨声风约住，朦胧淡月云来去」qzNyk/2xYh2k。</code> 、 <code>「去郭轩楹敞，无村眺望赊。澄江平少岸，幽树晩多花。细雨鱼儿出，微风燕子斜。城中十万戸」3tdLut/3nY4xB。</code>等等撸羊毛技巧。不过啊，同学们，撸羊毛也要有限度啊，把羊撸死了还撸什么羊毛啊！！，现在Heroku国内下载已经严重限速到15kb/s，部分情况下直接阻断。不过这个问题可以通过CFWorkers解决。</p><p>上传方式有点少,一般用Git方式或直接绑定github.</p><p>当然也有几条有点坑的问题</p><ul><li>每月600hours运行，添加银行卡验证再加400hours（实际上600hours够用了，平均每天能运行20小时）</li><li>未绑定银行卡不能使用CNAME绑定域名；这个比较坑，如果只是搭建网站还能用CFWorkers。</li><li>以及半小时没人访问休眠，有人访问会自动唤醒，但大概要5秒。</li></ul><p>之前就一直使用这种方案，感觉运行的还行，不过前几个月不知道为什么只要是php运行就会报错,现在好了，不过已经换了就懒得还回来了。</p><h2 id="ProFreeHost"><a href="#ProFreeHost" class="headerlink" title="ProFreeHost"></a>ProFreeHost</h2><p>这家是今年新开的，不过广告没做的很响，也没多少人推荐。</p><p>似乎可以无限注册，每注册一个就会给一个独立ip，但是不是固定的暂时不知道</p><p>支持NS绑定域名（不过获取到独立IP后可以用A记录绑定）</p><p>不过独立ip全部都被 <code>墙</code> 了,只能用CFCDN复活。</p><p>只是无法添加SSL证书很蛋疼，那个添加SSL的cPanel界面死活进不去，害的我不得不把CloudFlare改成链接到源服务器不加密，折腾了将近一小时。</p><p>上传方式和000webhost一样，支持网页上传和FTP上传，只能说还行。</p><p>cpannel界面烂的一撇，不过至少还能用，就先凑合吧。</p><p>隐私政策说的很清楚，不会莫名其妙禁用账户，不过实际效果还需要检验。</p><p>欸，目前看来这个先凑合着用吧。</p><p>不过还行的是，支持php修改文件，也就是说我的EncodeExplorer也支持上传，在国内免翻也能上传文件，这个还行。</p><p><img src="https://img.cyfan.top/pic/post/pasted-39.png" srcset="/img/loading.gif" alt="upload successful"></p><p><del>游客账号：admin<br>密码： admin<br>游客账号只能浏览，不能能添加上传删除。</del></p><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><p>欸，现在也只能走一步看一步了，<code>.top</code> 域名这事搞得我浑身难受,至少今天把php服务搞定了,也行,每天都有小突破.</p><hr><p>华丽丽的分割线</p><hr><p>2020年3月16日添加：</p><p>真不好意思，折腾了这么多天，又把数据全部迁回Heroku了。</p><p>欸，ProFreeHost其实有个地方相当的坑，单文件最多只能存储4M，再大就直接403了，欸，算了，就当作临时盘白嫖吧。</p><p>到最后来还是Heroku靠谱。</p>]]></content>
    
    
    <categories>
      
      <category>要公告</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PHP</tag>
      
      <tag>撸羊毛</tag>
      
      <tag>免费</tag>
      
      <tag>工具箱</tag>
      
      <tag>私有云</tag>
      
      <tag>恢复</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>白菜价域名的问题</title>
    <link href="/2020/03/12/%E7%99%BD%E8%8F%9C%E4%BB%B7%E5%9F%9F%E5%90%8D%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <url>/2020/03/12/%E7%99%BD%E8%8F%9C%E4%BB%B7%E5%9F%9F%E5%90%8D%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>……………………………………………</p><h1 id="没有开头的开头"><a href="#没有开头的开头" class="headerlink" title="没有开头的开头"></a>没有开头的开头</h1><p>今天2020年3月12日早上去万网，发现<code>.top</code>域名首年只要9块钱.</p><p>真的只要9块钱,而且下一年续费也炒鸡便宜,只要26元,这点小钱还是付的起的.</p><p><img src="https://img.cyfan.top/pic/post/pasted-21.png" srcset="/img/loading.gif" alt="upload successful"></p><p>因为自己的.ga域名毕竟是免费域名,拿出去没牌面.Freenom半死不活,现在又不能重新购买白嫖撸羊毛,反正9元也不贵,买就买吧，就把.top换成永久站点名字也行.</p><p>然后手贱,一步一步点下去,支付宝一扫,就在那指纹按下去的一瞬间,我突然意识到一件事情,不用实名认证吗?</p><p>结果低头一看,支付成功.</p><p>emmmmmm…既然买了,那就看看吧.</p><p>点进去,默认的NS是阿里云,用这个很容易被ServerHold,而且不能用CFCDN.</p><p>国内备案你就让我别想了,你让我手持身份证拍照很抱歉我做不到,况且我服务器本来就是白嫖Github+CF高速香港CDN不在国内,也不需要备案.</p><p>于是我就换成了CoudFlare的NameServer:</p><p><img src="https://img.cyfan.top/pic/post/pasted-22.png" srcset="/img/loading.gif" alt="upload successful"></p><p>结果CloudFlare死活不肯接受:</p><p><img src="https://img.cyfan.top/pic/post/pasted-23.png" srcset="/img/loading.gif" alt="upload successful"></p><p>但是Whois已经确认绑定完成了.</p><p>…</p><p>我当时就无语了,NS解析已经删除了,人家whois也说可以了,怎么就你不行呢?</p><p>放ICANN Lookup上查:</p><p><img src="https://img.cyfan.top/pic/post/pasted-24.png" srcset="/img/loading.gif" alt="upload successful"></p><p>怎么就被serverHold了???????还有注册姓名全部是空的为什么????</p><p>前往ICANN帮助文档:</p><p><img src="https://img.cyfan.top/pic/post/pasted-26.png" srcset="/img/loading.gif" alt="upload successful"></p><div class="hljs"><pre><code class="hljs undefined">If you provided delegation information (name servers), this status may indicate <span class="hljs-keyword">an</span> issue <span class="hljs-keyword">with</span> your domain that needs resolution. If so, you should contact your registrar <span class="hljs-built_in">to</span> request more information. If your domain does <span class="hljs-keyword">not</span> have <span class="hljs-keyword">any</span> issues, but you need <span class="hljs-keyword">it</span> <span class="hljs-built_in">to</span> <span class="hljs-built_in">resolve</span> <span class="hljs-keyword">in</span> <span class="hljs-keyword">the</span> DNS, you must <span class="hljs-keyword">first</span> contact your registrar <span class="hljs-keyword">in</span> order <span class="hljs-built_in">to</span> provide <span class="hljs-keyword">the</span> necessary delegation information.</code></pre></div><p>至少以我现在的英语水平,还是能勉强读懂的,大意就是注册商没有给予完整的注册人信息;</p><p>可是我在万网填的东西比当时Freenom填的东西还要多,怎么就没完整呢???</p><p>回到万网,我找了找帮助文档:</p><p><img src="https://img.cyfan.top/pic/post/pasted-25.png" srcset="/img/loading.gif" alt="upload successful"></p><p><img src="https://img.cyfan.top/pic/post/pasted-27.png" srcset="/img/loading.gif" alt="upload successful"></p><p>行了行了,到这一步我也明白了,简单的说不给实名认证就故意不填写完整,故意Serverhold,目的就是要实名认证.</p><p>可是,问题是我身份证落在老家,现在疫情这么严重,你让我怎么回去拿????</p><p>(而且问题是我还是个学生,未成年…)</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>后来想一想,万网域名白菜价肯定是有它的原因的,毕竟不拿点用户隐私资料,不应付工信部压力,这饭真的没法恰了.</p><p>欸,算了, <code>.top</code> 买来也不算贵,而且 <code>cyfan.ga</code> 还有5个月余额,先吊这吧,有空再换站点.</p><p>说实话当时建立这个博客纯粹是试水,纯粹测试一下有没有写博客的毅力,大家看看我以前的博文就知道了,基本都是直接搬运的,这也是为什么用免费域名的原因,考试考完了仔细思考了一下,发现自己创作博文更加有趣,结果最近就入水了…</p><p>白菜价域名确实便宜,Godaddy上最经济的续费价格域名应该是<code>.de</code>,大概每年56RMB,其它的大都首年便宜,续费就令人望而止步了.</p><p>欸,还能说什么呢,既然买了,就更应该好好写.</p>]]></content>
    
    
    <categories>
      
      <category>随心记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>域名</tag>
      
      <tag>便宜</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何不出CloudFlare随便搞一搞将托管在其上的网站速度提升20倍</title>
    <link href="/2020/03/11/%E5%A6%82%E4%BD%95%E4%B8%8D%E5%87%BACloudFlare%E9%9A%8F%E4%BE%BF%E6%90%9E%E4%B8%80%E6%90%9E%E5%B0%86%E6%89%98%E7%AE%A1%E5%9C%A8%E5%85%B6%E4%B8%8A%E7%9A%84%E7%BD%91%E7%AB%99%E9%80%9F%E5%BA%A6%E6%8F%90%E5%8D%8720%E5%80%8D/"/>
    <url>/2020/03/11/%E5%A6%82%E4%BD%95%E4%B8%8D%E5%87%BACloudFlare%E9%9A%8F%E4%BE%BF%E6%90%9E%E4%B8%80%E6%90%9E%E5%B0%86%E6%89%98%E7%AE%A1%E5%9C%A8%E5%85%B6%E4%B8%8A%E7%9A%84%E7%BD%91%E7%AB%99%E9%80%9F%E5%BA%A6%E6%8F%90%E5%8D%8720%E5%80%8D/</url>
    
    <content type="html"><![CDATA[<p>这是加速前的压力测试：<br><img src="https://img.cyfan.top/pic/post/5.gif" srcset="/img/loading.gif" alt="图片"></p><p>这是加速后的压力测试：<br><img src="https://img.cyfan.top/pic/post/6.gif" srcset="/img/loading.gif" alt="图片"></p><p>这是我头一次一天更新两篇博文.</p><h1 id="：（"><a href="#：（" class="headerlink" title="：（"></a>：（</h1><p>之前说过，Coding实名认证蛋疼，转到Github上又速度难受。</p><p>本来以为CloudFlareCDN能给我加速，结果今天博客压力测试时只有50kb/s</p><p>网上查了很多方法才明白，CloudFlare免费账户虽然能使用CDN，但是只有两条很慢的线。</p><p>ipv4：104.28.16.222以及104.28.16.223，速度慢的一撇。</p><p>本来以为CloudFlare炒鸡良心，现在发现其实还是个资本主义老大。</p><p>欸，能免费用DNS就不错了，不能这么贬低CF。</p><p>后来偶然间发现CloudFlareCDN之间消息互通基本没延迟，也就是CDN可以自选，网上搜罗了一堆CDN：</p><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-number">108.162</span><span class="hljs-number">.236</span><span class="hljs-number">.1</span>/<span class="hljs-number">24</span> 联通 走美国<span class="hljs-number">172.64</span><span class="hljs-number">.32</span><span class="hljs-number">.1</span>/<span class="hljs-number">24</span> 移动 走香港<span class="hljs-number">104.16</span><span class="hljs-number">.160</span><span class="hljs-number">.1</span>/<span class="hljs-number">24</span> 电信 走美国洛杉矶<span class="hljs-number">172.64</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>/<span class="hljs-number">24</span> 电信 美国旧金山<span class="hljs-number">104.20</span><span class="hljs-number">.157</span><span class="hljs-number">.0</span>/<span class="hljs-number">24</span> 联通 走日本<span class="hljs-number">104.28</span><span class="hljs-number">.14</span><span class="hljs-number">.0</span>/<span class="hljs-number">24</span> 移动 走新加坡<span class="hljs-number">104.23</span><span class="hljs-number">.240</span><span class="hljs-number">.0</span><span class="hljs-number">-104.23</span><span class="hljs-number">.243</span><span class="hljs-number">.254</span><span class="hljs-number">162.159</span><span class="hljs-number">.208</span><span class="hljs-number">.4</span><span class="hljs-number">-162.159</span><span class="hljs-number">.208</span><span class="hljs-number">.103</span><span class="hljs-number">162.159</span><span class="hljs-number">.209</span><span class="hljs-number">.4</span><span class="hljs-number">-162.159</span><span class="hljs-number">.209</span><span class="hljs-number">.103</span><span class="hljs-number">162.159</span><span class="hljs-number">.210</span><span class="hljs-number">.4</span><span class="hljs-number">-162.159</span><span class="hljs-number">.210</span><span class="hljs-number">.103</span><span class="hljs-number">162.159</span><span class="hljs-number">.211</span><span class="hljs-number">.4</span><span class="hljs-number">-162.159</span><span class="hljs-number">.211</span><span class="hljs-number">.103</span><span class="hljs-number">104.20</span><span class="hljs-number">.157</span><span class="hljs-number">.2</span> <span class="hljs-number">104.18</span><span class="hljs-number">.62</span><span class="hljs-number">.2</span> <span class="hljs-number">141.101</span><span class="hljs-number">.115</span><span class="hljs-number">.3</span> <span class="hljs-number">104.16</span><span class="hljs-number">.160</span><span class="hljs-number">.3</span><span class="hljs-number">162.159</span><span class="hljs-number">.211</span><span class="hljs-number">.4</span><span class="hljs-number">-103</span><span class="hljs-number">103.21</span><span class="hljs-number">.244</span><span class="hljs-number">.0</span>/<span class="hljs-number">22</span><span class="hljs-number">103.22</span><span class="hljs-number">.200</span><span class="hljs-number">.0</span>/<span class="hljs-number">22</span><span class="hljs-number">103.31</span><span class="hljs-number">.4</span><span class="hljs-number">.0</span>/<span class="hljs-number">22</span><span class="hljs-number">104.16</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>/<span class="hljs-number">12</span><span class="hljs-number">108.162</span><span class="hljs-number">.192</span><span class="hljs-number">.0</span>/<span class="hljs-number">18</span><span class="hljs-number">131.0</span><span class="hljs-number">.72</span><span class="hljs-number">.0</span>/<span class="hljs-number">22</span><span class="hljs-number">141.101</span><span class="hljs-number">.64</span><span class="hljs-number">.0</span>/<span class="hljs-number">18</span><span class="hljs-number">162.158</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>/<span class="hljs-number">15</span><span class="hljs-number">172.64</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>/<span class="hljs-number">13</span><span class="hljs-number">173.245</span><span class="hljs-number">.48</span><span class="hljs-number">.0</span>/<span class="hljs-number">20</span><span class="hljs-number">188.114</span><span class="hljs-number">.96</span><span class="hljs-number">.0</span>/<span class="hljs-number">20</span><span class="hljs-number">190.93</span><span class="hljs-number">.240</span><span class="hljs-number">.0</span>/<span class="hljs-number">20</span><span class="hljs-number">197.234</span><span class="hljs-number">.240</span><span class="hljs-number">.0</span>/<span class="hljs-number">22</span><span class="hljs-number">198.41</span><span class="hljs-number">.128</span><span class="hljs-number">.0</span>/<span class="hljs-number">17</span><span class="hljs-number">104.23</span><span class="hljs-number">.240</span>.*<span class="hljs-number">172.64</span><span class="hljs-number">.32</span>.*<span class="hljs-number">104.16</span><span class="hljs-number">.160</span>.*<span class="hljs-number">108.162</span><span class="hljs-number">.236</span>.*<span class="hljs-number">162.158</span><span class="hljs-number">.133</span>.* <span class="hljs-number">198.41</span><span class="hljs-number">.214</span>.*<span class="hljs-number">198.41</span><span class="hljs-number">.212</span>.*<span class="hljs-number">198.41</span><span class="hljs-number">.208</span>.*<span class="hljs-number">198.41</span><span class="hljs-number">.209</span>.*<span class="hljs-number">172.64</span><span class="hljs-number">.32</span>.*<span class="hljs-number">141.101</span><span class="hljs-number">.115</span>.*<span class="hljs-number">172.64</span><span class="hljs-number">.0</span>. *<span class="hljs-number">172.64</span><span class="hljs-number">.16</span>.* <span class="hljs-number">104.18</span><span class="hljs-number">.48</span><span class="hljs-number">.0</span><span class="hljs-number">-104.18</span><span class="hljs-number">.63</span><span class="hljs-number">.255</span><span class="hljs-number">104.24</span><span class="hljs-number">.112</span><span class="hljs-number">.0</span><span class="hljs-number">-104.24</span><span class="hljs-number">.127</span><span class="hljs-number">.255</span><span class="hljs-number">104.27</span><span class="hljs-number">.128</span><span class="hljs-number">.0</span><span class="hljs-number">-104.27</span><span class="hljs-number">.143</span><span class="hljs-number">.255</span><span class="hljs-number">104.28</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><span class="hljs-number">-104.28</span><span class="hljs-number">.15</span><span class="hljs-number">.255</span><span class="hljs-number">104.28</span><span class="hljs-number">.16</span><span class="hljs-number">.0</span><span class="hljs-number">-31.255</span><span class="hljs-number">104.27</span><span class="hljs-number">.144</span><span class="hljs-number">.0</span><span class="hljs-number">-243.254</span><span class="hljs-number">104.23</span><span class="hljs-number">.240</span><span class="hljs-number">.0</span><span class="hljs-number">-243.254</span><span class="hljs-number">1.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><span class="hljs-number">-254</span><span class="hljs-number">1.1</span><span class="hljs-number">.1</span><span class="hljs-number">.0</span><span class="hljs-number">-254</span><span class="hljs-number">104.16</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><span class="hljs-number">-79.255</span><span class="hljs-number">104.16</span><span class="hljs-number">.96</span><span class="hljs-number">.0</span><span class="hljs-number">-175.254</span><span class="hljs-number">104.16</span><span class="hljs-number">.192</span><span class="hljs-number">.0</span><span class="hljs-number">-207.255</span></code></pre></div><p>这些留着备用。</p><p>那么，怎么运用这些CDN呢，网上绝大多数说的是使用CloudFlareParterner的接入方式，我试了一下，直接入坑，差点爬不上来。</p><p>我是依照 [<a href="https://www.jianshu.com/p/7f38989ffa15" target="_blank" rel="noopener">https://www.jianshu.com/p/7f38989ffa15</a> ] 上讲的，把CloudFlare改成笨牛CNAME解析，接着做下一步时发现Freenom站点差不多荒废了，根本进不去改NS。结果退回来想解除绑定，解除不了，又没有把解析记录弄完整，只好删除重新回到CloudFlare，差点解析记录全盘翻掉。</p><p>可是，难道我要忍受这50kb/s的速度吗？？？</p><p>不，不可能。</p><h1 id="让我们理一下思路"><a href="#让我们理一下思路" class="headerlink" title="让我们理一下思路"></a>让我们理一下思路</h1><ul><li>CF拥有很多CDN</li><li>CF的CDN之间速度直接爆满</li><li>CF的CDN之间几乎没有延迟</li><li>CF所有CDN节点均免费，可以随便接入</li><li>CF默认的CDN速度很慢</li></ul><p>那么，就有两种情况出现：</p><h2 id="加速浏览别人的网站"><a href="#加速浏览别人的网站" class="headerlink" title="加速浏览别人的网站"></a>加速浏览别人的网站</h2><p>很多站长，尤其是国内个人站点站长，如果服务器放在国外的，基本都会用CFCDN。</p><p>先不说别的，大名鼎鼎的 <a href="https://loadbt.com" target="_blank" rel="noopener">loadbt</a> 种子不限速离线下载就是用CF免费版的CDN，那速度下载只有60kb/s，而且经常断线。</p><p><img src="https://img.cyfan.top/pic/post/pasted-11.png" srcset="/img/loading.gif" alt="图片"></p><p>那么，如何加速？</p><p>很简单，上述提到的那么多IP，拿一个来，修改本地的Hosts，引导使用较快的ip来访问即可。</p><p>实际上我相当推荐 <code>1.0.0.1</code> ~ <code>1.0.0.254</code> 这个ip段作为回源ip,因为这个ip段用的是CN2,速度很好,延迟也很低;</p><div class="hljs"><pre><code class="hljs undefined">ping 1.0.0.2正在<span class="hljs-built_in"> Ping </span>1.0.0.2 具有 32 字节的数据:来自 1.0.0.2 的回复: 字节=32 时间=68ms <span class="hljs-attribute">TTL</span>=51来自 1.0.0.2 的回复: 字节=32 时间=50ms <span class="hljs-attribute">TTL</span>=51来自 1.0.0.2 的回复: 字节=32 时间=57ms <span class="hljs-attribute">TTL</span>=51来自 1.0.0.2 的回复: 字节=32 时间=54ms <span class="hljs-attribute">TTL</span>=511.0.0.2 的<span class="hljs-built_in"> Ping </span>统计信息:    数据包: 已发送 = 4，已接收 = 4，丢失 = 0 (0% 丢失)，往返行程的估计时间(以毫秒为单位):    最短 = 50ms，最长 = 68ms，平均 = 57ms</code></pre></div><p>但是,问题是,如果你是站长呢?你总不可能让访客去修改Hosts吧!</p><h2 id="加速自己的网站"><a href="#加速自己的网站" class="headerlink" title="加速自己的网站"></a>加速自己的网站</h2><p>先前提到:</p><ul><li>CF拥有很多CDN</li><li>CF的CDN之间速度直接爆满</li><li>CF的CDN之间几乎没有延迟</li><li>CF所有CDN节点均免费，可以随便接入</li><li>CF默认的CDN速度很慢</li></ul><p>以及:</p><ul><li>CF免费提供Workers运行脚本</li><li>Workers目前已实现全部署,有Workers的服务器必是CDN</li><li>Workers每天免费处理10w条数据</li><li>JSProxy通过脚本镜像网站</li></ul><p>那么,为何不用Workers来镜像自己的网站呢?而且这个办法零风险,不需要接入第三方即可使用,真正实现了CDN自选:</p><p>PS:这个办法适用于像我一样的站长,所有资源都存在同一个服务器.如果有外链则无法加速.</p><p>(由于在写博客之前我已经替换完毕主界面和博客的地址，不可能重新替换吧,以下演示用PS_Online)</p><h3 id="镜像自己的网站："><a href="#镜像自己的网站：" class="headerlink" title="镜像自己的网站："></a>镜像自己的网站：</h3><p><code>pss.cyfan.ga</code> 是回源网站，处于中间状态，不需要被外人知道，当然知道也没关系。 </p><p><code>ps.cyfan.ga</code> 是主站点，就是你给别人看的，是要经过加速。</p><h4 id="复制脚本："><a href="#复制脚本：" class="headerlink" title="复制脚本："></a>复制脚本：</h4><p>[<a href="https://raw.githubusercontent.com/EtherDream/jsproxy/master/cf-worker/index.js" target="_blank" rel="noopener">https://raw.githubusercontent.com/EtherDream/jsproxy/master/cf-worker/index.js</a> ] 或者是我Fork的地址 [<a href="https://raw.githubusercontent.com/ChenYFan/jsproxy/master/cf-worker/index.js" target="_blank" rel="noopener">https://raw.githubusercontent.com/ChenYFan/jsproxy/master/cf-worker/index.js</a> ]<br>把里面的内容全部复制，进入下一步：</p><h4 id="设置CFWorker"><a href="#设置CFWorker" class="headerlink" title="设置CFWorker"></a>设置CFWorker</h4><p>进入Workers:</p><p><img src="https://img.cyfan.top/pic/post/pasted-12.png" srcset="/img/loading.gif" alt="图片"></p><p>点击Create a Worker</p><p><img src="https://img.cyfan.top/pic/post/pasted-13.png" srcset="/img/loading.gif" alt="图片"></p><p>清空左边的编辑框，将刚刚复制的代码粘贴进去。</p><p>修改第六行，把地址变成自己的。</p><p><del>娶</del> 取个霸气点的名字，不要想博主一样取ps那么弱小的名字。【手动滑稽】</p><p>最后Save and Deploy</p><h4 id="修改DNS："><a href="#修改DNS：" class="headerlink" title="修改DNS："></a>修改DNS：</h4><p><img src="https://img.cyfan.top/pic/post/pasted-14.png" srcset="/img/loading.gif" alt="将正常需要回源的"></p><p>将正常需要回源的地址后面加个s，注意如果使用Proxied请暂时去除。</p><p>新建真正需要的地址：</p><p><img src="https://img.cyfan.top/pic/post/pasted-15.png" srcset="/img/loading.gif" alt="upload successful"></p><p>使用A记录，IP选择上面提到的，随意，建议1.0.0.* ,速度快，丢包少，延迟低。</p><p><strong>千万不要勾选·proxied·！一定要改成·DNS Only·！</strong></p><h4 id="绑定Workers"><a href="#绑定Workers" class="headerlink" title="绑定Workers"></a>绑定Workers</h4><p><img src="https://img.cyfan.top/pic/post/pasted-19.png" srcset="/img/loading.gif" alt="upload successful"></p><p>就照这个样子填就可以了。</p><h4 id="回到原网站："><a href="#回到原网站：" class="headerlink" title="回到原网站："></a>回到原网站：</h4><p>Github更换绑定：</p><p><img src="https://img.cyfan.top/pic/post/pasted-16.png" srcset="/img/loading.gif" alt="upload successful"></p><p>可以看到修改DNS后报错了，把地址改成<strong>回源后</strong>地址，我这里是 <code>pss.cyfan.ga</code></p><p>点击Save，接着有一行字：</p><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-selector-tag">Custom</span> <span class="hljs-selector-tag">domain</span> "<span class="hljs-selector-tag">pss</span><span class="hljs-selector-class">.cyfan</span><span class="hljs-selector-class">.ga</span>" <span class="hljs-selector-tag">saved</span>.</code></pre></div><p>还没有完，翻到底下，你会发现Github提示：</p><p><img src="https://img.cyfan.top/pic/post/pasted-17.png" srcset="/img/loading.gif" alt="upload successful"></p><div class="hljs"><pre><code class="hljs undefined">Enforce HTTPS — Not yet available <span class="hljs-keyword">for</span> your site because <span class="hljs-keyword">the</span> certificate has <span class="hljs-keyword">not</span> finished being issued.Please allow <span class="hljs-number">24</span> hours <span class="hljs-keyword">for</span> this process <span class="hljs-keyword">to</span> complete. (pss.cyfan.ga) HTTPS provides a layer <span class="hljs-keyword">of</span> encryption <span class="hljs-keyword">that</span> prevents others <span class="hljs-keyword">from</span> snooping <span class="hljs-keyword">on</span> <span class="hljs-keyword">or</span> tampering <span class="hljs-keyword">with</span> traffic <span class="hljs-keyword">to</span> your site.When HTTPS <span class="hljs-keyword">is</span> enforced, your site will only be served <span class="hljs-keyword">over</span> HTTPS. Learn more.</code></pre></div><p>不急,申请TLS证书其实根本不需要24小时,过个2分钟,刷新一下:</p><p><img src="https://img.cyfan.top/pic/post/pasted-18.png" srcset="/img/loading.gif" alt="upload successful"></p><p>勾选Enforce https,刷新,可能会报成功,不急,再刷新一下就会报失败,过一段时间再刷新,如果报成功,那么恭喜成功!但还没完!</p><h4 id="回源代理"><a href="#回源代理" class="headerlink" title="回源代理"></a>回源代理</h4><p>回到CloudFlareDNS,将pss.cyfan.ga勾选Proxies，但是ps.cyfan.ga千万不要勾选！</p><p>CF加速完成,试试吧!</p><h1 id="原理："><a href="#原理：" class="headerlink" title="原理："></a>原理：</h1><p><img src="https://img.cyfan.top/pic/post/pasted-20.png" srcset="/img/loading.gif" alt="upload successful"></p><p>ping一下博客：</p><div class="hljs"><pre><code class="hljs undefined">正在<span class="hljs-built_in"> Ping </span>blog.cyfan.ga [1.0.0.2] 具有 32 字节的数据:来自 1.0.0.2 的回复: 字节=32 时间=49ms <span class="hljs-attribute">TTL</span>=51来自 1.0.0.2 的回复: 字节=32 时间=49ms <span class="hljs-attribute">TTL</span>=51来自 1.0.0.2 的回复: 字节=32 时间=50ms <span class="hljs-attribute">TTL</span>=51来自 1.0.0.2 的回复: 字节=32 时间=49ms <span class="hljs-attribute">TTL</span>=51来自 1.0.0.2 的回复: 字节=32 时间=56ms <span class="hljs-attribute">TTL</span>=51来自 1.0.0.2 的回复: 字节=32 时间=50ms <span class="hljs-attribute">TTL</span>=51来自 1.0.0.2 的回复: 字节=32 时间=52ms <span class="hljs-attribute">TTL</span>=51来自 1.0.0.2 的回复: 字节=32 时间=49ms <span class="hljs-attribute">TTL</span>=51来自 1.0.0.2 的回复: 字节=32 时间=50ms <span class="hljs-attribute">TTL</span>=51来自 1.0.0.2 的回复: 字节=32 时间=51ms <span class="hljs-attribute">TTL</span>=51来自 1.0.0.2 的回复: 字节=32 时间=52ms <span class="hljs-attribute">TTL</span>=51来自 1.0.0.2 的回复: 字节=32 时间=51ms <span class="hljs-attribute">TTL</span>=51来自 1.0.0.2 的回复: 字节=32 时间=51ms <span class="hljs-attribute">TTL</span>=51来自 1.0.0.2 的回复: 字节=32 时间=48ms <span class="hljs-attribute">TTL</span>=51来自 1.0.0.2 的回复: 字节=32 时间=61ms <span class="hljs-attribute">TTL</span>=51来自 1.0.0.2 的回复: 字节=32 时间=50ms <span class="hljs-attribute">TTL</span>=51来自 1.0.0.2 的回复: 字节=32 时间=53ms <span class="hljs-attribute">TTL</span>=51来自 1.0.0.2 的回复: 字节=32 时间=49ms <span class="hljs-attribute">TTL</span>=51来自 1.0.0.2 的回复: 字节=32 时间=52ms <span class="hljs-attribute">TTL</span>=51来自 1.0.0.2 的回复: 字节=32 时间=49ms <span class="hljs-attribute">TTL</span>=51来自 1.0.0.2 的回复: 字节=32 时间=56ms <span class="hljs-attribute">TTL</span>=51来自 1.0.0.2 的回复: 字节=32 时间=52ms <span class="hljs-attribute">TTL</span>=51来自 1.0.0.2 的回复: 字节=32 时间=52ms <span class="hljs-attribute">TTL</span>=511.0.0.2 的<span class="hljs-built_in"> Ping </span>统计信息:    数据包: 已发送 = 23，已接收 = 23，丢失 = 0 (0% 丢失)，往返行程的估计时间(以毫秒为单位):    最短 = 48ms，最长 = 61ms，平均 = 51ms</code></pre></div><p>可以发现基本没丢包.说明<code>1.0.0.2</code>很稳定.</p><p>那么…</p><p>欢迎继续访问我的博客！</p><hr><p>反正IP随便改，最近随便换了个香港线：</p><p>加速前</p><p><img src="https://img.cyfan.top/pic/post/pasted-80.png" srcset="/img/loading.gif" alt="upload successful"></p><p><code>说实话有些看不懂这路是怎么绕的，为什么又从北京出口</code></p><p>加速后</p><p><img src="https://img.cyfan.top/pic/post/pasted-79.png" srcset="/img/loading.gif" alt="upload successful"></p><p>实际上后面还有一端链接到Github，不过这一段可以忽略不计了。</p>]]></content>
    
    
    <categories>
      
      <category>好方法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>DNS</tag>
      
      <tag>奇淫巧技</tag>
      
      <tag>域名</tag>
      
      <tag>网站</tag>
      
      <tag>解析</tag>
      
      <tag>速度</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo-Admin:体验如Wordpress般GUI编辑</title>
    <link href="/2020/03/11/Hexo-Admin-%E4%BD%93%E9%AA%8C%E5%A6%82Wordpress%E8%88%ACGUI%E7%BC%96%E8%BE%91/"/>
    <url>/2020/03/11/Hexo-Admin-%E4%BD%93%E9%AA%8C%E5%A6%82Wordpress%E8%88%ACGUI%E7%BC%96%E8%BE%91/</url>
    
    <content type="html"><![CDATA[<p>先放图：</p><p><img src="https://img.cyfan.top/pic/pasted-0.png" srcset="/img/loading.gif" alt="图片" title="Hexo-Admin"></p><p>怎么说，逛Github时偶然间发现了这个插件，感觉还不错。</p><p>等到现在在用的时候真的感觉不仅仅是不错了,简直就是舒爽啊.</p><h1 id="简介"><a href="#简介" class="headerlink" title="简介:"></a>简介:</h1><p>官网地址: <a href="https://github.com/jaredly/hexo-admin" target="_blank" rel="noopener">Github</a></p><p>安装:</p><p>一句话的事:</p><div class="hljs"><pre><code class="hljs undefined">npm <span class="hljs-keyword">install</span> <span class="hljs-comment">--save hexo-admin</span></code></pre></div><blockquote><p>npm下载慢??? <a href="/2019/07/19/国内加快NPM下载速度/">&gt;&gt;点此</a></p></blockquote><style>  .alignleft { display: inline; float: left; } //居右.alignright { display: inline; float: right; } //居中.aligncenter { clear: both; display: block; margin:auto; } </style><p>至于安装的时候出现很多很多报错,这是版本不兼容原因,不过并不影响正常使用,比如我随随便便报了这么多错误</p><div class="hljs"><pre><code class="hljs undefined">√ Installed 1 packages√ Linked 221 latest versions√ Run 0 scriptsdeprecate hexo-admin@2.3.0 › bcrypt-nodejs@0.0.3 bcrypt-nodejs is no longer actively maintained. Please <span class="hljs-keyword">use</span> bcrypt <span class="hljs-keyword">or</span> bcryptjs. See https://github.com/kelektiv/node.bcrypt.js/wiki/bcrypt-vs-brypt.js <span class="hljs-keyword">to</span> learn more about these two optionsdeprecate hexo-<span class="hljs-keyword">admin</span>@<span class="hljs-number">2.3</span><span class="hljs-number">.0</span> › <span class="hljs-keyword">connect</span>-auth@<span class="hljs-number">0.6</span><span class="hljs-number">.1</span> › <span class="hljs-keyword">connect</span>@<span class="hljs-number">2.7</span>.x <span class="hljs-keyword">connect</span> <span class="hljs-number">2.</span>x series <span class="hljs-keyword">is</span> deprecateddeprecate hexo-<span class="hljs-keyword">admin</span>@<span class="hljs-number">2.3</span><span class="hljs-number">.0</span> › browserify@<span class="hljs-number">11.2</span><span class="hljs-number">.0</span> › glob@<span class="hljs-number">4.5</span><span class="hljs-number">.3</span> › minimatch@^<span class="hljs-number">2.0</span><span class="hljs-number">.1</span> Please <span class="hljs-keyword">update</span> <span class="hljs-keyword">to</span> minimatch <span class="hljs-number">3.0</span><span class="hljs-number">.2</span> <span class="hljs-keyword">or</span> higher <span class="hljs-keyword">to</span> avoid a RegExp DoS issuedeprecate hexo-<span class="hljs-keyword">admin</span>@<span class="hljs-number">2.3</span><span class="hljs-number">.0</span> › <span class="hljs-keyword">less</span>@<span class="hljs-number">2.7</span><span class="hljs-number">.3</span> › request@<span class="hljs-number">2.81</span><span class="hljs-number">.0</span> › hawk@~<span class="hljs-number">3.1</span><span class="hljs-number">.3</span> This <span class="hljs-keyword">module</span> moved <span class="hljs-keyword">to</span> @hapi/hawk. Please make sure <span class="hljs-keyword">to</span> <span class="hljs-keyword">switch</span> <span class="hljs-keyword">over</span> <span class="hljs-keyword">as</span> this distribution <span class="hljs-keyword">is</span> <span class="hljs-keyword">no</span> longer supported <span class="hljs-keyword">and</span> may contain bugs <span class="hljs-keyword">and</span> <span class="hljs-keyword">critical</span> <span class="hljs-keyword">security</span> issues.deprecate hexo-<span class="hljs-keyword">admin</span>@<span class="hljs-number">2.3</span><span class="hljs-number">.0</span> › <span class="hljs-keyword">less</span>@<span class="hljs-number">2.7</span><span class="hljs-number">.3</span> › request@<span class="hljs-number">2.81</span><span class="hljs-number">.0</span> › hawk@<span class="hljs-number">3.1</span><span class="hljs-number">.3</span> › cryptiles@<span class="hljs-number">2.</span>x.x This <span class="hljs-keyword">version</span> has been deprecated <span class="hljs-keyword">in</span> accordance <span class="hljs-keyword">with</span> the hapi support <span class="hljs-keyword">policy</span> (hapi.im/support). Please <span class="hljs-keyword">upgrade</span> <span class="hljs-keyword">to</span> the latest <span class="hljs-keyword">version</span> <span class="hljs-keyword">to</span> <span class="hljs-keyword">get</span> the best features, bug fixes, <span class="hljs-keyword">and</span> <span class="hljs-keyword">security</span> patches. <span class="hljs-keyword">If</span> you <span class="hljs-keyword">are</span> unable <span class="hljs-keyword">to</span> <span class="hljs-keyword">upgrade</span> <span class="hljs-keyword">at</span> this <span class="hljs-built_in">time</span>, paid support <span class="hljs-keyword">is</span> available <span class="hljs-keyword">for</span> older <span class="hljs-keyword">versions</span> (hapi.im/commercial).deprecate hexo-<span class="hljs-keyword">admin</span>@<span class="hljs-number">2.3</span><span class="hljs-number">.0</span> › <span class="hljs-keyword">less</span>@<span class="hljs-number">2.7</span><span class="hljs-number">.3</span> › request@<span class="hljs-number">2.81</span><span class="hljs-number">.0</span> › hawk@<span class="hljs-number">3.1</span><span class="hljs-number">.3</span> › sntp@<span class="hljs-number">1.</span>x.x This <span class="hljs-keyword">module</span> moved <span class="hljs-keyword">to</span> @hapi/sntp. Please make sure <span class="hljs-keyword">to</span> <span class="hljs-keyword">switch</span> <span class="hljs-keyword">over</span> <span class="hljs-keyword">as</span> this distribution <span class="hljs-keyword">is</span> <span class="hljs-keyword">no</span> longer supported <span class="hljs-keyword">and</span> may contain bugs <span class="hljs-keyword">and</span> <span class="hljs-keyword">critical</span> <span class="hljs-keyword">security</span> issues.deprecate hexo-<span class="hljs-keyword">admin</span>@<span class="hljs-number">2.3</span><span class="hljs-number">.0</span> › <span class="hljs-keyword">less</span>@<span class="hljs-number">2.7</span><span class="hljs-number">.3</span> › request@<span class="hljs-number">2.81</span><span class="hljs-number">.0</span> › hawk@<span class="hljs-number">3.1</span><span class="hljs-number">.3</span> › boom@<span class="hljs-number">2.</span>x.x This <span class="hljs-keyword">version</span> has been deprecated <span class="hljs-keyword">in</span> accordance <span class="hljs-keyword">with</span> the hapi support <span class="hljs-keyword">policy</span> (hapi.im/support). Please <span class="hljs-keyword">upgrade</span> <span class="hljs-keyword">to</span> the latest <span class="hljs-keyword">version</span> <span class="hljs-keyword">to</span> <span class="hljs-keyword">get</span> the best features, bug fixes, <span class="hljs-keyword">and</span> <span class="hljs-keyword">security</span> patches. <span class="hljs-keyword">If</span> you <span class="hljs-keyword">are</span> unable <span class="hljs-keyword">to</span> <span class="hljs-keyword">upgrade</span> <span class="hljs-keyword">at</span> this <span class="hljs-built_in">time</span>, paid support <span class="hljs-keyword">is</span> available <span class="hljs-keyword">for</span> older <span class="hljs-keyword">versions</span> (hapi.im/commercial).deprecate hexo-<span class="hljs-keyword">admin</span>@<span class="hljs-number">2.3</span><span class="hljs-number">.0</span> › <span class="hljs-keyword">less</span>@<span class="hljs-number">2.7</span><span class="hljs-number">.3</span> › request@<span class="hljs-number">2.81</span><span class="hljs-number">.0</span> › hawk@<span class="hljs-number">3.1</span><span class="hljs-number">.3</span> › hoek@<span class="hljs-number">2.</span>x.x This <span class="hljs-keyword">version</span> has been deprecated <span class="hljs-keyword">in</span> accordance <span class="hljs-keyword">with</span> the hapi support <span class="hljs-keyword">policy</span> (hapi.im/support). Please <span class="hljs-keyword">upgrade</span> <span class="hljs-keyword">to</span> the latest <span class="hljs-keyword">version</span> <span class="hljs-keyword">to</span> <span class="hljs-keyword">get</span> the best features, bug fixes, <span class="hljs-keyword">and</span> <span class="hljs-keyword">security</span> patches. <span class="hljs-keyword">If</span> you <span class="hljs-keyword">are</span> unable <span class="hljs-keyword">to</span> <span class="hljs-keyword">upgrade</span> <span class="hljs-keyword">at</span> this <span class="hljs-built_in">time</span>, paid support <span class="hljs-keyword">is</span> available <span class="hljs-keyword">for</span> older <span class="hljs-keyword">versions</span> (hapi.im/commercial).Recently <span class="hljs-keyword">updated</span> (since <span class="hljs-number">2020</span><span class="hljs-number">-03</span><span class="hljs-number">-04</span>): <span class="hljs-number">2</span> packages (detail see <span class="hljs-keyword">file</span> E:\bloghexo\node_modules\.recently_updates.txt)  Today:    → hexo-<span class="hljs-keyword">admin</span>@<span class="hljs-number">2.3</span><span class="hljs-number">.0</span> › browserify@<span class="hljs-number">11.2</span><span class="hljs-number">.0</span> › deps-<span class="hljs-keyword">sort</span>@<span class="hljs-number">1.3</span><span class="hljs-number">.9</span> › subarg@<span class="hljs-number">1.0</span><span class="hljs-number">.0</span> › minimist@^<span class="hljs-number">1.1</span><span class="hljs-number">.0</span>(<span class="hljs-number">1.2</span><span class="hljs-number">.3</span>) (<span class="hljs-number">03</span>:<span class="hljs-number">08</span>:<span class="hljs-number">24</span>)√ <span class="hljs-keyword">All</span> packages installed (<span class="hljs-number">210</span> packages installed <span class="hljs-keyword">from</span> npm registry, used <span class="hljs-number">45</span>s(network <span class="hljs-number">44</span>s), speed <span class="hljs-number">213.53</span>kB/s, <span class="hljs-keyword">json</span> <span class="hljs-number">222</span>(<span class="hljs-number">516.55</span>kB), tarball <span class="hljs-number">8.67</span>MB)</code></pre></div><p>而且在运行 <code>hexo server -w</code> 时也随随便便报了一个警告：</p><div class="hljs"><pre><code class="hljs undefined">(<span class="hljs-keyword">node</span><span class="hljs-title">:7628</span>) [DEP0061] DeprecationWarning: fs.SyncWriteStream is deprecated.</code></pre></div><p>不过根本不影响正常使用,反正我Hexo-Admin现在还能使用</p><h2 id="好处"><a href="#好处" class="headerlink" title="好处"></a>好处</h2><h3 id="直接在写的时候就能看到预览"><a href="#直接在写的时候就能看到预览" class="headerlink" title="直接在写的时候就能看到预览"></a>直接在写的时候就能看到预览</h3><p>之前编辑博客时一直使用的是NotePad++,因为很喜欢它的代码高亮,甚至支持MarkDown,但是就是没有预览.</p><p>还记得当时打字时省麻烦, <code>&gt;</code> 应用符号懒得换行,结果导致在部署完成后才发现有点不对,害的我又一行一行换行过去.</p><p>但是使用Hexo-Admin后,我每新增一行,右边就会实时出现文章.</p><p><img src="https://img.cyfan.top/pic/post/pasted-1.png" srcset="/img/loading.gif" alt="图片" title="预览"></p><p>爽翻了.</p><p>甚至上下滑动它都会自动同步:</p><p><img src="https://img.cyfan.top/pic/post/1.gif" srcset="/img/loading.gif" alt="图片" title="Hexo-Admin上下滑动自动同步"></p><h3 id="草稿制"><a href="#草稿制" class="headerlink" title="草稿制"></a>草稿制</h3><p><img src="https://img.cyfan.top/pic/post/pasted-0.png" srcset="/img/loading.gif" alt="图片" title="草稿"></p><p><img src="https://img.cyfan.top/pic/post/pasted-2.png" srcset="/img/loading.gif" alt="图片"></p><p><img src="https://img.cyfan.top/pic/post/pasted-3.png" srcset="/img/loading.gif" alt="图片"></p><p>当我点击 <code>New Post</code>时，它的显示就变成了灰色，这说明这是草稿形式，并不会真正发布。</p><p>这对于我这样的手残党真的很有用。虽然hexo自带草稿功能，但是同样是通过命令实现，写完之后还是要手动转正，那我还不如新建文本文档写完后剪切粘贴呢。</p><p>但是，Hexo-Admin的发布只要按一下 <code>Publish</code>,所有的事情就交给Hexo吧!</p><h3 id="迅速添加tag和categories"><a href="#迅速添加tag和categories" class="headerlink" title="迅速添加tag和categories"></a>迅速添加tag和categories</h3><p>看到右上角的齿轮了吗，点击它，</p><p><img src="https://img.cyfan.top/pic/post/pasted-4.png" srcset="/img/loading.gif" alt="图片"></p><p>时间作者都能改，这个不重要，Tag和Categories换行就是随便填写，这个舒爽度直接爆表啊有木有。</p><h3 id="随手添加一张图片"><a href="#随手添加一张图片" class="headerlink" title="随手添加一张图片"></a>随手添加一张图片</h3><p>这个功能我觉得是Hexo-Admin亮点，没有之一。</p><p>你体验过在Hexo里添加一张图片的痛苦吗？？？？</p><p>以前用NotePad++，添加一张截图要这样：</p><ol><li><kbd>Ctrl</kbd> + <kbd>Alt</kbd> + <kbd>PrtSc</kbd> 截图</li><li>新建jpg空白图像</li><li>右键，编辑，粘贴</li><li>重命名文件</li><li>剪切到 <code>/sourcehttps://img.cyfan.top/pic/</code> 文件夹里，必要的时候会新建一个文件夹</li><li>回到NotePad++，键入：<code>![标题](路径 &quot;标题&quot;)</code></li></ol><p>现在用了Hexo-Admin:</p><ol><li><kbd>Ctrl</kbd> + <kbd>Alt</kbd> + <kbd>PrtSc</kbd> 截图</li><li><kbd>Ctrl</kbd>+<kbd>V</kbd></li><li>删掉一个多余的<code>/</code></li><li>添加标题</li></ol><p>直接舒爽了好几倍,以后添加图片再也不用那么吃力了.</p><p>(幸好添加了懒加载,这样就可以放肆的添加图片啦)</p><p>至于图片本来就以一个文件存在,那就有点麻烦了,剪切,改名,添加,完成!</p><img class="alingleft" src="https://img.cyfan.top/pic/post/pasted-5.png" srcset="/img/loading.gif"><p>PS:Hexo Admin可以直接复制图片粘贴，然后自动下载到指定目录并重命名。但在Windows中粘贴后会出现裂图。这时就需要手动把括号中的前后两个斜杠去掉，就能正常显示。</p><h3 id="设置密码"><a href="#设置密码" class="headerlink" title="设置密码"></a>设置密码</h3><p>这对于静态玩家来说毫无关系，毕竟人家权限再大也打不过你，不过如果是部署在000webhost类似的免费可修改空间，或者是纯粹在本地装B的，也可以。</p><p>点击Setting：</p><p><img src="https://img.cyfan.top/pic/post/pasted-6.png" srcset="/img/loading.gif" alt="图片"></p><p>点击 <code>Setup authentification here.</code></p><p><img src="https://img.cyfan.top/pic/post/pasted-7.png" srcset="/img/loading.gif" alt="输入"></p><p>输入用户名、密码、和密钥。</p><p>密钥建议手滚键盘，反正你也不用记。</p><p>在下面会生成代码块，类似于这样：</p><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-comment"># hexo-admin authentification</span>admin:  username: username  password_hash: <span class="hljs-variable">$2a</span><span class="hljs-variable">$10</span><span class="hljs-variable">$L</span>.XAIqIWgTc5S1zpvV3MEu7/rH34p4Is/nq824smv8EZ3lIPCp1su  secret: my super<span class="hljs-built_in"> secret </span>phrase</code></pre></div><p>密码是依靠哈希加密，完全不用担心泄漏。</p><p>把这一串代码复制到站点配置文件 <code>_Config.yml</code>,重启hexo,完成!</p><h3 id="一键部署"><a href="#一键部署" class="headerlink" title="一键部署"></a>一键部署</h3><p>什么，你连 <code>hexo d</code> 都不想打？好吧，Hexo-Admin deploy满足你。</p><p>首先需要绑定Hexo 《=》 Github 的SSH公钥，这个教程网上都有，在此暂时不讲。</p><p>接着在 hexo根目录下创建一个批处理文件 <code>push.bat</code>,里面填上:</p><div class="hljs"><pre><code class="hljs bat">hexo g -d</code></pre></div><p>打开站点配置文件 <code>_Config.yml</code>,在同目录的admin下换行按一下<kbd>Tab</kbd>,写上 </p><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-string">deployCommand:</span> <span class="hljs-string">'push.bat'</span></code></pre></div><p>重启Hexo server,点击Deploy,进入以下画面:</p><p><img src="https://img.cyfan.top/pic/post/pasted-8.png" srcset="/img/loading.gif" alt="图片"></p><p>什么都不用填,直接点击 <code>Deploy</code> 即可.</p><h3 id="实时保存"><a href="#实时保存" class="headerlink" title="实时保存"></a>实时保存</h3><p>这个功能和NotePad++的缓存保存差不多效果,不过NotePad的缓存保存一般性修改的是副本,而Hexo-Admin则直接修改源文件.</p><p>不过用起来还是差不多的,无非都是防止手贱随手关掉没保存的现象出现.</p><p>不过Hexo-Admin的保存是真的快.在我打好这句话后发了一下呆o_o ….,右上角就出现这样的字:</p><p><img src="https://img.cyfan.top/pic/post/pasted-9.png" srcset="/img/loading.gif" alt="图片"></p><p>…都做到这样了,我还能说什么呢?</p><h3 id="语法校对"><a href="#语法校对" class="headerlink" title="语法校对"></a>语法校对</h3><p>这个是我最哭笑不得的功能.</p><p>点击右上角的勾,进入校对界面:</p><p><img src="https://img.cyfan.top/pic/post/pasted-10.png" srcset="/img/loading.gif" alt="图片"></p><p>不过这个功能仅仅对于英文来讲,而且对于代码的语法校对似乎没有这么准确,我又不写英文,有点鸡肋.</p><h3 id="还有很多…"><a href="#还有很多…" class="headerlink" title="还有很多…"></a>还有很多…</h3><h2 id="一些小问题"><a href="#一些小问题" class="headerlink" title="一些小问题"></a>一些小问题</h2><p>Hexo-Admin能做到这样,我已经很满足了,不过我使用的时候,发现有几个问题:</p><h3 id="打字的时候浏览框会不自觉的向上飘"><a href="#打字的时候浏览框会不自觉的向上飘" class="headerlink" title="打字的时候浏览框会不自觉的向上飘:"></a>打字的时候浏览框会不自觉的向上飘:</h3><p><img src="https://img.cyfan.top/pic/post/2.gif" srcset="/img/loading.gif" alt="图片"></p><h3 id="不能拖拽放入图片"><a href="#不能拖拽放入图片" class="headerlink" title="不能拖拽放入图片"></a>不能拖拽放入图片</h3><p><img src="https://img.cyfan.top/pic/post/3.gif" srcset="/img/loading.gif" alt="图片"></p><h3 id="以及…直接粘贴的图片斜杠方向是反的！！！"><a href="#以及…直接粘贴的图片斜杠方向是反的！！！" class="headerlink" title="以及…直接粘贴的图片斜杠方向是反的！！！"></a>以及…直接粘贴的图片斜杠方向是反的！！！</h3><h3 id="自定义css无法使用"><a href="#自定义css无法使用" class="headerlink" title="自定义css无法使用"></a>自定义css无法使用</h3><p><span class="heimu" title="你知道的太多了">你看的到我吗???</span></p><img class="alingleft" src="https://img.cyfan.top/pic/post/pasted-5.png" srcset="/img/loading.gif"><p><img src="https://img.cyfan.top/pic/post/4.gif" srcset="/img/loading.gif" alt="图片"></p><p>不过这到不是大问题,就是编辑的时候没法用罢了</p><h3 id="性能问题"><a href="#性能问题" class="headerlink" title="性能问题"></a>性能问题</h3><p>Nodejs从以前内存占用120MB编程220MB了,比较吃内存</p><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><p>至少在我看来,Hexo-Admin真的至少比Notepad++好多了,虽然依旧不能解决静态无法在线修改的硬伤,不过至少也能用.</p>]]></content>
    
    
    <categories>
      
      <category>丆插件</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>插件</tag>
      
      <tag>黑科技</tag>
      
      <tag>编辑</tag>
      
      <tag>神器</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LazyLoad_懒加载,将无形等待时间化为有形</title>
    <link href="/2020/03/08/LazyLoad_%E6%87%92%E5%8A%A0%E8%BD%BD,%E5%B0%86%E6%97%A0%E5%BD%A2%E7%AD%89%E5%BE%85%E6%97%B6%E9%97%B4%E5%8C%96%E4%B8%BA%E6%9C%89%E5%BD%A2/"/>
    <url>/2020/03/08/LazyLoad_%E6%87%92%E5%8A%A0%E8%BD%BD,%E5%B0%86%E6%97%A0%E5%BD%A2%E7%AD%89%E5%BE%85%E6%97%B6%E9%97%B4%E5%8C%96%E4%B8%BA%E6%9C%89%E5%BD%A2/</url>
    
    <content type="html"><![CDATA[<p>说实话，很早以前接触懒加载是在看别人提到过，但当时对此不温不火的，因为当时部署在Coding上，速度基本加载图片几毫秒的事。而且当时每篇文章也就三四张图，基本不影响加载时间。</p><p>可是现在部署在github上，国内一访问，终于明白LazyLoad的妙用了。</p><p>即使加载了CloudFlareCDN，选了个比较快的CDNIP加载Hosts中，也只有120kb/s的速度，致命的是，我上一篇博文图片将近31MB。</p><p><img src="https://img.cyfan.top/pic/lazy/1.jpg" srcset="/img/loading.gif" alt="图片" title="上一次手贱,图片添加的比较多."></p><p>以120kb/s的速度,以前加载个不到1MB的博文(Live2D看板娘本身自带LazyLoad)也就几秒钟的事情,加载个30MB的网页…</p><p>宏观来讲,就是打开博文一片空白,既看不到文字也看不到图片.</p><p>那么这就有一个问题,网页一片空白,你是怪博主还是怪网络呢?</p><p>很简单,肯定是怪博主,因为如果是网络,那也不至于连文字都加载不出来吧?</p><p>因为网页加载时,会将页面里所有资源加载完毕时才会显示,在加载完整之前是不显示的.</p><p>最最致命的是,博客使用CloudFlareCDN,总会遭到XXX的恶意丢包:<br>(测试环境为IPv6)</p><div class="hljs"><pre><code class="hljs undefined">ping blog.cyfan.ga -t正在<span class="hljs-built_in"> Ping </span>blog.cyfan.ga [2606:4700:3033::681c:10de] 具有 32 字节的数据:来自 2606:4700:3033::681c:10de 的回复: 时间=438ms请求超时。来自 2606:4700:3033::681c:10de 的回复: 时间=462ms来自 2606:4700:3033::681c:10de 的回复: 时间=257ms来自 2606:4700:3033::681c:10de 的回复: 时间=270ms来自 2606:4700:3033::681c:10de 的回复: 时间=286ms来自 2606:4700:3033::681c:10de 的回复: 时间=279ms来自 2606:4700:3033::681c:10de 的回复: 时间=288ms来自 2606:4700:3033::681c:10de 的回复: 时间=288ms来自 2606:4700:3033::681c:10de 的回复: 时间=281ms请求超时。来自 2606:4700:3033::681c:10de 的回复: 时间=285ms来自 2606:4700:3033::681c:10de 的回复: 时间=281ms来自 2606:4700:3033::681c:10de 的回复: 时间=289ms来自 2606:4700:3033::681c:10de 的回复: 时间=287ms来自 2606:4700:3033::681c:10de 的回复: 时间=288ms请求超时。来自 2606:4700:3033::681c:10de 的回复: 时间=291ms2606:4700:3033::681c:10de 的<span class="hljs-built_in"> Ping </span>统计信息:    数据包: 已发送 = 18，已接收 = 15，丢失 = 3 (16% 丢失)，往返行程的估计时间(以毫秒为单位):    最短 = 257ms，最长 = 462ms，平均 = 304msControl-C^C</code></pre></div><p>如果丢包丢的正好是图片,即使加载完毕,估计也是这么一个半死不活的图标:</p><p><img src="https://img.cyfan.top/pic/lazy/2.jpg" srcset="/img/loading.gif" alt="图片" title="..."></p><p>啧啧,有伤风雅有伤风雅…..((/- -)/</p><p>这个时候,懒加载就变得非常重要了.</p><h1 id="说了那么多-什么是懒加载"><a href="#说了那么多-什么是懒加载" class="headerlink" title="说了那么多,什么是懒加载?"></a>说了那么多,什么是懒加载?</h1><p>名符其义,懒加载懒加载,你懒得看我就懒得加载.</p><p>说的专业点,就是只加载在视野里的图片,不在视野里的图片先不加载,用一张相同的图片代替.</p><p>这样绝对有用,只加载用户可能看的图片,对于可能不看的图片暂时不加载,当用户滑动到这个地方再加载.</p><p>实际上懒加载运用的很广泛,举一个常见的例子,当你浏览知乎时,难道不是划到哪图片才加载到哪吗?只不过图片加载时间太快,很多人都没有留意罢了.</p><p>图片懒加载是提升网站性能和用户体验的一个非常很好方式，并且几乎所有的大型网站都使用到了，比如微博，仅把用户可见的部分显示图片，其余的都暂时不加载，做法就是：让所有图片元素src指向一个小的站位图片比如loading，并新增一个属性(如data-original)存放真实图片地址。每当页面加载（或者滚动条滚动），使用JS脚本将可视区域内的图片src替换回真实地址，并做请求重新加载。</p><h1 id="所以-你依旧没读懂"><a href="#所以-你依旧没读懂" class="headerlink" title="所以,你依旧没读懂?"></a>所以,你依旧没读懂?</h1><p>直接看例子吧.</p><p>当时,我的上一篇博文正常国内加载到显示文字用了将近10min,也就是空白页显示了10min,纵使在国外加载也用了4min.</p><p>也就是正常游客看起来根本加载不了,只有空白页.</p><p>现在,当使用懒加载后:</p><p><img src="https://img.cyfan.top/pic/lazy/3.gif" srcset="/img/loading.gif" alt="图片" title="请注意开发者工具的监视项"></p><p>(为了降低用户查看该动图的时间,我进行了压缩减帧:30fps,大小约有4.3MB,请耐心等待)</p><p>看看开发者工具Network一项,我们很自然发现,当我滑动到某张图片上方,某张图片才开始加载,使用一张动图作为未加载的动画.</p><p>这,就是懒加载的奥秘.</p><h1 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用:"></a>如何使用:</h1><h2 id="html"><a href="#html" class="headerlink" title="html"></a>html</h2><p>我们正常引用一张图片,格式应该如下:</p><div class="hljs"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"/xxx.jpg"</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">"图片"</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"title"</span>&gt;</span></code></pre></div><p>懒加载在html的图片语言中使用了回源, <code>data-original</code> 表示真正的图片位置,而 <code>src</code> 则是懒加载的外观图片.</p><div class="hljs"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://img.cyfan.top/pic/lazy.gif"</span> <span class="hljs-attr">data-original</span>=<span class="hljs-string">"/xxx.jpg"</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">"图片"</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"title"</span>&gt;</span></code></pre></div><p>这样,当打开时网站回家再 <code>src</code> 的资源,只有当滑动到图片上方,再加载 <code>data-original</code> 原始图片.</p><h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><p>当然,Hexo本来使用Markdown,而Markdown本来和html就是亲兄弟,如果不介意,用 <code>&lt;img&gt;</code>  标签也成.</p><p>但是对于已经有了的图片,这样做简直就是噩梦,总不可能一个一个换过去吧.</p><p>这时候,建议使用 <code>Troy</code> 大佬开发的 <code>hexo-lazyload-image</code></p><h3 id="安装hexo-lazyload-image"><a href="#安装hexo-lazyload-image" class="headerlink" title="安装hexo-lazyload-image:"></a>安装<code>hexo-lazyload-image</code>:</h3><p>npm安装:</p><div class="hljs"><pre><code class="hljs undefined">npm install hexo-lazyload-<span class="hljs-built_in">image</span> --<span class="hljs-built_in">save</span></code></pre></div><blockquote><p>关于npm安装慢,请参考以前写的一篇<a href="/2019/07/19/国内加快NPM下载速度/">博文&gt;&gt;</a></p></blockquote><p>接着再hexo配置文件 <code>_config.yml</code></p><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-attr">lazyload:</span><span class="hljs-attr">  enable:</span> <span class="hljs-literal">true</span> <span class="hljs-attr">  onlypost:</span> <span class="hljs-literal">false</span><span class="hljs-attr">  loadingImg:</span> <span class="hljs-comment"># eg. ./images/loading.png</span></code></pre></div><ul><li><code>enable</code> 不解释</li><li><code>onlypost</code> 指是全部站点都用懒加载还是对于文章使用懒加载,默认为 <code>false</code></li><li><code>loadingImg</code> 懒加载所需要的先前图片,目前看来是图片都行,gif也成</li></ul><p>post一下,试试吧.</p><h3 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h3><p>Hexo-lazy-image 实现原理<br>因为文章都是使用markdown来编写的，所以不可能要求我们在markdown里将所有图片路径都指向站位图片，并附加另一个属性，所以，这个工作必须留给hexo的generate部分来做。</p><p>最终可分为两步：</p><p>在 <code>hexo after_post_render</code>事件或者<code>after_render:html</code>事件里将生产出来的文章html代码中所有img元素都加上 <code>data-original</code> 属性，并把 <code>src</code> 值付给他， 然后在将 <code>src</code> 值致为 <code>loading</code> 图片<br>注入 <code>simple-lazyload</code> 脚本在每个页面最后面，当页面加载过后负责判定当前需要重新加载的图片。</p><p>原大佬博客: <a href="https://troyyang.com/2017/08/06/hexo-lazyload-image/" target="_blank" rel="noopener">Troy’s 博客</a></p><h2 id="意外发现"><a href="#意外发现" class="headerlink" title="意外发现"></a>意外发现</h2><p>实际上懒加载还帮我掩饰了一个问题,对于一些失效的图片再也不会加载不出来了,(因为被懒加载图片替换掉了)</p><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾:"></a>结尾:</h1><p>不知道大家有没有这样的心理:</p><p>打开一篇文章,图片死死加载不出来,折腾好长一段时间,终于加载出来了,却发现这些图片毫无作用,这时候估计所有人心里都很恼火吧.</p><p>目前看来,懒加载基本上全是好处:</p><ol><li>缩短不需要看图片用户加载时间.</li><li>提升网页打开速度</li><li>暗示用户网络有问题而不是网站有问题 <del>(臭婊脸)</del></li><li>美化未加载网页</li><li>将用户等待时间从主观上缩短,暗示用户等待时间变短,让用户知道不是卡了,而是正在加载.</li></ol><p>当然,懒加载所需的图片要尽量的小,我的懒加载图片是剽窃百度的,压缩了一下约300kb,加载所需时间为0.2s.</p><p>这是我现在用的懒加载图片：</p><p><img src="https://img.cyfan.top/pic/lazy.gif" srcset="/img/loading.gif" alt="LazyLoad"></p>]]></content>
    
    
    <categories>
      
      <category>好方法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>NPM</tag>
      
      <tag>LazyLoad</tag>
      
      <tag>奇淫巧技</tag>
      
      <tag>等待</tag>
      
      <tag>图片</tag>
      
      <tag>加载</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>听说你喜欢盗头像？_私人独一无二彩色头像养成详解</title>
    <link href="/2020/03/05/%E5%90%AC%E8%AF%B4%E4%BD%A0%E5%96%9C%E6%AC%A2%E7%9B%97%E5%A4%B4%E5%83%8F_%E7%A7%81%E4%BA%BA%E7%8B%AC%E4%B8%80%E6%97%A0%E4%BA%8C%E5%BD%A9%E8%89%B2%E5%A4%B4%E5%83%8F%E5%85%BB%E6%88%90%E8%AF%A6%E8%A7%A3/"/>
    <url>/2020/03/05/%E5%90%AC%E8%AF%B4%E4%BD%A0%E5%96%9C%E6%AC%A2%E7%9B%97%E5%A4%B4%E5%83%8F_%E7%A7%81%E4%BA%BA%E7%8B%AC%E4%B8%80%E6%97%A0%E4%BA%8C%E5%BD%A9%E8%89%B2%E5%A4%B4%E5%83%8F%E5%85%BB%E6%88%90%E8%AF%A6%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<p>【图片比较多！国内用户建议在使用代理情况下查看，否则有些图片没办法正常加载！】<br>咳咳，实际上这个博文不是水的。  </p><p>最近比较闲，干脆写一篇盗头像壁纸的好方法吧。</p><p>另：BTSYNC-<span class="heimu" title="啊，你说什么？(・∀・(・∀・(・∀・\*)">R18美图</span>已正常运营,密钥[BAXRMTU3FYRIOZGFBNKHKRGEUMIKC4Z6I]</p><h1 id="Go！"><a href="#Go！" class="headerlink" title="Go！"></a>Go！</h1><p>先放成品与原图对比，左边是原图，右边是成品：</p><p><img src="https://img.cyfan.top/pic/oura/C1.jpg" srcset="/img/loading.gif" alt="图片"></p><p><img src="https://img.cyfan.top/pic/oura/C2.jpg" srcset="/img/loading.gif" alt="图片"></p><p><img src="https://img.cyfan.top/pic/oura/C3.jpg" srcset="/img/loading.gif" alt="图片"></p><h2 id="准备："><a href="#准备：" class="headerlink" title="准备："></a>准备：</h2><p>由于很多素描画家喜欢在图片上摆一根铅笔，添加水印，并且手机拍摄，导致拍出来的图片难以被直接利用。</p><p>而且图片清晰度很低，好的图片拿来做头像又容易撞头。</p><p>所以，现在开始处理。</p><ul><li><a href="https://petalica-paint.pixiv.dev/index_en.html" target="_blank" rel="noopener">Pixiv的素描填色工具 网站</a>  可能需要梯子</li><li><a href="https://bigjpg.com" target="_blank" rel="noopener">Bigjpg=&gt;降噪无损AI放大卡通图片神器 网站</a></li><li>一个能够修改图片的工具=》ACDSee、Photoshop、isee，甚至2345看图王都可以胜任</li><li>画图板</li></ul><p>这些只是必须的，当然其它的改进纯粹是个人所好了。</p><h2 id="开工"><a href="#开工" class="headerlink" title="开工"></a>开工</h2><h1 id="1"><a href="#1" class="headerlink" title="#1"></a>#1</h1><p>首先Google盗图：</p><p><img src="https://img.cyfan.top/pic/oura/1.jpg" srcset="/img/loading.gif" alt="图片" title="盗图"></p><p>这一张图片直接作为头像估计直接会被笑死，不说别的，光旁边的一根铅笔别人就知道你是在晚上抄的。</p><p>那么，那这个开刀吧。</p><p>黑白化：</p><p><img src="https://img.cyfan.top/pic/oura/1_1.jpg" srcset="/img/loading.gif" alt="图片" title="简单的黑白化"></p><p>抹除那根铅笔(实际上我使用画图板抹除的…)</p><p><img src="https://img.cyfan.top/pic/oura/1_3.jpg" srcset="/img/loading.gif" alt="图片" title="抹除"></p><p><img src="https://img.cyfan.top/pic/oura/1_2.jpg" srcset="/img/loading.gif" alt="图片" title="成品"></p><p>裁剪:</p><p><img src="https://img.cyfan.top/pic/oura/1_4.jpg" srcset="/img/loading.gif" alt="图片" title="头像大小"></p><p>Bigjpg放大降噪:</p><p><img src="https://img.cyfan.top/pic/oura/1_5.jpg" srcset="/img/loading.gif" alt="图片" title="降噪放大"></p><p>PS:此时建议降噪程度为高,太高了会造成边缘模糊,太低了噪点太多.</p><p><img src="https://img.cyfan.top/pic/oura/1_6.jpg" srcset="/img/loading.gif" alt="图片" title="放大完毕"></p><p>大小：240*240 =&gt; 960*960</p><p>吐槽一下,Bigjpg最近服务器爆满,放大这张图片用了我10min…</p><p>使用 <a href="https://petalica-paint.pixiv.dev/index_en.html" target="_blank" rel="noopener">Pixiv的素描填色工具 网站</a> </p><p><img src="https://img.cyfan.top/pic/oura/1_7.jpg" srcset="/img/loading.gif" alt="图片" title="P站神器"></p><p>把图片拖进去，就会进入填色界面：</p><p><img src="https://img.cyfan.top/pic/oura/1_11.jpg" srcset="/img/loading.gif" alt="图片" title="P站神器"></p><p>可以看到右上角有三种风格来选择：<code>Tanpopo</code>、<code>Satsuki</code>、<code>Canna</code> 三种风格,其中默认选择<code>Canna</code>.</p><p>不过作为头像壁纸填色,并不推荐Canna,这是三张不同风格填色图:</p><p><img src="https://img.cyfan.top/pic/oura/1_8.jpg" srcset="/img/loading.gif" alt="图片" title="Canna"></p><p><img src="https://img.cyfan.top/pic/oura/1_9.jpg" srcset="/img/loading.gif" alt="图片" title="Satsuki"></p><p><img src="https://img.cyfan.top/pic/oura/1_10.jpg" srcset="/img/loading.gif" alt="图片" title="Tanpopo"></p><p>可以明显看出 <code>Canna</code> 更加偏近真实风格, <code>Satsuki</code> 则是水彩风格, <code>Tanpopo</code> 更像是彩铅填色.</p><p>当然个人推荐 <code>Satsuki</code> 或 <code>Tanpopo</code> 填色.</p><h1 id="2"><a href="#2" class="headerlink" title="#2"></a>#2</h1><p>同上,Google盗图:</p><p><img src="https://img.cyfan.top/pic/oura/2.jpg" srcset="/img/loading.gif" alt="图片" title="盗图"></p><p>黑白化</p><p><img src="https://img.cyfan.top/pic/oura/2_1.jpg" srcset="/img/loading.gif" alt="图片" title="简单的黑白化"></p><p>裁剪;</p><p><img src="https://img.cyfan.top/pic/oura/2_2.jpg" srcset="/img/loading.gif" alt="图片" title="裁剪"></p><p>抹除铅笔,去除胸前的水印<span class="heimu" title="┗|｀O′|┛">上传者你可真色啊!!!</span></p><p>结果还是用画图板去除成功:</p><p><img src="https://img.cyfan.top/pic/oura/2_3.jpg" srcset="/img/loading.gif" alt="图片" title="去除标识"></p><p>由于这张图片本身就足够大了,3376*4800,就不必Bigjpg降噪了,直接填色:</p><p><img src="https://img.cyfan.top/pic/oura/2_4.jpg" srcset="/img/loading.gif" alt="图片" title="再次裁剪"></p><p><img src="https://img.cyfan.top/pic/oura/2_5.jpg" srcset="/img/loading.gif" alt="图片" title="填色"></p><p><img src="https://img.cyfan.top/pic/oura/2_6.jpg" srcset="/img/loading.gif" alt="图片" title="填色"></p><p>选择 <code>Tanpopo</code> 风格:</p><p><img src="https://img.cyfan.top/pic/oura/2_7.jpg" srcset="/img/loading.gif" alt="图片" title="Tanpopo"></p><p>实际上这张太长了,感觉适合做手机壁纸.</p><h1 id="3"><a href="#3" class="headerlink" title="#3"></a>#3</h1><p>废话不多说,直接看原图</p><p><img src="https://img.cyfan.top/pic/oura/3.jpg" srcset="/img/loading.gif" alt="图片" title="原始图片"></p><p>这张就相对棘手了,因为直接黑白化就会造成部分线条颜色变淡,在填色过程中可能造成溢出.</p><p><img src="https://img.cyfan.top/pic/oura/3_1.jpg" srcset="/img/loading.gif" alt="图片" title="直接处理"></p><p>所以先进行降低对比度:</p><p><img src="https://img.cyfan.top/pic/oura/3_4.jpg" srcset="/img/loading.gif" alt="图片" title="降低对比度&amp;裁剪"></p><p>再黑白化:</p><p><img src="https://img.cyfan.top/pic/oura/3_5.jpg" srcset="/img/loading.gif" alt="图片" title="黑白化"></p><p>抹除铅笔、抹除水印、修复图片：</p><p><img src="https://img.cyfan.top/pic/oura/3_6.jpg" srcset="/img/loading.gif" alt="图片" title="修正"></p><p>最后一次裁剪：</p><p><img src="https://img.cyfan.top/pic/oura/3_7.jpg" srcset="/img/loading.gif" alt="图片" title="裁剪"></p><p>bigjpg降噪放大：</p><p>337*515 =&gt; 1348*2060</p><p><img src="https://img.cyfan.top/pic/oura/3_8.jpg" srcset="/img/loading.gif" alt="图片" title="降噪、放大"></p><p>填色：</p><p><img src="https://img.cyfan.top/pic/oura/3_9.jpg" srcset="/img/loading.gif" alt="图片" title="Satsuki"></p><p><img src="https://img.cyfan.top/pic/oura/3_10.jpg" srcset="/img/loading.gif" alt="图片" title="Tanpopo"></p><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>这种方法相当适合作为头像壁纸，不仅是彩色，能够相撞的概率极低（别人盗你头像不算啦），真正做到了独一无二。</p><p>而且别人就算是把你的头像放搜索引擎上处理，也是一无所获。</p>]]></content>
    
    
    <categories>
      
      <category>好方法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>奇淫巧技</tag>
      
      <tag>头像</tag>
      
      <tag>壁纸</tag>
      
      <tag>素描</tag>
      
      <tag>填色</tag>
      
      <tag>黑科技</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Gitalk详细踩坑记录</title>
    <link href="/2020/02/26/Gitalk%E8%AF%A6%E7%BB%86%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/"/>
    <url>/2020/02/26/Gitalk%E8%AF%A6%E7%BB%86%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>没想到怎么快就更新一篇了。</p><p>这真的是踩了个巨坑啊。</p><h2 id="为什么又要切换回Gitalk？"><a href="#为什么又要切换回Gitalk？" class="headerlink" title="为什么又要切换回Gitalk？"></a>为什么又要切换回Gitalk？</h2><p>咳咳，这事情还得从上一年12月说起。</p><p>当时正忙于学业，等到期末考完以后接受到一份LeanCloud邮件，大概内容就是我的API1个月没有调用被强制归档了。</p><p><span class="heimu" title="你知道的太多了">那也不能怪我啊！我博客没人来就说我缘故咯？</span></p><p>然后登陆上LeanCloud，恢复数据，然后就没有然后了。</p><p>昨天刚刚更新了一篇白嫖记录，登入博客后却发现没有更新。</p><p>接着去Coding，告诉我Coding转型了，接着用Pages要实名认证。<span class="heimu" title="你知道的太多了">我要是能实名认证那我不早就买一台国内服务器备案了？？？</span></p><p>没办法，只好又迁回Github。好在Github可以给每一个仓库绑定一个域名，（大不了以后更新博客麻烦点罢了。）</p><p>接着折腾了Github好一会儿，包括后来解决Coding赖着域名不放，国内ip解析错误的原因。</p><p>结果今天早上登陆却发现：</p><p><img src="https://img.cyfan.top/pic/gitalk/1.jpg" srcset="/img/loading.gif" alt="图片" title="LeanCloud报错"></p><p>…</p><p>打开LeanCloud官方文档,并没有找到答案.</p><p>也就是说,我还不知道错误发生在归档后还是在迁移后的.</p><p>况且本来LeanCloud开发版每天休眠6h我也受够了,于是打算迁到Gitalk.</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="数据"><a href="#数据" class="headerlink" title="数据:"></a>数据:</h2><p>数据肯定是没法恢复了,毕竟是要Github账号的.</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置:"></a>配置:</h2><p>Gitalk官方说明安装只有简单的几句话:</p><div class="hljs"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"stylesheet"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-comment">&lt;!-- or --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"stylesheet"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://unpkg.com/gitalk/dist/gitalk.css"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://unpkg.com/gitalk/dist/gitalk.min.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre></div><blockquote><p>…<br>添加一个容器：<br><code>&lt;div id=&quot;gitalk-container&quot;&gt;&lt;/div&gt;</code><br>用下面的 Javascript 代码来生成 gitalk 插件：</p></blockquote><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-keyword">var</span> gitalk = <span class="hljs-keyword">new</span> Gitalk(&#123;  <span class="hljs-attribute">clientID</span>: <span class="hljs-string">'GitHub Application Client ID'</span>,  <span class="hljs-attribute">clientSecret</span>: <span class="hljs-string">'GitHub Application Client Secret'</span>,  <span class="hljs-attribute">repo</span>: <span class="hljs-string">'GitHub repo'</span>,  <span class="hljs-attribute">owner</span>: <span class="hljs-string">'GitHub repo owner'</span>,  <span class="hljs-attribute">admin</span>: [<span class="hljs-string">'GitHub repo owner and collaborators, only these guys can initialize github issues'</span>],  <span class="hljs-attribute">id:</span><span class="hljs-string"> location.pathname</span>,      <span class="hljs-comment">// Ensure uniqueness and length less than 50</span>  <span class="hljs-attribute">distractionFreeMode</span>: <span class="hljs-literal">false</span>  <span class="hljs-comment">// Facebook-like distraction free mode</span>&#125;)gitalk.render(<span class="hljs-string">'gitalk-container'</span>)</code></pre></div><p>当然,在hexo里面使用估计就没有那么简单了,所以我最终按照里面自带集成的Gitment模板以及文档整理了一份.</p><p>实际上Gitment和Gitalk的核心原理是一样的,内容现实,所以最终还是成功了.</p><h2 id="注册"><a href="#注册" class="headerlink" title="注册:"></a>注册:</h2><blockquote><p>无图警告！</p></blockquote><p>点开 [<a href="https://github.com/settings/applications/new]" target="_blank" rel="noopener">https://github.com/settings/applications/new]</a>, 注册一个App</p><p>:: Register a new OAuth application<br>必填.填写这个app的名字(其实随便起就好了)<br>:: Homepage URL<br>必填,博客根目录,不能在最后带<code>/</code><br>:: Application description<br>胡乱填写的简介<br>:: Authorization callback URL<br>必填。与Homepage URL一样,是回显目录</p><p>点击Register，注册成功！</p><p>接着会跳转，此处就不截图了。</p><p>其中Client ID和Client Secret在后面的配置中需要用到，到时复制粘贴即可</p><h2 id="配置："><a href="#配置：" class="headerlink" title="配置："></a>配置：</h2><p>根据Gitment样式，整理如下</p><h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><p>进入 <code>\themes\next\layout\_third-party\comments\</code> 新建 <code>gitalk.swig</code> 文件,里面填写一下内容:</p><div class="hljs"><pre><code class="hljs html">&#123;% raw %&#125;&#123;% if page.comments &amp;&amp; theme.gitalk.enable %&#125;  &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://unpkg.com/gitalk/dist/gitalk.css&amp;quot;&amp;gt;  &amp;lt;script src=&amp;quot;https://unpkg.com/gitalk/dist/gitalk.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;   &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;        var gitalk = new Gitalk(&#123;          clientID: &amp;#x27;&#123;&#123; theme.gitalk.ClientID &#125;&#125;&amp;#x27;,          clientSecret: &amp;#x27;&#123;&#123; theme.gitalk.ClientSecret &#125;&#125;&amp;#x27;,          repo: &amp;#x27;&#123;&#123; theme.gitalk.repo &#125;&#125;&amp;#x27;,          owner: &amp;#x27;&#123;&#123; theme.gitalk.githubID &#125;&#125;&amp;#x27;,          admin: [&amp;#x27;&#123;&#123; theme.gitalk.adminUser &#125;&#125;&amp;#x27;],          id: location.pathname,          distractionFreeMode: &amp;#x27;&#123;&#123; theme.gitalk.distractionFreeMode &#125;&#125;&amp;#x27;        &#125;)        gitalk.render(&amp;#x27;gitalk-container&amp;#x27;)                  &amp;lt;/script&amp;gt;&#123;% endif %&#125;&#123;% endraw %&#125;</code></pre></div><h3 id="2"><a href="#2" class="headerlink" title="2"></a>2</h3><p>修改 <code>\themes\next\layout\_third-party\comments\</code> ,在最后一行填下:</p><div class="hljs"><pre><code class="hljs undefined"><span class="xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name">raw</span> %&#125;</span><span class="xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">include</span></span> 'gitalk.swig' %&#125;</span><span class="xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name">endraw</span> %&#125;</span><span class="xml"></span></code></pre></div><h3 id="3"><a href="#3" class="headerlink" title="3"></a>3</h3><p>修改 <code>\themes\next\layout\_partials\comments.swig</code> ,在 <code>{if}</code> 之下, <code>{elseif}</code> 之上填下:</p><div class="hljs"><pre><code class="hljs html">&#123;% raw %&#125;&#123;% elseif theme.gitalk.enable %&#125; &amp;lt;div id=&amp;quot;gitalk-container&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&#123;% endraw %&#125;</code></pre></div><h3 id="4"><a href="#4" class="headerlink" title="4"></a>4</h3><p>新建 <code>\themes\next\source\css\_common\components\third-party\gitalk.styl</code> ,填下:</p><div class="hljs"><pre><code class="hljs css"><span class="hljs-selector-class">.gt-header</span> <span class="hljs-selector-tag">a</span>, <span class="hljs-selector-class">.gt-comments</span> <span class="hljs-selector-tag">a</span>, <span class="hljs-selector-class">.gt-popup</span> <span class="hljs-selector-tag">a</span>  <span class="hljs-selector-tag">border-bottom</span>: <span class="hljs-selector-tag">none</span>;<span class="hljs-selector-class">.gt-container</span> <span class="hljs-selector-class">.gt-popup</span> <span class="hljs-selector-class">.gt-action</span><span class="hljs-selector-class">.is--active</span><span class="hljs-selector-pseudo">:before</span>  <span class="hljs-selector-tag">top</span>: 0<span class="hljs-selector-class">.7em</span>;</code></pre></div><h3 id="5"><a href="#5" class="headerlink" title="5"></a>5</h3><p>修改<code>\themes\next\source\css\_common\components\third-party\third-party.styl</code>,最后一行填下</p><div class="hljs"><pre><code class="hljs css">@<span class="hljs-keyword">import</span> <span class="hljs-string">"gitalk"</span>;</code></pre></div><h3 id="6"><a href="#6" class="headerlink" title="6"></a>6</h3><p>最后,在<code>\themes\next\_config.yml</code>最后一行填下:</p><div class="hljs"><pre><code class="hljs yml"><span class="hljs-attr">gitalk:</span><span class="hljs-attr">  enable:</span> <span class="hljs-literal">true</span><span class="hljs-attr">  githubID:</span> <span class="hljs-string">github帐号</span>  <span class="hljs-comment">#如ChenYFan   </span><span class="hljs-attr">  repo:</span> <span class="hljs-string">仓库名称</span>   <span class="hljs-comment"># 例：blog</span><span class="hljs-attr">  ClientID:</span> <span class="hljs-string">Client</span> <span class="hljs-string">ID</span><span class="hljs-attr">  ClientSecret:</span> <span class="hljs-string">Client</span> <span class="hljs-string">Secret</span><span class="hljs-attr">  adminUser:</span> <span class="hljs-string">github帐号</span> <span class="hljs-comment">#指定可初始化评论账户</span><span class="hljs-attr">  distractionFreeMode:</span> <span class="hljs-literal">true</span></code></pre></div><h3 id="结束"><a href="#结束" class="headerlink" title="结束?"></a>结束?</h3><p>打开博客,你会发现有一些博文评论是正常的,但是有一些博文你可能会看到:</p><p>Error:Validation Failed</p><p>没错，这不是我的错<span class="heimu" title="别打我！">滑稽狗头保命</span>。</p><p>这个错误在Gitalk用户里非常常见。</p><p>为什么？</p><p>这还得从官方文档讲起：</p><div class="hljs"><pre><code class="hljs undefined">...<span class="hljs-deletion">- owner String</span><span class="hljs-deletion">-必须. GitHub repository 所有者，可以是个人或者组织。</span><span class="hljs-deletion">-admin Array</span><span class="hljs-deletion">-必须. GitHub repository 的所有者和合作者 (对这个 repository 有写权限的用户)。</span><span class="hljs-deletion">-id String</span><span class="hljs-deletion">-Default: location.href.</span><span class="hljs-deletion">-页面的唯一标识。长度必须小于50。</span>...</code></pre></div><p>注意一下id,这个最终会成为Github issues中的lable之一,但是lable是有字数限制的,50个英文单词.</p><p>但是有人会问我的中文名加上去之后也没有50字啊.</p><p>对啊,可是Gitalk会将其转码,比如说<code>留言板</code>三个字最终会转成<code>/%E7%95%99%E8%A8%80%E6%9D%BF/</code><span class="heimu" title="你知道的太多了">这又♀长又♂粗</span>的文字.</p><p>但是第一个Lable不能重复,重复后两个issues的两个Lable就相同了,这样两个评论就混在一起了.</p><p>所以网上就有人开始讨论怎么解决了.</p><h3 id="规避解码"><a href="#规避解码" class="headerlink" title="规避解码:"></a>规避解码:</h3><p>毕竟Github Lable其实是支持中文的…<span class="heimu" title="你知道的太多了">你怎么不早说!</span>,所以思路很简单,规避解码即可.</p><p>返回步骤1,第11行,默认值是<code>location.pathname</code>也就是路径,规避解码很简单,把它替换成<code>decode(location.pathname)</code>就可以啦.</p><p>当然这个办法最终还是有效的:</p><p><img src="https://img.cyfan.top/pic/gitalk/2.jpg" srcset="/img/loading.gif" alt="图片" title="规避解码"></p><p>但是,但是,你还记得我有一篇文章的题目吗: <code>CloudFlare%EF%BC%9A%E5%8F%AE%E5%92%9A%EF%BC%81%E6%82%A8%E7%9A%8415%E5%B9%B4%E5%85%8D%E8%B4%B9%E6%B3%9B%E5%9F%9F%E5%90%8DSSL%E8%AF%81%E4%B9%A6%E5%88%B0%E4%BA%86%EF%BC%81</code></p><p>没错,解码以后就是: <code>CloudFlare：叮咚！您的15年免费泛域名SSL证书到了！</code><br>加上博客域名和路径,将近60字.</p><p>这个方法依旧没有解决根本问题.</p><h3 id="时间"><a href="#时间" class="headerlink" title="时间"></a>时间</h3><p><del>这个最终还是被我采用了,原因是它修改起来真的很简单.</del> 最终这个办法还是被舍弃了。</p><p>返回步骤1,第11行,默认值是 <code>location.pathname</code> 也就是路径,把它替换成 <code>J3t7cGFnZS5kYXRlfX0n</code> (直接输入page.date被识别成nodejs语言执行了,只能通过base64编码,解码即可)(请解码后替换即可).</p><p>最终的lable会变成时间戳(还是毫秒级别的),时间戳就是目标时间距离1970-01-01 08:00:00(UTC +8)的毫秒</p><p><img src="https://img.cyfan.top/pic/gitalk/3.jpg" srcset="/img/loading.gif" alt="图片" title="完结撒花"></p><p>这个是创建时间,也就是说只要我不是故意去更改时间,是几乎不可能碰撞的<span class="heimu" title="你知道的太多了">废话,我怎么可能在同一时间内写好两篇博文</span></p><p>而且时间戳到50位…9999年12月31日23点59分59秒的时间戳253402271999000（刚刚好15位），也就是说用到我200代都够用。</p><p>但是，</p><h3 id="MD5压缩字符"><a href="#MD5压缩字符" class="headerlink" title="MD5压缩字符"></a>MD5压缩字符</h3><blockquote><p>2020年2月27日最终选择。</p></blockquote><p>为什么？</p><p>因为后来发现使用时来作为Lable会导致在下一次修改后Lable改变。</p><p>因为选择的page.date并不是开头的date，而是根据电脑里面的修改时间判定的。</p><p>所以即使是改成page.update也没用…</p><p>所以最终采用了MD5</p><p>既然你最多50字,那么干脆用MD5强制压缩至32个字从根本解决问题,而且MD5只要不是恶意去碰撞基本不会相同.</p><p>毕竟MD5是一个比较著名的hash算法嘛.</p><p><del>但是,使用MD5需要额外添加很长一段js,在进行初始化估计就要一段时间了.</del></p><p><del>所以,此处不推荐使用MD5,如果你有这个需求,可以去gitalk或gitment官方github的issues中查看.</del></p><p>修改方式：在进入 <code>\themes\next\layout\_third-party\comments\gitalk.swig</code> ,修改成这样：</p><div class="hljs"><pre><code class="hljs html">&#123;% raw %&#125;&#123;% if page.comments &amp;&amp; theme.gitalk.enable %&#125;  &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://unpkg.com/gitalk/dist/gitalk.css&amp;quot;&amp;gt;  &amp;lt;script src=&amp;quot;https://unpkg.com/gitalk/dist/gitalk.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;  &amp;lt;script src=&amp;quot;https://cdn.bootcss.com/blueimp-md5/2.10.0/js/md5.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;   &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;        var gitalk = new Gitalk(&#123;          clientID: &amp;#x27;&#123;&#123; theme.gitalk.ClientID &#125;&#125;&amp;#x27;,          clientSecret: &amp;#x27;&#123;&#123; theme.gitalk.ClientSecret &#125;&#125;&amp;#x27;,          repo: &amp;#x27;&#123;&#123; theme.gitalk.repo &#125;&#125;&amp;#x27;,          owner: &amp;#x27;&#123;&#123; theme.gitalk.githubID &#125;&#125;&amp;#x27;,          admin: [&amp;#x27;&#123;&#123; theme.gitalk.adminUser &#125;&#125;&amp;#x27;],          id: md5(location.pathname),          distractionFreeMode: &amp;#x27;&#123;&#123; theme.gitalk.distractionFreeMode &#125;&#125;&amp;#x27;        &#125;)        gitalk.render(&amp;#x27;gitalk-container&amp;#x27;)                  &amp;lt;/script&amp;gt;&#123;% endif %&#125;&#123;% endraw %&#125;</code></pre></div><p>至于担心更换域名后Lable不匹配的问题,在这里说明一下,Lable采用的是相对目录,比如 <code>\留言板\</code> ,这个经过md5后是 <code>b31b6a578fce950674accdd14100e448</code></p><p>所以只要不改题目都没问题。</p><p>咳咳,<span class="heimu" title="你知道的太多了">还是MD5大法好b（￣▽￣）d　</span></p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>看起来自己解决问题就是好啊。</p><p>另外，国内用户如果看到评论框有：Error: Network Error字样或长时间加载或没有评论框，可以尝试修改一下DNS至国外如1.1.1.1、1.0.0.1、8.8.8.8、8.8.4.4，如果还是不行，那就，那就拿梯子吧。</p><p>毕竟GXX对于Github尤其是API很不友好…</p><p>呃,听说三月七号开学,估计博客又要荒凉了,高中生活好啊…</p>]]></content>
    
    
    <categories>
      
      <category>爱折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Github</tag>
      
      <tag>踩坑</tag>
      
      <tag>手动填坑</tag>
      
      <tag>评论系统</tag>
      
      <tag>评论</tag>
      
      <tag>Gitalk</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一次成功的白嫖经历_萌娘百科</title>
    <link href="/2020/02/25/%E4%B8%80%E6%AC%A1%E6%88%90%E5%8A%9F%E7%9A%84%E7%99%BD%E5%AB%96%E7%BB%8F%E5%8E%86-%E8%90%8C%E5%A8%98%E7%99%BE%E7%A7%91/"/>
    <url>/2020/02/25/%E4%B8%80%E6%AC%A1%E6%88%90%E5%8A%9F%E7%9A%84%E7%99%BD%E5%AB%96%E7%BB%8F%E5%8E%86-%E8%90%8C%E5%A8%98%E7%99%BE%E7%A7%91/</url>
    
    <content type="html"><![CDATA[<p><span class="heimu" title="你知道的太多了">当你看到这一行字，说明我白嫖成功啦！</span></p><p>额，上一次更新都到了过年前X天。其实不隐瞒诸君，本来想写一篇关于BT下载的文章，只不过太长了，迟迟没有写完。</p><p>呜呜呜,快2个月了.</p><p>又遭遇了php服务商摔锅、网课袭击<span class="heimu" title="你知道的太多了">我TM还是个学生啊啊啊啊</span>，再加上实在太懒，也就没做了。</p><p>一眨眼2个月过去了，博客估计都荒废了，所以暂时移走BT文章，来讲讲最近成功白嫖的东西。</p><p><span class="heimu" title="你知道的太多了">这次是真的白嫖</span></p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>经常上萌娘百科的同学都知道，萌娘百科自带一个及其搞笑的功能：<span class="heimu" title="这一次，你知道的并不多">将黑色方块覆盖在文字上，鼠标移动时反白（就像现在一样）</span></p><p>Wikipedia上是这么评价的：</p><blockquote><p><strong>萌娘百科使用多种方法来增加幽默感：在条目中使用流行动漫术语及恶搞内容来刻画形象；故意写一些文字然后使用删除线来划去；亦或者使用加黑背景来隐藏某些词语，被隐藏的字用鼠标进行选择（反白）就可以看到。这些字大多数是与主条目内容无关的吐槽；另外，部分条目还使用了特殊效果或neta，如“阿卡林”相关的内容通常会被淡化处理，“漫无止境的八月”条目内容被重复了八次，“标题党”条目的标题为随机生成的标题党风格题目，等等。</strong></p></blockquote><p>话说回来这个功能真的很有趣,<span class="heimu" title="你知道的太多了">毕竟我要吐槽的还不少嘛?</span>,<del>删除线已经无法满足我了</del></p><p>所以,我就试图把这个功能照办到我的博客上去.</p><h2 id="解决："><a href="#解决：" class="headerlink" title="解决："></a>解决：</h2><p>当然，我刚开始有三种想法：</p><blockquote><p>1.网上直接抄<span class="heimu" title="你知道的太多了">额,这个似乎是最简单的</span><br>2.自己抓包抓资源(结果最后就这么办了)<br>3.自己写(这个是我最不想做的,因为我最多只能做出画词反白,无法做到鼠标移上去反白)(幸好最终方法二成功白嫖)</p></blockquote><h2 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h2><p>实不相瞒,刚开始就发现了最终目标:</p><p><img src="https://img.cyfan.top/pic/moegirlcss/1.jpg" srcset="/img/loading.gif" alt="图片" title="干得漂亮!"><br><img src="https://img.cyfan.top/pic/moegirlcss/2.png" srcset="/img/loading.gif" alt="图片" title="+1!"></p><p>而且截图也是萌娘百科耶( •̀ ω •́ )y！</p><p>结果回答让我直接吐血：</p><p><img src="https://img.cyfan.top/pic/moegirlcss/2.jpg" srcset="/img/loading.gif" alt="图片" title="?????????"></p><p>而且这还是唯一一个回答。 <del>捂脸痛哭つ﹏⊂</del></p><p>结果在百度上除了上述回答一无所获。</p><p><img src="https://img.cyfan.top/pic/moegirlcss/3.jpg" srcset="/img/loading.gif" alt="图片" title="??????????????????????????"></p><p><span class="heimu" title="你知道的太多了"><del>看起来“百度已死”这句话确实适合于程序员</del></span></p><h2 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h2><p>欸，没办法，只能动手实践了。</p><p>萌娘百科黑色方框最多的一篇：</p><p><img src="https://img.cyfan.top/pic/moegirlcss/4.jpg" srcset="/img/loading.gif" alt="图片" title="鬼畜全明星！"></p><p>就按<code>提乾涉经</code>下手吧!</p><p>查看源代码:</p><p><img src="https://img.cyfan.top/pic/moegirlcss/5.jpg" srcset="/img/loading.gif" alt="图片" title="源代码"></p><p>搜索<code>提乾涉经</code></p><p><img src="https://img.cyfan.top/pic/moegirlcss/6.jpg" srcset="/img/loading.gif" alt="图片" title="源代码+1"></p><p>摘下来这么一句:</p><div class="hljs"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ruby</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">rb</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"heimu"</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"你知道的太多了"</span>&gt;</span>提前射精<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">rb</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">rp</span>&gt;</span>（<span class="hljs-tag">&lt;/<span class="hljs-name">rp</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">rt</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"font-size:0.75em"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"heimu"</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"你知道的太多了"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">del</span>&gt;</span>提乾涉经<span class="hljs-tag">&lt;/<span class="hljs-name">del</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">rt</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">rp</span>&gt;</span>）<span class="hljs-tag">&lt;/<span class="hljs-name">rp</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ruby</span>&gt;</span></code></pre></div><p><code>&lt;ruby&gt;</code>和<code>&lt;rb&gt;</code>是html自带的不管,最让我感兴趣的是<code>&lt;span class=&quot;heimu&quot; title=&quot;你知道的太多了&quot;&gt;</code>,因为<code>你知道的太多了</code>这一句就是鼠标放在上面显示的话。</p><p><code>&lt;span&gt;</code>是层,class是样式为<code>heimu</code>,那么,<code>heimu</code>就是我们要找的了!</p><p>全局搜索<code>heimu</code>,竟然有300多,大致翻了一下,并没有在裸css(全部是关于bilibili播放器样式的文件…)里找到,那么,开头应用的样式文件就很可疑了.</p><div class="hljs"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"stylesheet"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"/load.php?debug=false&amp;amp;lang=zh-cn&amp;amp;modules=ext.cite.styles%7Cmediawiki.legacy.commonPrint%2Cshared%7Cmediawiki.sectionAnchor%7Cmediawiki.skinning.interface%7Cskins.vector.styles&amp;amp;only=styles&amp;amp;skin=vector"</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">async</span>=<span class="hljs-string">""</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"/load.php?debug=false&amp;amp;lang=zh-cn&amp;amp;modules=startup&amp;amp;only=scripts&amp;amp;skin=vector"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"ResourceLoaderDynamicStyles"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">""</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"stylesheet"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"/load.php?debug=false&amp;amp;lang=zh-cn&amp;amp;modules=site.styles&amp;amp;only=styles&amp;amp;skin=vector"</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"generator"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"MediaWiki 1.31.5"</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"og:image"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"https://img.moegirl.org/common/6/64/%E5%85%A8%E6%98%8E%E6%98%9F.gif"</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"alternate"</span> <span class="hljs-attr">media</span>=<span class="hljs-string">"only screen and (max-width: 720px)"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://mzh.moegirl.org/%E9%AC%BC%E7%95%9C%E5%85%A8%E6%98%8E%E6%98%9F"</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"shortcut icon"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"/favicon.ico"</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"search"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"application/opensearchdescription+xml"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"/opensearch_desc.php"</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"萌娘百科 (zh)"</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"EditURI"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"application/rsd+xml"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://zh.moegirl.org/api.php?action=rsd"</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"alternate"</span> <span class="hljs-attr">hreflang</span>=<span class="hljs-string">"zh"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"/zh/%E9%AC%BC%E7%95%9C%E5%85%A8%E6%98%8E%E6%98%9F"</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"alternate"</span> <span class="hljs-attr">hreflang</span>=<span class="hljs-string">"zh-Hans"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"/zh-hans/%E9%AC%BC%E7%95%9C%E5%85%A8%E6%98%8E%E6%98%9F"</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"alternate"</span> <span class="hljs-attr">hreflang</span>=<span class="hljs-string">"zh-Hant"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"/zh-hant/%E9%AC%BC%E7%95%9C%E5%85%A8%E6%98%8E%E6%98%9F"</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"alternate"</span> <span class="hljs-attr">hreflang</span>=<span class="hljs-string">"zh-CN"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"/zh-cn/%E9%AC%BC%E7%95%9C%E5%85%A8%E6%98%8E%E6%98%9F"</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"alternate"</span> <span class="hljs-attr">hreflang</span>=<span class="hljs-string">"zh-TW"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"/zh-tw/%E9%AC%BC%E7%95%9C%E5%85%A8%E6%98%8E%E6%98%9F"</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"alternate"</span> <span class="hljs-attr">hreflang</span>=<span class="hljs-string">"x-default"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"/%E9%AC%BC%E7%95%9C%E5%85%A8%E6%98%8E%E6%98%9F"</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"license"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"/%E8%90%8C%E5%A8%98%E7%99%BE%E7%A7%91:%E7%89%88%E6%9D%83%E4%BF%A1%E6%81%AF"</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"canonical"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://zh.moegirl.org/%E9%AC%BC%E7%95%9C%E5%85%A8%E6%98%8E%E6%98%9F"</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"keywords"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"萌娘,百科,wiki,梗,娘化,萝莉,动画,漫画,动漫,游戏,音乐,宅腐,ACG,anime,comic,game,GalGame"</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">'https://dup.baidustatic.com/js/ds.js'</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre></div><p>baidujs和alternate、license、canonical、keywords显然就不是，实际上就只有三个资源：</p><div class="hljs"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"stylesheet"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"/load.php?debug=false&amp;amp;lang=zh-cn&amp;amp;modules=ext.cite.styles%7Cmediawiki.legacy.commonPrint%2Cshared%7Cmediawiki.sectionAnchor%7Cmediawiki.skinning.interface%7Cskins.vector.styles&amp;amp;only=styles&amp;amp;skin=vector"</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"stylesheet"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"/load.php?debug=false&amp;amp;lang=zh-cn&amp;amp;modules=site.styles&amp;amp;only=styles&amp;amp;skin=vector"</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">async</span>=<span class="hljs-string">""</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"/load.php?debug=false&amp;amp;lang=zh-cn&amp;amp;modules=startup&amp;amp;only=scripts&amp;amp;skin=vector"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre></div><p>由于当时不知道是不是通过js实现,顺便把js带上了.</p><p>接下来的事情就有点幼稚了:</p><p>=&gt;在桌面上新建html,粘贴,补上 “<a href="https://zh.moegirl.org”" target="_blank" rel="noopener">https://zh.moegirl.org”</a> 域名前缀，再添一行<code>&lt;span class=&quot;heimu&quot; title=&quot;你知道的太多了&quot;&gt;提前射精&lt;/span&gt;</code>,打开<br>=&gt;成功显示!<br>=&gt;删去第一行<br>=&gt;成功显示<br>=&gt;删去第二行<br>=&gt;不成功显示!<br>=&gt;补回第二行,删去第三行<br>=&gt;成功显示!</p><p>那么,剩下来位置就很清楚了,<code>&lt;link rel=&quot;stylesheet&quot; href=&quot;/load.php?debug=false&amp;amp;lang=zh-cn&amp;amp;modules=site.styles&amp;amp;only=styles&amp;amp;skin=vector&quot; /&gt;</code>便是</p><p>直接点开来,结果找到拦截:</p><p><img src="https://img.cyfan.top/pic/moegirlcss/7.jpg" srcset="/img/loading.gif" alt="图片" title="遭到拦截"></p><p>emmmm…点开了文档:</p><p>按下了F12.</p><p>Chrome调试神器！</p><p><img src="https://img.cyfan.top/pic/moegirlcss/8.jpg" srcset="/img/loading.gif" alt="图片" title="闪亮登场!"></p><p>点击load.php,成功显示:</p><p><img src="https://img.cyfan.top/pic/moegirlcss/9.jpg" srcset="/img/loading.gif" alt="图片" title="请看Preview"></p><p>里面就是啦!</p><h2 id="精简"><a href="#精简" class="headerlink" title="精简"></a>精简</h2><p>不过这个css太长了,<span class="heimu" title="你知道的太多了">而且大多是废话</span>,手动查找<code>heimu</code>,发现只有这短短几行:</p><div class="hljs"><pre><code class="hljs css"><span class="hljs-selector-tag">span</span><span class="hljs-selector-class">.heimu</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.external</span>,<span class="hljs-selector-tag">span</span><span class="hljs-selector-class">.heimu</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.external</span><span class="hljs-selector-pseudo">:visited</span>,<span class="hljs-selector-tag">span</span><span class="hljs-selector-class">.heimu</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.extiw</span>,<span class="hljs-selector-tag">span</span><span class="hljs-selector-class">.heimu</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.extiw</span><span class="hljs-selector-pseudo">:visited</span> &#123;    <span class="hljs-attribute">color</span>: <span class="hljs-number">#252525</span>&#125;<span class="hljs-selector-class">.heimu</span>,<span class="hljs-selector-class">.heimu</span> <span class="hljs-selector-tag">a</span>,<span class="hljs-selector-tag">a</span> <span class="hljs-selector-class">.heimu</span>,<span class="hljs-selector-class">.heimu</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.new</span> &#123;    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#252525</span>;    <span class="hljs-attribute">color</span>: <span class="hljs-number">#252525</span>;    <span class="hljs-attribute">text-shadow</span>: none&#125;<span class="hljs-selector-tag">body</span><span class="hljs-selector-pseudo">:not(.heimu_toggle_on)</span> <span class="hljs-selector-class">.heimu</span><span class="hljs-selector-pseudo">:hover</span>,<span class="hljs-selector-tag">body</span><span class="hljs-selector-pseudo">:not(.heimu_toggle_on)</span> <span class="hljs-selector-class">.heimu</span><span class="hljs-selector-pseudo">:active</span>,<span class="hljs-selector-tag">body</span><span class="hljs-selector-pseudo">:not(.heimu_toggle_on)</span> <span class="hljs-selector-class">.heimu</span><span class="hljs-selector-class">.off</span> &#123;    <span class="hljs-attribute">transition</span>: color .<span class="hljs-number">13s</span> linear;    <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>&#125;<span class="hljs-selector-tag">body</span><span class="hljs-selector-pseudo">:not(.heimu_toggle_on)</span> <span class="hljs-selector-class">.heimu</span><span class="hljs-selector-pseudo">:hover</span> <span class="hljs-selector-tag">a</span>,<span class="hljs-selector-tag">body</span><span class="hljs-selector-pseudo">:not(.heimu_toggle_on)</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span> <span class="hljs-selector-class">.heimu</span>,<span class="hljs-selector-tag">body</span><span class="hljs-selector-pseudo">:not(.heimu_toggle_on)</span> <span class="hljs-selector-class">.heimu</span><span class="hljs-selector-class">.off</span> <span class="hljs-selector-tag">a</span>,<span class="hljs-selector-tag">body</span><span class="hljs-selector-pseudo">:not(.heimu_toggle_on)</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span> <span class="hljs-selector-class">.heimu</span><span class="hljs-selector-class">.off</span> &#123;    <span class="hljs-attribute">transition</span>: color .<span class="hljs-number">13s</span> linear;    <span class="hljs-attribute">color</span>: <span class="hljs-number">#add8e6</span>&#125;<span class="hljs-selector-tag">body</span><span class="hljs-selector-pseudo">:not(.heimu_toggle_on)</span> <span class="hljs-selector-class">.heimu</span><span class="hljs-selector-class">.off</span> <span class="hljs-selector-class">.new</span>,<span class="hljs-selector-tag">body</span><span class="hljs-selector-pseudo">:not(.heimu_toggle_on)</span> <span class="hljs-selector-class">.heimu</span><span class="hljs-selector-class">.off</span> <span class="hljs-selector-class">.new</span><span class="hljs-selector-pseudo">:hover</span>,<span class="hljs-selector-tag">body</span><span class="hljs-selector-pseudo">:not(.heimu_toggle_on)</span> <span class="hljs-selector-class">.new</span><span class="hljs-selector-pseudo">:hover</span> <span class="hljs-selector-class">.heimu</span><span class="hljs-selector-class">.off</span>,<span class="hljs-selector-tag">body</span><span class="hljs-selector-pseudo">:not(.heimu_toggle_on)</span> <span class="hljs-selector-class">.heimu</span><span class="hljs-selector-class">.off</span> <span class="hljs-selector-class">.new</span>,<span class="hljs-selector-tag">body</span><span class="hljs-selector-pseudo">:not(.heimu_toggle_on)</span> <span class="hljs-selector-class">.heimu</span><span class="hljs-selector-class">.off</span> <span class="hljs-selector-class">.new</span><span class="hljs-selector-pseudo">:hover</span>,<span class="hljs-selector-tag">body</span><span class="hljs-selector-pseudo">:not(.heimu_toggle_on)</span> <span class="hljs-selector-class">.new</span><span class="hljs-selector-pseudo">:hover</span> <span class="hljs-selector-class">.heimu</span><span class="hljs-selector-class">.off</span> &#123;    <span class="hljs-attribute">transition</span>: color .<span class="hljs-number">13s</span> linear;    <span class="hljs-attribute">color</span>: <span class="hljs-number">#ba0000</span>&#125;</code></pre></div><p>复制,粘贴,添加<code>&lt;style type=&quot;text/css&quot;&gt;</code>和<code>&lt;/style&gt;</code>,搞定！</p><p><span style="text-align: center;"><span class="heimu" title="当你成功看到这一行,说明我白嫖成功啦!">当你成功看到这一行,说明我白嫖成功啦!</span></span></p><h1 id="后记"><a href="#后记" class="headerlink" title="后记:"></a>后记:</h1><p>当然我没有忘记去协助我那个百度难兄一把.<br>这个功能真好用<span style="text-align: center;"><span class="heimu" title="你不应该知道">我一定会大大发扬的!</span></span>!<br>由于最近网课频繁,可能更新很慢了.那么,下次再会!</p>]]></content>
    
    
    <categories>
      
      <category>爱折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>白嫖</tag>
      
      <tag>css</tag>
      
      <tag>实践</tag>
      
      <tag>萌娘百科</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我们一起解题目吧！</title>
    <link href="/2020/01/24/%E6%88%91%E4%BB%AC%E4%B8%80%E8%B5%B7%E8%A7%A3%E9%A2%98%E7%9B%AE%E5%90%A7/"/>
    <url>/2020/01/24/%E6%88%91%E4%BB%AC%E4%B8%80%E8%B5%B7%E8%A7%A3%E9%A2%98%E7%9B%AE%E5%90%A7/</url>
    
    <content type="html"><![CDATA[<p>除夕快乐！<br>哎呀，作为一个贫困的<code>blogger</code>,我似乎没有什么礼物。<br>今天是己亥年的最后一日，快乐度过吧！</p><p>话题扯一下新型冠状病毒，大家一定要注意人身安全，假期家里蹲就好了！<br>中国加油！武汉加油！</p><p><img src="https://img.cyfan.top/pic/%E7%96%AB%E6%83%85.JPG" srcset="/img/loading.gif" alt="图片" title="一定要挺过去！"></p><p>话题扯回来…</p><h1 id="正文！"><a href="#正文！" class="headerlink" title="正文！"></a>正文！</h1><p>整理书的时候看到了一张纸，突然想起来这是当天偷偷在数学课上写的代码，结果被班主任发现骂了一顿。<br>题目非常有趣，是这样的：</p><blockquote><h2 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h2><p>在f（x）=ax^2+bx+c中，若有两个不等的实数根且在-0.25至0.25间，求a+b+c的最小值。</p></blockquote><p>思维导图：</p><p><img src="https://img.cyfan.top/pic/%E8%A7%A3%E9%A2%98.bmp" srcset="/img/loading.gif" alt="图片" title="思维导图↑自己做得有点丑(✿◡‿◡)"></p><p>当时写的代码：</p><div class="hljs"><pre><code class="hljs C++"><span class="hljs-meta"># <span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><span class="hljs-meta"># <span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;math.h&gt;</span></span><span class="hljs-meta"># <span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>; <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span> <span class="hljs-params">()</span></span>&#123;<span class="hljs-keyword">int</span> min=<span class="hljs-number">100</span>;<span class="hljs-keyword">int</span> i;<span class="hljs-keyword">double</span> mid,root,a,b,c,a1,b1,c1,delta;a=b=c=<span class="hljs-number">1</span>;<span class="hljs-keyword">for</span>(;a+b+c&lt;=min;i++)&#123;<span class="hljs-built_in">printf</span>(<span class="hljs-string">"在a=%lf ,b=%lf ,c=%lf 时"</span>,a,b,c);delta=b*b<span class="hljs-number">-4</span>*a*c;<span class="hljs-keyword">if</span>(delta&gt;<span class="hljs-number">0</span>)&#123;mid=(-b/<span class="hljs-number">2</span>)/a;root=((<span class="hljs-built_in">sqrt</span>(delta))/<span class="hljs-number">2</span>)/a;<span class="hljs-keyword">if</span>((mid+root)&gt;(<span class="hljs-number">-0.25</span>) <span class="hljs-keyword">and</span> (mid+root)&lt;<span class="hljs-number">0.25</span>)&#123;<span class="hljs-keyword">if</span>((mid-root)&gt;(<span class="hljs-number">-0.25</span>) <span class="hljs-keyword">and</span> (mid-root)&lt;<span class="hljs-number">0.25</span>)&#123;<span class="hljs-keyword">if</span>(a+b+c&lt;min)&#123;a1=a;b1=b;c1=c;min=a+b+c;<span class="hljs-built_in">printf</span>(<span class="hljs-string">"有min=%d ！\n"</span>,min); &#125;<span class="hljs-keyword">else</span> <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"a+b+c不是min值！"</span>&lt;&lt;<span class="hljs-built_in">endl</span>; &#125;<span class="hljs-keyword">else</span> <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"较小值超出范围！"</span>&lt;&lt;<span class="hljs-built_in">endl</span>; &#125;<span class="hljs-keyword">else</span> <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"较大值超出范围！"</span>&lt;&lt;<span class="hljs-built_in">endl</span>; &#125;<span class="hljs-keyword">else</span> <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"没有两不等实根！"</span>&lt;&lt;<span class="hljs-built_in">endl</span>; a++;<span class="hljs-keyword">if</span>(a+b+c&gt;min)&#123;a=<span class="hljs-number">1</span>;b++;<span class="hljs-keyword">if</span>(a+b+c&gt;min)&#123;b=<span class="hljs-number">1</span>;c++;&#125;&#125; &#125;<span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"共循环 "</span>&lt;&lt;i&lt;&lt;<span class="hljs-string">" 次,a+b+c的最小值是"</span>&lt;&lt;min&lt;&lt;<span class="hljs-string">",此时a="</span>&lt;&lt;a1&lt;&lt;<span class="hljs-string">",b="</span>&lt;&lt;b1&lt;&lt;<span class="hljs-string">",c="</span>&lt;&lt;c1&lt;&lt;<span class="hljs-built_in">endl</span>; <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>; &#125;</code></pre></div><p> 代码的核心是枚举，从a=b=c=1开算解，不符合就C自加一，c达到当时最小之后,c回到起点，从b开加，以此类推，如果a加到最后超范围，则说明解完了！</p><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-section">编译结果...--------</span><span class="hljs-bullet">- </span>错误: 0<span class="hljs-bullet">- </span>警告: 0<span class="hljs-bullet">- </span>输出文件名: C:\Users\CYF\Desktop\函数解题.exe<span class="hljs-bullet">- </span>输出大小: 1.83758735656738 MiB<span class="hljs-bullet">- </span>编译时间: 1.75s</code></pre></div><p>最后结果:</p><div class="hljs"><pre><code class="hljs undefined">在a=<span class="hljs-number">35.000000</span>,b=<span class="hljs-number">4.000000</span>,c=<span class="hljs-number">1.000000</span>时,有没有两不等实根！在a=<span class="hljs-number">35.000000</span>,b=<span class="hljs-number">4.000000</span>,c=<span class="hljs-number">2.000000</span>时,有没有两不等实根！在a=<span class="hljs-number">35.000000</span>,b=<span class="hljs-number">5.000000</span>,c=<span class="hljs-number">1.000000</span>时,有没有两不等实根！在a=<span class="hljs-number">36.000000</span>,b=<span class="hljs-number">1.000000</span>,c=<span class="hljs-number">1.000000</span>时,有没有两不等实根！在a=<span class="hljs-number">36.000000</span>,b=<span class="hljs-number">1.000000</span>,c=<span class="hljs-number">2.000000</span>时,有没有两不等实根！在a=<span class="hljs-number">36.000000</span>,b=<span class="hljs-number">1.000000</span>,c=<span class="hljs-number">3.000000</span>时,有没有两不等实根！在a=<span class="hljs-number">36.000000</span>,b=<span class="hljs-number">1.000000</span>,c=<span class="hljs-number">4.000000</span>时,有没有两不等实根！在a=<span class="hljs-number">36.000000</span>,b=<span class="hljs-number">2.000000</span>,c=<span class="hljs-number">1.000000</span>时,有没有两不等实根！在a=<span class="hljs-number">36.000000</span>,b=<span class="hljs-number">2.000000</span>,c=<span class="hljs-number">2.000000</span>时,有没有两不等实根！在a=<span class="hljs-number">36.000000</span>,b=<span class="hljs-number">2.000000</span>,c=<span class="hljs-number">3.000000</span>时,有没有两不等实根！在a=<span class="hljs-number">36.000000</span>,b=<span class="hljs-number">3.000000</span>,c=<span class="hljs-number">1.000000</span>时,有没有两不等实根！在a=<span class="hljs-number">36.000000</span>,b=<span class="hljs-number">3.000000</span>,c=<span class="hljs-number">2.000000</span>时,有没有两不等实根！在a=<span class="hljs-number">36.000000</span>,b=<span class="hljs-number">4.000000</span>,c=<span class="hljs-number">1.000000</span>时,有没有两不等实根！在a=<span class="hljs-number">37.000000</span>,b=<span class="hljs-number">1.000000</span>,c=<span class="hljs-number">1.000000</span>时,有没有两不等实根！在a=<span class="hljs-number">37.000000</span>,b=<span class="hljs-number">1.000000</span>,c=<span class="hljs-number">2.000000</span>时,有没有两不等实根！在a=<span class="hljs-number">37.000000</span>,b=<span class="hljs-number">1.000000</span>,c=<span class="hljs-number">3.000000</span>时,有没有两不等实根！在a=<span class="hljs-number">37.000000</span>,b=<span class="hljs-number">2.000000</span>,c=<span class="hljs-number">1.000000</span>时,有没有两不等实根！在a=<span class="hljs-number">37.000000</span>,b=<span class="hljs-number">2.000000</span>,c=<span class="hljs-number">2.000000</span>时,有没有两不等实根！在a=<span class="hljs-number">37.000000</span>,b=<span class="hljs-number">3.000000</span>,c=<span class="hljs-number">1.000000</span>时,有没有两不等实根！在a=<span class="hljs-number">38.000000</span>,b=<span class="hljs-number">1.000000</span>,c=<span class="hljs-number">1.000000</span>时,有没有两不等实根！在a=<span class="hljs-number">38.000000</span>,b=<span class="hljs-number">1.000000</span>,c=<span class="hljs-number">2.000000</span>时,有没有两不等实根！在a=<span class="hljs-number">38.000000</span>,b=<span class="hljs-number">2.000000</span>,c=<span class="hljs-number">1.000000</span>时,有没有两不等实根！在a=<span class="hljs-number">39.000000</span>,b=<span class="hljs-number">1.000000</span>,c=<span class="hljs-number">1.000000</span>时,有没有两不等实根！共循环 <span class="hljs-number">102937</span> 次,a+b+c的最小值是<span class="hljs-number">41</span>,此时a=<span class="hljs-number">29</span>,b=<span class="hljs-number">11</span>,c=<span class="hljs-number">1</span>--------------------------------Process exited after <span class="hljs-number">160.06</span> seconds with return value <span class="hljs-number">0</span></code></pre></div><p> 后来发现从c开始加有点费劲，而且一边有<code>cout</code>,另一边用<code>printf</code>,有点不爽(当时没反应过来).<br> 蛋疼的是输出结果还是双精度的…</p><p> 改了一下,顺便附上解释:</p><div class="hljs"><pre><code class="hljs C++"><span class="hljs-meta"># <span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><span class="hljs-meta"># <span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;math.h&gt;</span></span><span class="hljs-meta"># <span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>; <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span> <span class="hljs-params">()</span></span>&#123;<span class="hljs-keyword">int</span> min=<span class="hljs-number">100</span>;<span class="hljs-keyword">int</span> i;<span class="hljs-comment">//定义循环 </span><span class="hljs-keyword">double</span> mid,root,a,b,c,a1,b1,c1,delta;<span class="hljs-comment">//此处必须双精度，否则会算出3，5，2这一组 </span>a=b=c=<span class="hljs-number">1</span>;<span class="hljs-comment">//设定起点 </span><span class="hljs-keyword">for</span>(;a+b+c&lt;=min;i++)&#123;<span class="hljs-comment">//开始循环 </span><span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"在a="</span>&lt;&lt;a&lt;&lt;<span class="hljs-string">"，b="</span>&lt;&lt;b&lt;&lt;<span class="hljs-string">"c="</span>&lt;&lt;c&lt;&lt;<span class="hljs-string">"，的情况下："</span>;<span class="hljs-comment">//头输出 </span>delta=b*b<span class="hljs-number">-4</span>*a*c;<span class="hljs-comment">//定义delta </span><span class="hljs-keyword">if</span>(delta&gt;<span class="hljs-number">0</span>)&#123;<span class="hljs-comment">//有无双实根？ </span>mid=(-b/<span class="hljs-number">2</span>)/a;root=((<span class="hljs-built_in">sqrt</span>(delta))/<span class="hljs-number">2</span>)/a;<span class="hljs-comment">//这两步就是算解 </span><span class="hljs-keyword">if</span>((mid+root)&gt;(<span class="hljs-number">-0.25</span>) <span class="hljs-keyword">and</span> (mid+root)&lt;<span class="hljs-number">0.25</span>)&#123;<span class="hljs-comment">//x1范围？ </span><span class="hljs-keyword">if</span>((mid-root)&gt;(<span class="hljs-number">-0.25</span>) <span class="hljs-keyword">and</span> (mid-root)&lt;<span class="hljs-number">0.25</span>)&#123;<span class="hljs-comment">//x2范围？ </span><span class="hljs-keyword">if</span>(a+b+c&lt;min)&#123;a1=a;b1=b;c1=c;min=a+b+c;<span class="hljs-comment">//重新设定阈值 </span><span class="hljs-built_in">printf</span>(<span class="hljs-string">"有min=%d ！\n"</span>,min); &#125;<span class="hljs-keyword">else</span> <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"a+b+c不是min值！"</span>&lt;&lt;<span class="hljs-built_in">endl</span>;<span class="hljs-comment">//不解释 </span>&#125;<span class="hljs-keyword">else</span> <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"较小值超出范围！"</span>&lt;&lt;<span class="hljs-built_in">endl</span>; <span class="hljs-comment">//同上 </span>&#125;<span class="hljs-keyword">else</span> <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"较大值超出范围！"</span>&lt;&lt;<span class="hljs-built_in">endl</span>; <span class="hljs-comment">//同上 </span>&#125;<span class="hljs-keyword">else</span> <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"没有两不等实根！"</span>&lt;&lt;<span class="hljs-built_in">endl</span>; <span class="hljs-comment">//同上 </span>b++;<span class="hljs-comment">//还是b开加快一点 </span><span class="hljs-keyword">if</span>(a+b+c&gt;min)&#123;b=<span class="hljs-number">1</span>;c++;<span class="hljs-keyword">if</span>(a+b+c&gt;min)&#123;c=<span class="hljs-number">1</span>;a++;&#125;&#125; &#125;<span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"共循环 "</span>&lt;&lt;i&lt;&lt;<span class="hljs-string">" 次,a+b+c的最小值是"</span>&lt;&lt;min&lt;&lt;<span class="hljs-string">",此时a="</span>&lt;&lt;a1&lt;&lt;<span class="hljs-string">",b="</span>&lt;&lt;b1&lt;&lt;<span class="hljs-string">",c="</span>&lt;&lt;c1&lt;&lt;<span class="hljs-built_in">endl</span>; <span class="hljs-comment">//最后输出 </span><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>; &#125;</code></pre></div><div class="hljs"><pre><code class="hljs undefined">......在a=<span class="hljs-number">35</span>，b=<span class="hljs-number">1</span>c=<span class="hljs-number">5</span>，的情况下：没有两不等实根！在a=<span class="hljs-number">36</span>，b=<span class="hljs-number">1</span>c=<span class="hljs-number">1</span>，的情况下：没有两不等实根！在a=<span class="hljs-number">36</span>，b=<span class="hljs-number">2</span>c=<span class="hljs-number">1</span>，的情况下：没有两不等实根！在a=<span class="hljs-number">36</span>，b=<span class="hljs-number">3</span>c=<span class="hljs-number">1</span>，的情况下：没有两不等实根！在a=<span class="hljs-number">36</span>，b=<span class="hljs-number">4</span>c=<span class="hljs-number">1</span>，的情况下：没有两不等实根！在a=<span class="hljs-number">36</span>，b=<span class="hljs-number">1</span>c=<span class="hljs-number">2</span>，的情况下：没有两不等实根！在a=<span class="hljs-number">36</span>，b=<span class="hljs-number">2</span>c=<span class="hljs-number">2</span>，的情况下：没有两不等实根！在a=<span class="hljs-number">36</span>，b=<span class="hljs-number">3</span>c=<span class="hljs-number">2</span>，的情况下：没有两不等实根！在a=<span class="hljs-number">36</span>，b=<span class="hljs-number">1</span>c=<span class="hljs-number">3</span>，的情况下：没有两不等实根！在a=<span class="hljs-number">36</span>，b=<span class="hljs-number">2</span>c=<span class="hljs-number">3</span>，的情况下：没有两不等实根！在a=<span class="hljs-number">36</span>，b=<span class="hljs-number">1</span>c=<span class="hljs-number">4</span>，的情况下：没有两不等实根！在a=<span class="hljs-number">37</span>，b=<span class="hljs-number">1</span>c=<span class="hljs-number">1</span>，的情况下：没有两不等实根！在a=<span class="hljs-number">37</span>，b=<span class="hljs-number">2</span>c=<span class="hljs-number">1</span>，的情况下：没有两不等实根！在a=<span class="hljs-number">37</span>，b=<span class="hljs-number">3</span>c=<span class="hljs-number">1</span>，的情况下：没有两不等实根！在a=<span class="hljs-number">37</span>，b=<span class="hljs-number">1</span>c=<span class="hljs-number">2</span>，的情况下：没有两不等实根！在a=<span class="hljs-number">37</span>，b=<span class="hljs-number">2</span>c=<span class="hljs-number">2</span>，的情况下：没有两不等实根！在a=<span class="hljs-number">37</span>，b=<span class="hljs-number">1</span>c=<span class="hljs-number">3</span>，的情况下：没有两不等实根！在a=<span class="hljs-number">38</span>，b=<span class="hljs-number">1</span>c=<span class="hljs-number">1</span>，的情况下：没有两不等实根！在a=<span class="hljs-number">38</span>，b=<span class="hljs-number">2</span>c=<span class="hljs-number">1</span>，的情况下：没有两不等实根！在a=<span class="hljs-number">38</span>，b=<span class="hljs-number">1</span>c=<span class="hljs-number">2</span>，的情况下：没有两不等实根！在a=<span class="hljs-number">39</span>，b=<span class="hljs-number">1</span>c=<span class="hljs-number">1</span>，的情况下：没有两不等实根！共循环 <span class="hljs-number">102347</span> 次,a+b+c的最小值是<span class="hljs-number">41</span>,此时a=<span class="hljs-number">29</span>,b=<span class="hljs-number">11</span>,c=<span class="hljs-number">1</span>--------------------------------Process exited after <span class="hljs-number">142.5</span> seconds with return value <span class="hljs-number">0</span></code></pre></div><p>果然快了不少！也少循环一段时间！</p><p><em>★,°</em>:.☆(￣▽￣)/$:<em>.°★</em> 。撒花！落幕！！ </p>]]></content>
    
    
    <categories>
      
      <category>爱折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C++</tag>
      
      <tag>题目</tag>
      
      <tag>编程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>回归啦！这是见面礼：寒蝉！</title>
    <link href="/2020/01/20/%E5%9B%9E%E5%BD%92%E5%95%A6%EF%BC%81%E8%BF%99%E6%98%AF%E8%A7%81%E9%9D%A2%E7%A4%BC/"/>
    <url>/2020/01/20/%E5%9B%9E%E5%BD%92%E5%95%A6%EF%BC%81%E8%BF%99%E6%98%AF%E8%A7%81%E9%9D%A2%E7%A4%BC/</url>
    
    <content type="html"><![CDATA[<p>呜呜呜，经历了千万作业的压迫，一个学生终于摸到了久别的电脑。<br>转眼间就到2020了，我连个新年快乐都没说，差点都忘了自己还有博客。<br>细数一下这5个月发生的事：</p><ul><li>php供应商不给我薅羊毛了，000webhost连续给我断掉了好几条。(￢︿̫̿￢☆)，我再也不用你的服务了。后来断线1个月后转到了heroku，虽然有很多问题，勉强能用嘛。</li><li>成绩不滑反而上涨了。（意料之外）</li><li>5个月闲着没事用用Tor和I2P，顺便研究了一下DHT，倒有不少收获。新年将近，我会好好谈谈的。</li><li>将博客上传方式由https转到了SSH，上传更快乐！</li></ul><p>呜呜呜，抱着自己的电脑就是好啊……博客都不仅长草了，还长霉菌了 …</p><p>好了，进入正题吧。</p><h1 id="寒蝉：用科学字体渲染科学文字"><a href="#寒蝉：用科学字体渲染科学文字" class="headerlink" title="寒蝉：用科学字体渲染科学文字"></a>寒蝉：用科学字体渲染科学文字</h1><blockquote><h2 id="政治观念警告！"><a href="#政治观念警告！" class="headerlink" title="政治观念警告！"></a>政治观念警告！</h2><p>在博客简介里写的很清楚，在本站中没有任何政治倾向。如有，则本人是中华人民共和国 <del>公民</del> 人民，会坚定不移坚持党和国家的领导！<br>本人「东城渐觉风光好」2INdCH/IXVs2。 ，仅是为了学习用途！<br>请有心人注意你的言行！</p></blockquote><p>「寒蝉」是一款Chrome浏览器扩展程序。安装该浏览器插件后，可以将网页中的特殊文本用科学字体来渲染。</p><p>这款插件…真的是…很适合我们这种<code>「晴雪小园春未到」682Gc/27p5rz。</code>使用啊!!!!</p><p>它,可以把一些关键词伪装成一些很正常的词语.</p><p>比如,我打入<code>我爱跑路</code>,经过寒蝉伪装,成<code>「娇鬟堆枕钗横凤」Tdm31/2ceTfz。</code>.</p><p>前面一句文言文,后面一堆软七八糟的东西,关键词过滤能过滤出来真的是才怪呢.</p><h2 id="安装："><a href="#安装：" class="headerlink" title="安装："></a>安装：</h2><p>(官方文档)[<a href="https://github.com/guyujiezi/cicada/blob/master/README.md]" target="_blank" rel="noopener">https://github.com/guyujiezi/cicada/blob/master/README.md]</a> 里写的很清楚了，自己去看吧。</p><p>底下是抄官方的：</p><ol><li>前往 <a href="https://github.com/guyujiezi/cicada/releases" target="_blank" rel="noopener">https://github.com/guyujiezi/cicada/releases</a> 下载「寒蝉」最新版的压缩包；<br><br><img src="https://img.cyfan.top/pic/%E5%AF%92%E8%9D%89/cicada-install-step-1.png" srcset="/img/loading.gif" alt="步骤1"></li><li>找一个文件目录，将刚才下载的压缩包在此解压；</li><li>打开 Chrome 浏览器主菜单 &gt; 更多工具 &gt; 扩展程序，或直接在 Chrome 浏览器地址栏中访问 chrome://extensions/；<br><br><img src="https://img.cyfan.top/pic/%E5%AF%92%E8%9D%89/cicada-install-step-2.png" srcset="/img/loading.gif" alt="步骤2"></li><li>开启「开发者模式」；</li><li>点击「加载已解压的扩展程序」按钮，定位第2步解压的目录，点击「确定」。</li></ol><p>由于Chrome 网上应用商店发布需要等待漫长的待审核状态，所以最新版会直接发布在 github 上，而Chrome 网上应用商店只会发布大版本更新。</p><h2 id="如何使用？"><a href="#如何使用？" class="headerlink" title="如何使用？"></a>如何使用？</h2><p>扩展程序成功安装后，浏览器地址栏右侧会出现「寒蝉」的按钮。点击该按钮打开弹出窗口，输入你想加密的文本内容并提交：</p><p><img src="https://img.cyfan.top/pic/%E5%AF%92%E8%9D%89/cicada-usage-step-1.png" srcset="/img/loading.gif" alt="用法1"><br><img src="https://img.cyfan.top/pic/%E5%AF%92%E8%9D%89/cicada-usage-step-2.png" srcset="/img/loading.gif" alt="用法2"></p><p>「寒蝉」会随机生成一段诗词作为阴书内容。复制完整的内容，发布到论坛或其他地方，同样安装了「寒蝉」的用户将会看到你发布的真实内容。</p><h2 id="那么-它是如何做到的"><a href="#那么-它是如何做到的" class="headerlink" title="那么,它是如何做到的??"></a>那么,它是如何做到的??</h2><p>官方文档中有说明其基于谷雨解字。官方文档显然讲的太繁琐了，以下是我略略简介：</p><p>问题：</p><h3 id="我们浏览器中的字都是怎么出来的？"><a href="#我们浏览器中的字都是怎么出来的？" class="headerlink" title="我们浏览器中的字都是怎么出来的？"></a>我们浏览器中的字都是怎么出来的？</h3><p>无论如何，你不可能直接在浏览器中显示字，除非是图片。</p><p>事实上，浏览器的字是这样显示的：；</p><ol><li>我在这里写了个A。</li><li>实际上文档先会把它转成ASCII码<code>65</code>，然后询问我用的是什么字体，如果制定了，如微软雅黑;如果没指定，则默认用宋体。</li><li>接着，你看到了我的A，浏览器发现我用的是微软雅黑，就用微软雅黑的ttf 65号字，大概长这样：<style type="text/css">.yahei { font-family: "微软雅黑 Light"; font-size: 72pt;}.fouze { font-size: 72pt;}</style></li></ol><p class="yahei">A</p><p>否则大概是：</p><p class="fouze">A</p><p>看懂了吗？</p><p>实际上，是字体改变了字的外观，对吧？</p><p>所以说，在字体上动点手脚，就可以让显示的字完全不一样呢！</p><p><img src="https://img.cyfan.top/pic/%E5%AF%92%E8%9D%89/flow.png" srcset="/img/loading.gif" alt="https://img.cyfan.top/pic/寒蝉/flow.png"></p><p>而寒蝉，只不过是把最后一步作为插件，再把最后的密文发给服务器交其解密，最后回来阴文。</p><p>就这么简单。</p><h2 id="官方文档："><a href="#官方文档：" class="headerlink" title="官方文档："></a>官方文档：</h2><p>网页字体格式<br>目前网络上使用的字体容器格式有四种： EOT、 TTF、 WOFF 和 WOFF2。 遗憾的是，尽管选择范围很广，但仍然缺少在所有新旧浏览器上都能使用的单一通用格式： EOT 只有 IE 支持，TTF 获得了部分 IE 支持，WOFF 获得了最广泛的支持，但在某些较旧的浏览器上不受支持，而 WOFF 2.0 支持对许多浏览器来说尚未实现。</p><p>那我们该怎么办？不存在在所有浏览器上都能使用的单一格式，这意味着我们需要提供多种格式才能实现一致的体验：</p><ul><li>将 WOFF 2.0 变体提供给支持的浏览器。</li><li>将 WOFF 变体提供给大多数浏览器。</li><li>将 TTF 变体提供给旧版 Android（4.4 版以下）浏览器。</li><li>将 EOT 变体提供给旧版 IE（IE9 版以下）浏览器。</li><li>注：从技术上讲，还有另一种容器格式，即 SVG 字体容器，但 IE 或 Firefox 从未为其提供支持，并且现在 Chrome 也放弃了对它的支持。 因此，它的用途很有限，本指南中有意将其忽略。</li></ul><p>通过压缩减小字体大小<br>字体是字形的集合，其中的每个字形都是一组描述字母形状的路径。 各个字形不同，但它们仍然包含大量相似信息，这些信息可通过 GZIP 或兼容的压缩工具进行压缩：</p><p>EOT 和 TTF 格式默认情况下不进行压缩。 提供这些格式时，确保您的服务器配置为应用 GZIP 压缩。<br>WOFF 具有内建压缩。 确保您的 WOFF 压缩工具使用了最佳压缩设置。<br>WOFF2 采用自定义预处理和压缩算法，提供的文件大小压缩率比其他格式高大约 30%。 如需了解详细信息，请参阅 WOFF 2.0 评估报告。<br>最后，值得注意的是，某些字体格式包含附加的元数据，如字体提示和字距调整信息，这些信息在某些平台上可能并非必要信息，这样便可进一步优化文件大小。 查询您的字体压缩工具是否提供了优化选项，如果您这样做，请确保您有适合的基础架构来测试这些优化过的字体并将它们提供给每个特定浏览器。 例如，Google Fonts 为每一种字体维护有 30 多种优化过的变体，并自动检测和提供适合每一个平台和浏览器的最佳变体。<br>注：考虑使用 Zopfli 压缩处理 EOT、TTF 和 WOFF 格式。 Zopfli 是一种兼容 zlib 的压缩工具，提供的文件大小压缩率比 gzip 高大约 5%。</p><p>您可以通过<code>@font-face CSS at-rule</code>定义特定字体资源的位置、其样式特性及其应该用于的 Unicode 代码点。 可组合使用上述 <code>@font-face</code>声明来构建“字体系列”，浏览器将使用该系列来评估哪些字体资源需要下载并应用到当前网页。</p><p>格式选择<br>每个 <code>@font-face</code>声明都提供字体系列的名称，它充当多个声明的逻辑组、字体属性（如样式、粗细和拉伸）以及为字体资源指定位置优先级列表的 src 描述符。</p><div class="hljs"><pre><code class="hljs undefined">@<span class="hljs-keyword">font-face</span> &#123;    <span class="hljs-attribute">font-family</span>:<span class="hljs-string">'Awesome Font'</span>;    <span class="hljs-attribute">font-style</span>: normal;    <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">400</span>;    <span class="hljs-attribute">src</span>: <span class="hljs-built_in">local</span>(<span class="hljs-string">'Awesome Font'</span>),         <span class="hljs-built_in">url</span>(<span class="hljs-string">'/fonts/awesome.woff2'</span>) <span class="hljs-built_in">format</span>(<span class="hljs-string">'woff2'</span>),         <span class="hljs-built_in">url</span>(<span class="hljs-string">'/fonts/awesome.woff'</span>) <span class="hljs-built_in">format</span>(<span class="hljs-string">'woff'</span>),         <span class="hljs-built_in">url</span>(<span class="hljs-string">'/fonts/awesome.ttf'</span>) <span class="hljs-built_in">format</span>(<span class="hljs-string">'truetype'</span>),         <span class="hljs-built_in">url</span>(<span class="hljs-string">'/fonts/awesome.eot'</span>) <span class="hljs-built_in">format</span>(<span class="hljs-string">'embedded-opentype'</span>);  &#125;    @<span class="hljs-keyword">font-face</span> &#123;    <span class="hljs-attribute">font-family</span>:<span class="hljs-string">'Awesome Font'</span>;    <span class="hljs-attribute">font-style</span>: italic;    <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">400</span>;    <span class="hljs-attribute">src</span>: <span class="hljs-built_in">local</span>(<span class="hljs-string">'Awesome Font Italic'</span>),         <span class="hljs-built_in">url</span>(<span class="hljs-string">'/fonts/awesome-i.woff2'</span>) <span class="hljs-built_in">format</span>(<span class="hljs-string">'woff2'</span>),         <span class="hljs-built_in">url</span>(<span class="hljs-string">'/fonts/awesome-i.woff'</span>) <span class="hljs-built_in">format</span>(<span class="hljs-string">'woff'</span>),         <span class="hljs-built_in">url</span>(<span class="hljs-string">'/fonts/awesome-i.ttf'</span>) <span class="hljs-built_in">format</span>(<span class="hljs-string">'truetype'</span>),         <span class="hljs-built_in">url</span>(<span class="hljs-string">'/fonts/awesome-i.eot'</span>) <span class="hljs-built_in">format</span>(<span class="hljs-string">'embedded-opentype'</span>);  &#125;</code></pre></div><p>首先，请注意以上示例使用两种样式（normal 和_italic_）来定义单个 Awesome Font 系列，其中的每个样式均指向一个不同的字体资源集。 每个 src 描述符则又包含一个用逗号分隔的资源变体优先级列表：</p><p>local() 指令用于引用、加载和使用安装在本地的字体。<br>url() 指令用于加载外部字体，它可以包含可选的 format() 提示，指示由提供的网址引用的字体格式。<br>注：除非您引用的是其中一种默认系统字体，用户很少将其安装在本地，特别是在移动设备上，在移动设备上“安装” 附加字体实际上根本无法实现。 您始终应该从“以防万一”的 local() 条目入手，然后提供一个 url() 条目列表。</p><p>当浏览器确定需要字体时，它会按指定顺序循环访问提供的资源列表，并尝试加载相应的资源。 例如，接着上面的示例：</p><p>浏览器执行页面布局并确定需要使用哪些字体变体来渲染网页上的指定文本。<br>对于每一种必需字体，浏览器会检查字体文件是否位于本地。<br>如果字体文件不在本地，则浏览器会遍历外部定义：<br>如果存在格式提示，则浏览器会在启动下载之前检查其是否支持提示。 如果浏览器不支持此提示，则会前进到下一格式提示。<br>如果不存在格式提示，则浏览器会下载资源。<br>您可以将本地和外部指令与相应的格式提示相结合来指定所有可用字体格式，其余工作交由浏览器进行处理。 浏览器确定需要哪些资源，并选择最佳格式。</p><ul><li>注：字体变体的指定顺序很重要。 浏览器将选取其支持的第一种格式。 因此，如果您希望较新的浏览器使用 WOFF2，则应将 WOFF2 声明置于 WOFF 之上，依此类推。</li></ul><p>优化加载和渲染<br>与普遍的观点相反，使用网页字体不需要延迟网页渲染，也不会对其他性能指标产生不良影响。 在充分优化的情况下使用字体可大幅提升总体用户体验：出色的品牌推广，改进的可读性、易用性和可搜索性，并一直提供可扩展的多分辨率解决方案，能够出色地适应各种屏幕格式和分辨率。 不要害怕使用网页字体！</p><p>不过，直接实现可能招致下载内容庞大和不必要的延迟。 您需要通过对字体资产本身及其在网页上的提取和使用方式进行优化来为浏览器提供协助的环节。</p><p>审核并监控您的字体使用情况：不要在网页上使用过多字体，并且对于每一种字体，最大限度减少使用的变体数量。 这将有助于为您的用户带来更加一致且更加快速的体验。<br>对您的字体资源进行子集内嵌：许多字体都可进行子集内嵌，或者拆分成多个 unicode-range 以仅提供特定网页需要的字形。 这样即可减小文件大小，并提高资源的下载速度。 不过，在定义子集时要注意针对字体重复使用的情况进行优化。 例如，您一定不希望在每个网页上都下载不同但重叠的字符集。 最好根据文字系统（例如拉丁文、西里尔文等）进行子集内嵌。<br>向每个浏览器提供优化过的字体格式：每一种字体都应以 WOFF2、WOFF、EOT 和 TTF 格式提供。 务必对 EOT 和 TTF 格式应用 GZIP 压缩，因为默认情况下不会对其进行压缩。<br>在 src 列表中优先列出 local()：在 src 列表中首先列出 local(‘Font Name’) 可确保不会针对已安装的字体发出 HTTP 请求。<br>使用 <link rel="preload">、font-display 或 Font Loading API 来自定义字体加载和渲染：默认的延迟加载行为可能会导致延迟渲染文本。 您可以通过这些网络平台功能为特定字体替换这一行为，以及为网页上的不同内容指定自定义渲染和超时策略。<br>指定重新验证和最佳缓存策略：字体是不经常更新的静态资源。 确保您的服务器提供长期的 max-age 时间戳和重新验证令牌，以实现不同网页之间高效的字体重复使用。 如果使用 Service Worker，则适合采用缓存优先策略。</p><h2 id="结尾："><a href="#结尾：" class="headerlink" title="结尾："></a>结尾：</h2><p>那么，他有什么用呢？</p><p>很简单，为了防止关键字过滤，本博客简单采用这种方法减少被封的概率。</p><p>不过为了防止对手机用户的干扰，我只对关键词语掩护。</p><ul><li>完 -</li></ul>]]></content>
    
    
    <categories>
      
      <category>丆插件</category>
      
    </categories>
    
    
    <tags>
      
      <tag>阴文</tag>
      
      <tag>谷雨解字</tag>
      
      <tag>字体</tag>
      
      <tag>关键字</tag>
      
      <tag>寒蝉</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>来，破解版的Google访问助手</title>
    <link href="/2019/09/14/%E6%9D%A5%EF%BC%8C%E7%A0%B4%E8%A7%A3%E7%89%88%E7%9A%84Google%E8%AE%BF%E9%97%AE%E5%8A%A9%E6%89%8B/"/>
    <url>/2019/09/14/%E6%9D%A5%EF%BC%8C%E7%A0%B4%E8%A7%A3%E7%89%88%E7%9A%84Google%E8%AE%BF%E9%97%AE%E5%8A%A9%E6%89%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><p>中秋快乐！</p><p>（迟到的祝福）o(￣┰￣*)ゞ</p><p>好吧好吧，那就给份中秋礼物吧！</p><p>在中国，访问Google是最蛋疼的事了，原因是显然易见的。</p><p>可是作为一个雪深+三流程序猿，上Google是相当重要的。</p><p>基本上自己都是白嫖我同学康哥的ss，白嫖总是麻烦，还要用ss客户端。</p><p>网上的谷歌访问助手，现在官网都挂了，虽然能用，但是让我强制改主页确实不爽，而且图标也死丑，看着恶心。</p><p>于是看看如何破解。</p><h1 id="Going："><a href="#Going：" class="headerlink" title="Going："></a>Going：</h1><p>既然它会检测有没有广告，那我干脆直接在所有页面上都加上被隐藏的广告链接，这样既不会视觉干扰，又可以破解。</p><p>然后我高高兴兴的在Github上搜索原版源代码，结果发现…好像…有人已经破解了</p><p><img src="https://img.cyfan.top/pic/GOG.png" srcset="/img/loading.gif" alt="图片" title="好尴尬啊"></p><p>那我一不做，二不休，直接就用这个吧！</p><p>不过这位老兄的图标似乎没改，那我就改了一下，以下是我改动的：</p><ul><li><input checked disabled type="checkbox"> 去除Google+(今年四月Google把它关了)</li><li><input checked disabled type="checkbox"> 添加Google Earth(亲测速度爆表,酸爽!)</li><li><input checked disabled type="checkbox"> 更换Google全家古老的图标，换成新的。</li><li><input checked disabled type="checkbox"> 更换插件图标,换了个Google Studio的(加了个小星星和滤镜)</li><li><input checked disabled type="checkbox"> 厚颜无耻的加上了自己的名字.</li></ul><p><img src="https://img.cyfan.top/pic/GGFWZS.png" srcset="/img/loading.gif" alt="图片" title="一阵酸爽"></p><p>然而上Google是爽,加载速度极快:</p><p><img src="https://img.cyfan.top/pic/GHS.bmp" srcset="/img/loading.gif" alt="图片" title="速度不错"></p><p>1.1MB的网页在2.1秒内打开,和百度打开速度相比:</p><p><img src="https://img.cyfan.top/pic/BHS.bmp" srcset="/img/loading.gif" alt="图片" title="相差不多"></p><p>1.4秒内打开也挺小,只有0.7s的相差,也是不多,完全可以用Google当引擎啦!</p><p>然而缺点也很多,学术研究完全不能上,Youtube不支持,wikipedia也不行.</p><p>对于维基百科,完全可以用Google翻译当跳板曲线救国.</p><p>总之,能乐和几天十几天!(≧∀≦)ゞ</p><a class="btn" href="https://pan.cyfan.top/插件/crx/Google访问助手破解版.7z" target="_blank" rel="noopener">              >>CYF的私有云             </a><p>特征码：<code>glabchgbmippkhlcjkcmdmclmapehoha</code></p>]]></content>
    
    
    <categories>
      
      <category>丆插件</category>
      
    </categories>
    
    
    <tags>
      
      <tag>插件</tag>
      
      <tag>Chrome</tag>
      
      <tag>Google</tag>
      
      <tag>破解</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CloudFlare：叮咚！您的15年免费泛域名SSL证书到了！</title>
    <link href="/2019/09/01/CloudFlare%EF%BC%9A%E5%8F%AE%E5%92%9A%EF%BC%81%E6%82%A8%E7%9A%8415%E5%B9%B4%E5%85%8D%E8%B4%B9%E6%B3%9B%E5%9F%9F%E5%90%8DSSL%E8%AF%81%E4%B9%A6%E5%88%B0%E4%BA%86%EF%BC%81/"/>
    <url>/2019/09/01/CloudFlare%EF%BC%9A%E5%8F%AE%E5%92%9A%EF%BC%81%E6%82%A8%E7%9A%8415%E5%B9%B4%E5%85%8D%E8%B4%B9%E6%B3%9B%E5%9F%9F%E5%90%8DSSL%E8%AF%81%E4%B9%A6%E5%88%B0%E4%BA%86%EF%BC%81/</url>
    
    <content type="html"><![CDATA[<h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><p>大半月没更新了，博客长草了，今天过来除一除。</p><p>LeanCould是支持CNAME别名解析滴，这也是个不错的建站选择。</p><p>然而比较蛋疼的是，LeanCloud国际版虽然可以CNAME，可是SSL证书要自己配啊。（不知道国内会不会送一个(lll￢ω￢)）<br><img src="https://img.cyfan.top/pic/LCSSL.png" srcset="/img/loading.gif" alt="蛋蛋的忧伤" title="蛋蛋的忧伤"><br>于是我就开始了漫漫SSL证书寻找之旅。</p><h1 id="蠢方法："><a href="#蠢方法：" class="headerlink" title="蠢方法："></a>蠢方法：</h1><p>我直接在百度上搜索<code>免费SSL证书</code>，当我按下搜索键时，心里咯噔一下，完了，待会儿出来一堆广告。<br><img src="https://img.cyfan.top/pic/BAIDUSSL.png" srcset="/img/loading.gif" alt="果不其然" title="果不其然"></p><p>默默按下了关闭按钮….</p><h2 id="试试腾讯SSL："><a href="#试试腾讯SSL：" class="headerlink" title="试试腾讯SSL："></a>试试腾讯SSL：</h2><p>腾讯的SSL似乎是有赛门铁克的免费的SSL，况且也有一年的有效期。</p><p><img src="https://img.cyfan.top/pic/TSSL.png" srcset="/img/loading.gif" alt="勉强选购" title="勉强选购"></p><p><code>实名认证</code>…我不喜欢的又来了.</p><p>然而注意到了吗：<em>仅支持绑定一个一级域名或者子域名，例如 domain.com、ssl.domain.com、ssl.ssl.domain.com 分别为一个域名,注意 domain.com 不包含 ssl.domain.com 等子域名，如果需要支持所有二级或三级域名，请购买通配符证书。</em></p><p>也就是不支持<em>泛域名</em>！</p><p>那么问题来了，泛域名又是多少呢？</p><p><img src="https://img.cyfan.top/pic/PSSL.png" srcset="/img/loading.gif" alt="Oh！SHIT！" title="Oh！SHIT！"></p><p>1699.15元/年！个人需求也要那么多？腾讯想钱想疯了吧？？？</p><h1 id="比较聪明的方法："><a href="#比较聪明的方法：" class="headerlink" title="比较聪明的方法："></a>比较聪明的方法：</h1><h2 id="http-freessl-cn"><a href="#http-freessl-cn" class="headerlink" title="http://freessl.cn"></a><a href="http://freessl.cn" target="_blank" rel="noopener">http://freessl.cn</a></h2><p>国内一家不错的SSL颁发，支持单/泛域名！有效期分别为12个月和3个月！</p><p><em>而且不用实名！只用邮箱！</em></p><p>可惜泛域名时间短了些，看看别的吧。</p><h2 id="https-www-sslforfree-com"><a href="#https-www-sslforfree-com" class="headerlink" title="https://www.sslforfree.com"></a><a href="https://www.sslforfree.com" target="_blank" rel="noopener">https://www.sslforfree.com</a></h2><p>这一家也是相当不错,和腾讯相似,单域名一年,而且不用实名！不过年限还是有点小.</p><h1 id="重磅来袭"><a href="#重磅来袭" class="headerlink" title="重磅来袭:"></a>重磅来袭:</h1><p>我后来想起来CloudFlare似乎有送SSL的,幸好本生就DNS放在CloudFlare上托管，已经有了账号。点击网址,选择<code>SSL/TLS</code>,翻到了<code>Origin Certificates</code></p><p><img src="https://img.cyfan.top/pic/CFSSL.jpg" srcset="/img/loading.gif" alt="eem"></p><p>点击<code>Creat Certificate</code>,弹出提示框</p><p><img src="https://img.cyfan.top/pic/CFCSSL.png" srcset="/img/loading.gif" alt="eem"></p><p>第一行默认<code>RSA</code>就这个吧(我也不知道这是什么(￣▽￣)”)<br>第二行支持泛域名,也不错.<br>第三行年限…..15年???????????????<br>这个年限有点超乎我的期望。<br><img src="https://img.cyfan.top/pic/WHAT.jpg" srcset="/img/loading.gif" alt="What?" title="什么鬼"></p><p>点击创建,证书就出来了.</p><p>这简单的感觉我都撞到了鬼.</p><p>登记，输入，查看证书：有效期高达2034年。</p><p>而且可以强制过期和重新注册。<br>天呐，这也太强大了吧。</p><h1 id="那么问题来了，为什么要注册呢？"><a href="#那么问题来了，为什么要注册呢？" class="headerlink" title="那么问题来了，为什么要注册呢？"></a>那么问题来了，为什么要注册呢？</h1><p>很简单，我新建的是valine评论管理，有邮箱密码，以http发送很容易被截获。但是https不会被截获（被加密了）。</p><p>虽然CloudFlare自签名会出现种种浏览器不信任的问题，但是自己用是足够了的。</p>]]></content>
    
    
    <categories>
      
      <category>好方法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CloudFlare</tag>
      
      <tag>SSL</tag>
      
      <tag>TLS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Valine：一款极简评论系统的安装到升级</title>
    <link href="/2019/08/17/Valine%EF%BC%9A%E4%B8%80%E6%AC%BE%E6%9E%81%E7%AE%80%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AE%89%E8%A3%85%E5%88%B0%E5%8D%87%E7%BA%A7/"/>
    <url>/2019/08/17/Valine%EF%BC%9A%E4%B8%80%E6%AC%BE%E6%9E%81%E7%AE%80%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AE%89%E8%A3%85%E5%88%B0%E5%8D%87%E7%BA%A7/</url>
    
    <content type="html"><![CDATA[<h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><blockquote><p>这可能就是这个暑假最后一篇了，好怀念啊(ノへ￣、)</p></blockquote><p>几天前我的博客评论系统还是来比力的，这几天我把它换成了Valine，为什么呢？我列了一张表，你可以参考一下：</p><p>（这些都是还活着、中国能访问的评论系统）</p><table><thead><tr><th>项目&amp;评论系统：</th><th>Gitalk</th><th>Gitment</th><th>Livere</th><th>Valine</th><th>畅言</th></tr></thead><tbody><tr><td>需要备案？</td><td>❌</td><td>❌</td><td>❌</td><td>外国版❌，国内版未来✔</td><td>✔</td></tr><tr><td>评论系统存储服务器地址？</td><td>Github issues</td><td>Github issues</td><td>Livere服务器</td><td>Leancloud</td><td>畅言服务器</td></tr><tr><td>速度？</td><td>较快</td><td>快</td><td>很慢</td><td>快</td><td>较快</td></tr><tr><td>延迟？</td><td>&lt;6s</td><td>&lt;6s</td><td>&gt;10s</td><td>&lt;3s</td><td>&lt;3s</td></tr><tr><td>支持匿名？</td><td>❌</td><td>❌</td><td>✔</td><td>✔</td><td>未知</td></tr><tr><td>登陆方式？</td><td>Github账号</td><td>Github账号</td><td>多种SNS账号</td><td>邮箱</td><td>多种SNS账号</td></tr><tr><td>UI风格？</td><td>极简</td><td>一般</td><td>一般</td><td>极简</td><td>一般</td></tr><tr><td>缺陷</td><td>只支持Github账号</td><td>只支持Github账号</td><td>加载极慢</td><td>免费版每天强制休眠6小时</td><td>要备案</td></tr></tbody></table><p>这么看来，还Valine最优秀。</p><h1 id="What’s-Valine"><a href="#What’s-Valine" class="headerlink" title="What’s Valine?"></a>What’s Valine?</h1><p>Valine 诞生于2017年8月7日，是一款基于LeanCloud的快速、简洁且高效的无后端评论系统。</p><p>理论上支持但不限于静态博客，目前已有Hexo、Jekyll、Typecho、Hugo、Ghost 等博客程序在使用Valine。</p><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul><li>快速</li><li>安全</li><li>Emoji 😉</li><li>无后端实现</li><li>MarkDown 全语法支持</li><li>轻量易用(~15kb gzipped)</li><li>文章阅读量统计 v1.2.0+</li></ul><h1 id="开始安装："><a href="#开始安装：" class="headerlink" title="开始安装："></a>开始安装：</h1><h2 id="注册LeanCloud账号。"><a href="#注册LeanCloud账号。" class="headerlink" title="注册LeanCloud账号。"></a>注册LeanCloud账号。</h2><blockquote><p>注意一下，如果你不想手持身份证拍照，还是乖乖使用国际版吧！</p></blockquote><p><a href="https://leancloud.cn" target="_blank" rel="noopener">国内LeanCloud</a> <a href="https://leancloud.app" target="_blank" rel="noopener">国外LeanCloud</a> </p><p>好在国际版也支持中文。</p><p>注册-&gt;绑定手机号（这一步逃不了的）-&gt;手持身份证拍照（海外版可以跳过这一步）-&gt;创建一个应用，选择开发板</p><p><img src="https://img.cyfan.top/pic/VALINE/CREATE.jpg" srcset="/img/loading.gif" alt="创建应用" title="创建应用"></p><p>到此注册已完成了，确实很简单吧？</p><h2 id="安装Valine"><a href="#安装Valine" class="headerlink" title="安装Valine"></a>安装Valine</h2><h3 id="获取App-ID和App-Key"><a href="#获取App-ID和App-Key" class="headerlink" title="获取App ID和App Key"></a>获取<code>App ID</code>和<code>App Key</code></h3><p>进入设置-&gt;应用Key,可以看到<code>App ID</code>和<code>App Key</code>,<code>Master Key</code>用不着,先不用管.</p><blockquote><h2 id="安全提示"><a href="#安全提示" class="headerlink" title="安全提示"></a>安全提示</h2><p>Master Key 是最高权限的 Key，一旦泄露，请立刻使用「重置」按钮重置。<br>App Key 是客户端中使用的 Key，理论上客户端中所有请求都不应被信任，默认应认为 App Key 是泄露的。<br>防御恶意请求，不应通过加密 App Key，而应通过设置 ACL（访问权限控制列表）来实现，详细请参考 <a href="https://console.leancloud.app/docs/data_security.html" target="_blank" rel="noopener">「数据与安全文档」 </a>。</p></blockquote><h3 id="Hexo-NexT用户："><a href="#Hexo-NexT用户：" class="headerlink" title="Hexo+NexT用户："></a>Hexo+NexT用户：</h3><p>打开<code>/theme/next/_config</code>文件,搜索<code>Valine</code>,你会看到类似的字样:</p><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-comment"># Valine.</span><span class="hljs-comment"># You can get your appid and appkey from https://leancloud.cn</span><span class="hljs-comment"># more info please open https://valine.js.org</span><span class="hljs-attr">valine:</span><span class="hljs-attr">  enable:</span> <span class="hljs-literal">false</span><span class="hljs-attr">  appid:</span> <span class="hljs-attr">  appkey:</span> <span class="hljs-attr">  notify:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># mail notifier , https://github.com/xCss/Valine/wiki</span><span class="hljs-attr">  verify:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># Verification code</span><span class="hljs-attr">  placeholder:</span>  <span class="hljs-comment"># comment box placeholder</span><span class="hljs-attr">  avatar:</span> <span class="hljs-string">mp</span> <span class="hljs-comment"># gravatar style</span><span class="hljs-attr">  guest_info:</span> <span class="hljs-string">nick,mail,link</span> <span class="hljs-comment"># custom comment header</span><span class="hljs-attr">  pageSize:</span> <span class="hljs-number">10</span> <span class="hljs-comment"># pagination size</span></code></pre></div><p>这里解释一下:</p><ul><li><code>enable</code>: 表示Valine是否开启,请把它修改为<code>true</code></li><li><code>appid</code>: 你的<code>App id</code></li><li><code>appkey</code>: 你的<code>App Key</code></li><li><code>notify</code>: 邮箱提醒,这个功能并不完善,请保持为<code>false</code>,以后我们会有更好的邮件系统.</li><li><code>verify</code>: 人机验证,最好开起来,避免恶意灌水,但是发的评论越多,题目越难,有点反人类.</li><li><code>placeholder</code>: 默认在评论框内显示的文字</li><li><code>avatar</code>: 没有留下<a href="https://cn.gravatar.com" target="_blank" rel="noopener">Gravatar</a> 账号的用户默认头像，具体前往<a href="https://valine.js.org" target="_blank" rel="noopener">https://valine.js.org</a>查看更多。</li><li><code>guest_info</code>: 默认显示的三个信息输入框</li><li><code>pageSize</code>: 单页显示评论量，默认十条。</li></ul><p>接着<code>hexo g</code>自己看一看吧!</p><h3 id="其它用户"><a href="#其它用户" class="headerlink" title="其它用户:"></a>其它用户:</h3><p>先在<code>&lt;head&gt;</code>和<code>&lt;/head&gt;</code>间添加:</p><div class="hljs"><pre><code class="hljs Javascript">&lt;script src=<span class="hljs-string">'//unpkg.com/valine/dist/Valine.min.js'</span>&gt;<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span></code></pre></div><p>接着在<code>&lt;body&gt;</code>和<code>&lt;/body&gt;</code>间在你要添加的区间添加:</p><div class="hljs"><pre><code class="hljs html">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"vcomments"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="actionscript">        <span class="hljs-keyword">new</span> Valine(&#123;            el: <span class="hljs-string">'#vcomments'</span> ,appId: <span class="hljs-string">'&lt;APP_ID&gt;'</span>,appKey: <span class="hljs-string">'&lt;APP_KEY&gt;'</span>,notify: <span class="hljs-literal">false</span>, verify: <span class="hljs-literal">false</span>, avatar: <span class="hljs-string">'mp'</span>, placeholder: <span class="hljs-string">'just go go'</span> &#125;)    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></code></pre></div><p>与上面相同:</p><ul><li><code>appid</code>: 你的<code>App id</code></li><li><code>appkey</code>: 你的<code>App Key</code></li><li><code>notify</code>: 邮箱提醒,这个功能并不完善,请保持为<code>false</code>,以后我们会有更好的邮件系统.</li><li><code>verify</code>: 人机验证,最好开起来,避免恶意灌水,但是发的评论越多,题目越难,有点反人类.</li><li><code>placeholder</code>: 默认在评论框内显示的文字</li><li><code>avatar</code>: 没有留下<a href="https://cn.gravatar.com" target="_blank" rel="noopener">Gravatar</a> 账号的用户默认头像，具体前往<a href="https://valine.js.org" target="_blank" rel="noopener">https://valine.js.org</a>查看更多。</li></ul><blockquote><p><strong>手动填坑</strong><br>在 <code>:</code>后一定要有一个<kbd>Space</kbd>!</p></blockquote><p>搞定了!</p><h2 id="去除Powered-by-Valine"><a href="#去除Powered-by-Valine" class="headerlink" title="去除Powered by Valine"></a>去除<code>Powered by Valine</code></h2><p>在<code>&lt;/script&gt;</code>前添加以下文字:</p><div class="hljs"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> infoEle = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">'#comments .info'</span>);<span class="hljs-keyword">if</span> (infoEle &amp;&amp; infoEle.childNodes &amp;&amp; infoEle.childNodes.length &gt; <span class="hljs-number">0</span>)&#123;  infoEle.childNodes.forEach(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">item</span>) </span>&#123;    item.parentNode.removeChild(item);  &#125;);&#125;</code></pre></div><p>你会看到版权神秘失踪了.</p><h1 id="升阶"><a href="#升阶" class="headerlink" title="升阶:"></a>升阶:</h1><p>Valine主打无后台,虽然避免了种种麻烦的事,但为管理造成了一定麻烦.</p><p>况且邮箱发送提醒也有很大缺陷,这时,我们就要祭出神器: <code>Valine-Admin</code> !</p><p>感谢<a href="https://gitee.com/a1401358759/Valine-Admin" target="_blank" rel="noopener">杨学峰</a> 的贡献!本篇转载以下。</p><h2 id="部署环境"><a href="#部署环境" class="headerlink" title="部署环境:"></a>部署环境:</h2><p>在Leancloud中<code>云引擎</code>-&gt;<code>设置</code>-&gt;<code>源码部署</code>-&gt;<code>代码库</code>,设置为<a href="https://github.com/ChenYFan/Valine-Admin.git" target="_blank" rel="noopener">https://github.com/ChenYFan/Valine-Admin.git</a>,接着进入<code>云引擎</code>-&gt;<code>部署</code>,点击部署,过一下就部署完成啦!</p><h2 id="设置变量"><a href="#设置变量" class="headerlink" title="设置变量:"></a>设置变量:</h2><table><thead><tr><th>变量</th><th>示例</th><th>说明</th></tr></thead><tbody><tr><td>SITE_NAME</td><td>CYFの博客</td><td>[必填]博客名称</td></tr><tr><td>SITE_URL</td><td><a href="https://blog.cyfan.ga" target="_blank" rel="noopener">https://blog.cyfan.ga</a></td><td>[必填]首页地址</td></tr><tr><td><strong>SMTP_SERVICE</strong></td><td>163</td><td>[新版支持]邮件服务提供商，支持 QQ、163、126、Gmail 以及 <a href="https://nodemailer.com/smtp/well-known/#supported-services" target="_blank" rel="noopener">更多</a> ,不建议使用QQex.</td></tr><tr><td>SMTP_USER</td><td><a href="mailto:xxxxxx@163.com" target="_blank" rel="noopener">xxxxxx@163.com</a></td><td>[必填]SMTP登录用户</td></tr><tr><td>SMTP_PASS</td><td>xxxxxxxx</td><td>[必填]SMTP登录密码（QQ邮箱需要获取独立密码,建议使用163）</td></tr><tr><td>SENDER_NAME</td><td>CYF</td><td>[必填]发件人</td></tr><tr><td>SENDER_EMAIL</td><td><a href="mailto:xxxxxx@163.com" target="_blank" rel="noopener">xxxxxx@163.com</a></td><td>[必填]发件邮箱</td></tr><tr><td>ADMIN_URL</td><td><a href="https://xxx.avosapps.us/" target="_blank" rel="noopener">https://xxx.avosapps.us/</a></td><td>[建议]Web主机二级域名，用于自动唤醒</td></tr><tr><td>BLOGGER_EMAIL</td><td><a href="mailto:xxxxx@gmail.com" target="_blank" rel="noopener">xxxxx@gmail.com</a></td><td>[可选]博主通知收件地址，默认使用SENDER_EMAIL</td></tr><tr><td>AKISMET_KEY</td><td>xxxxxxxxxxxx</td><td>[可选]Akismet Key 用于垃圾评论检测，设为MANUAL_REVIEW开启人工审核，留空不使用反垃圾</td></tr></tbody></table><p>接着<code>云引擎</code>-&gt;<code>Web主机域名</code>,自主设置,比如<code>xxx</code>,然后访问<a href="https://xxx.avosapps.us/sign-up" target="_blank" rel="noopener">https://xxx.avosapps.us/sign-up</a>，快速注册自己的管理员账号。</p><blockquote><p>注：使用原版Valine如果遇到注册页面不显示直接跳转至登录页的情况，请手动删除_User表中的全部数据。</p></blockquote><blockquote><p>注: 国内版更可能是<code>xxx.leancloudapp.cn</code>,具体看情况.</p></blockquote><p>此后，可以通过<code>https://xxx.avosapps.us/</code>管理评论。</p><h2 id="定时任务设置"><a href="#定时任务设置" class="headerlink" title="定时任务设置"></a>定时任务设置</h2><p>开发版有限制，每天强制休眠6小时和每半小时睡眠。</p><p>解决：</p><p>目前实现了两种云函数定时任务：(1)自动唤醒，定时访问Web APP二级域名防止云引擎休眠；(2)每天定时检查24小时内漏发的邮件通知。</p><p>进入云引擎-定时任务中，创建定时器，创建两个定时任务。</p><h3 id="自动唤醒"><a href="#自动唤醒" class="headerlink" title="自动唤醒"></a>自动唤醒</h3><p>选择self-wake云函数，Cron表达式为<code>0 0/30 7-23 * * ?</code>，表示每天早7点到晚23点每隔30分钟访问云引擎，<code>ADMIN_URL</code>环境变量务必设置正确：</p><p><img src="https://img.cyfan.top/pic/VALINE/SW.png" srcset="/img/loading.gif" alt title="自唤醒"></p><blockquote><p>不建议添加该函数，这回导致你的评论系统在半夜无法正常运行。</p></blockquote><h3 id="邮件通知"><a href="#邮件通知" class="headerlink" title="邮件通知"></a>邮件通知</h3><p>选择resend-mails云函数，Cron表达式为<code>0 0 8 * * ?</code>，表示每天早8点检查过去24小时内漏发的通知邮件并补发：<br><img src="https://img.cyfan.top/pic/VALINE/MAIL.png" srcset="/img/loading.gif" alt title="邮件通知"></p><p><del><strong>添加定时器后记得点击启动方可生效。</strong></del></p><p>[2020年6月6日更新]</p><p>注意!LeanCloud于2020-4-14 流控：<br><a href="https://forum.leancloud.cn/t/topic/22595" target="_blank" rel="noopener">官网链接</a></p><div class="hljs"><pre><code class="hljs undefined">我们近期发现有大量云引擎的体验版（免费版）用户创建了在同一时刻触发的定时任务唤醒容器运行，会对服务的负载产生一定影响。因此我们决定根据服务器的负载，对这些定时任务添加流控，通过定时任务唤醒容器将有可能会失败。这个改动不会对云引擎的标准版（付费版）用户产生影响。</code></pre></div><p>简单地说就是赶人,拒绝自动唤醒.这可以理解,毕竟这么多人白嫖也不对;但同时还有一个问题,你一个LeanCloud商业版一天30￥，这怎么说我都觉得付不起，我认为，搞个0.1￥/日的套餐没准白嫖的人就少些呢</p><p><img src="https://img.cyfan.top/pic/postpic/20200606145909.png" srcset="/img/loading.gif" alt></p><p>所以,要么就不添加定时任务【此时评论依旧可以导入，只不过不会发邮件而已】，要么就外部自唤醒【可以试试GithubAction、CloudFlareWorkers、CronJob，甚至最简单的UpTimeRobot都可以】。至于我么，懒得自唤醒了，毕竟所有评论都是要我手动审核的，审核完了才发邮件，这个时候老早就唤醒了。</p><p><strong>至此，Valine Admin 已经可以正常工作，更多以下是可选的进阶配置。</strong></p><table><thead><tr><th>环境变量</th><th>示例</th><th>说明</th></tr></thead><tbody><tr><td>MAIL_SUBJECT</td><td>${PARENT_NICK}，您在${SITE_NAME}上的评论收到了回复</td><td>[可选]@通知邮件主题（标题）模板</td></tr><tr><td>MAIL_TEMPLATE</td><td>见下文</td><td>[可选]@通知邮件内容模板</td></tr><tr><td>MAIL_SUBJECT_ADMIN</td><td>${SITE_NAME}上有新评论了</td><td>[可选]博主邮件通知主题模板</td></tr><tr><td>MAIL_TEMPLATE_ADMIN</td><td>见下文</td><td>[可选]博主邮件通知内容模板</td></tr></tbody></table><p>邮件通知包含两种，分别是被@通知和博主通知，这两种模板都可以完全自定义。默认使用经典的蓝色风格模板（样式来源未知）。</p><p>默认被@通知邮件内容模板如下：</p><div class="hljs"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"border-top:2px solid #12ADDB;box-shadow:0 1px 3px #AAAAAA;line-height:180%;padding:0 15px 12px;margin:50px auto;font-size:12px;"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"border-bottom:1px solid #DDD;font-size:14px;font-weight:normal;padding:13px 0 10px 8px;"</span>&gt;</span>您在<span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"text-decoration:none;color: #12ADDB;"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"$&#123;SITE_URL&#125;"</span> <span class="hljs-attr">target</span>=<span class="hljs-string">"_blank"</span>&gt;</span>            $&#123;SITE_NAME&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>上的评论有了新的回复<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span> $&#123;PARENT_NICK&#125; 同学，您曾发表评论：<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"padding:0 12px 0 12px;margin-top:18px"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"background-color: #f5f5f5;padding: 10px 15px;margin:18px 0;word-wrap:break-word;"</span>&gt;</span>            $&#123;PARENT_COMMENT&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>$&#123;NICK&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span>回复说：<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"background-color: #f5f5f5;padding: 10px 15px;margin:18px 0;word-wrap:break-word;"</span>&gt;</span> $&#123;COMMENT&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>您可以点击<span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"text-decoration:none; color:#12addb"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"$&#123;POST_URL&#125;"</span> <span class="hljs-attr">target</span>=<span class="hljs-string">"_blank"</span>&gt;</span>查看回复的完整內容<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>，欢迎再次光临<span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"text-decoration:none; color:#12addb"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"$&#123;SITE_URL&#125;"</span> <span class="hljs-attr">target</span>=<span class="hljs-string">"_blank"</span>&gt;</span>$&#123;SITE_NAME&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>。<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></div><p>效果如下图：</p><p><img src="https://img.cyfan.top/pic/VALINE/MB.png" srcset="/img/loading.gif" alt="mail-blue-template"></p><p>@通知模板中的可用变量如下（注，这是邮件模板变量，请勿与云引擎环境变量混淆）：</p><table><thead><tr><th>模板变量</th><th>说明</th></tr></thead><tbody><tr><td>SITE_NAME</td><td>博客名称</td></tr><tr><td>SITE_URL</td><td>博客首页地址</td></tr><tr><td>POST_URL</td><td>文章地址（完整路径）</td></tr><tr><td>PARENT_NICK</td><td>收件人昵称（被@者，父级评论人）</td></tr><tr><td>PARENT_COMMENT</td><td>父级评论内容</td></tr><tr><td>NICK</td><td>新评论者昵称</td></tr><tr><td>COMMENT</td><td>新评论内容</td></tr></tbody></table><p>默认博主通知邮件内容模板如下：</p><div class="hljs"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"border-top:2px solid #12ADDB;box-shadow:0 1px 3px #AAAAAA;line-height:180%;padding:0 15px 12px;margin:50px auto;font-size:12px;"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"border-bottom:1px solid #DDD;font-size:14px;font-weight:normal;padding:13px 0 10px 8px;"</span>&gt;</span>您在<span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"text-decoration:none;color: #12ADDB;"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"$&#123;SITE_URL&#125;"</span> <span class="hljs-attr">target</span>=<span class="hljs-string">"_blank"</span>&gt;</span>$&#123;SITE_NAME&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>上的文章有了新的评论<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>$&#123;NICK&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span>回复说：<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"background-color: #f5f5f5;padding: 10px 15px;margin:18px 0;word-wrap:break-word;"</span>&gt;</span> $&#123;COMMENT&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>您可以点击<span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"text-decoration:none; color:#12addb"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"$&#123;POST_URL&#125;"</span> <span class="hljs-attr">target</span>=<span class="hljs-string">"_blank"</span>&gt;</span>查看回复的完整內容<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></div><p>博主通知邮件模板中的可用变量与@通知中的基本一致， <code>PARENT_NICK</code> 和 <code>PARENT_COMMENT</code> 变量不再可用。 </p><p>这里还提供一个彩虹风格的@通知邮件模板代码：</p><div class="hljs"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"border-radius: 10px 10px 10px 10px;font-size:13px;    color: #555555;width: 666px;font-family:'Century Gothic','Trebuchet MS','Hiragino Sans GB',微软雅黑,'Microsoft Yahei',Tahoma,Helvetica,Arial,'SimSun',sans-serif;margin:50px auto;border:1px solid #eee;max-width:100%;background: #ffffff repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"width:100%;background:#49BDAD;color:#ffffff;border-radius: 10px 10px 0 0;background-image: -moz-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));background-image: -webkit-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));height: 66px;"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"font-size:15px;word-break:break-all;padding: 23px 32px;margin:0;background-color: hsla(0,0%,100%,.4);border-radius: 10px 10px 0 0;"</span>&gt;</span>您在<span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"text-decoration:none;color: #ffffff;"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"$&#123;SITE_URL&#125;"</span>&gt;</span> $&#123;SITE_NAME&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>上的留言有新回复啦！<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"margin:40px auto;width:90%"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>$&#123;PARENT_NICK&#125; 同学，您曾在文章上发表评论：<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;"</span>&gt;</span>$&#123;PARENT_COMMENT&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>$&#123;NICK&#125; 给您的回复如下：<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;"</span>&gt;</span>$&#123;COMMENT&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>您可以点击<span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"text-decoration:none; color:#12addb"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"$&#123;POST_URL&#125;#comments"</span>&gt;</span>查看回复的完整內容<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>，欢迎再次光临<span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"text-decoration:none; color:#12addb"</span>                <span class="hljs-attr">href</span>=<span class="hljs-string">"$&#123;SITE_URL&#125;"</span>&gt;</span> $&#123;SITE_NAME&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/css"</span>&gt;</span><span class="css"><span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:link</span>&#123;<span class="hljs-attribute">text-decoration</span>:none&#125;<span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:visited</span>&#123;<span class="hljs-attribute">text-decoration</span>:none&#125;<span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span>&#123;<span class="hljs-attribute">text-decoration</span>:none&#125;<span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:active</span>&#123;<span class="hljs-attribute">text-decoration</span>:none&#125;</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></div><p>效果如图：</p><p><img src="https://img.cyfan.top/pic/VALINE/RB.png" srcset="/img/loading.gif" alt="彩虹模板"></p><h2 id="垃圾评论检测"><a href="#垃圾评论检测" class="headerlink" title="垃圾评论检测"></a>垃圾评论检测</h2><blockquote><p>Akismet (Automattic Kismet)是应用广泛的一个垃圾留言过滤系统，其作者是大名鼎鼎的WordPress 创始人 Matt Mullenweg，Akismet也是WordPress默认安装的插件，其使用非常广泛，设计目标便是帮助博客网站来过滤留言Spam。有了Akismet之后，基本上不用担心垃圾留言的烦恼了。<br>启用Akismet后，当博客再收到留言会自动将其提交到Akismet并与Akismet上的黑名单进行比对，如果名列该黑名单中，则该条留言会被标记为垃圾评论且不会发布。</p></blockquote><p>如果还没有Akismet Key，你可以去 <a href="https://akismet.com/development/" target="_blank" rel="noopener">AKISMET FOR DEVELOPERS 免费申请一个</a>；<br><strong>当AKISMET_KEY设为MANUAL_REVIEW时，开启人工审核模式；</strong><br>如果你不需要反垃圾评论，Akismet Key 环境变量可以忽略。</p><p><strong>为了实现较为精准的垃圾评论识别，采集的判据除了评论内容、邮件地址和网站地址外，还包括评论者的IP地址、浏览器信息等，但仅在云引擎后台使用这些数据，确保隐私和安全。</strong></p><p><strong>如果使用了本站最新的Valine和Valine Admin，并设置了Akismet Key，可以有效地拦截垃圾评论。被标为垃圾的评论可以在管理页面取消标注。</strong></p><table><thead><tr><th>环境变量</th><th>示例</th><th>说明</th></tr></thead><tbody><tr><td>AKISMET_KEY</td><td>xxxxxxxxxxxx</td><td>[可选]Akismet Key 用于垃圾评论检测</td></tr></tbody></table><p>到此位置，Valine设置完全啦！赶紧试一试吧！</p>]]></content>
    
    
    <categories>
      
      <category>丆插件</category>
      
    </categories>
    
    
    <tags>
      
      <tag>站长必备</tag>
      
      <tag>Hexo</tag>
      
      <tag>评论</tag>
      
      <tag>Valine</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Live2D：为你的hexo博客添加萌萌哒看板娘</title>
    <link href="/2019/08/15/Live2D%EF%BC%9A%E4%B8%BA%E4%BD%A0%E7%9A%84hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E8%90%8C%E8%90%8C%E5%93%92%E7%9C%8B%E6%9D%BF%E5%A8%98/"/>
    <url>/2019/08/15/Live2D%EF%BC%9A%E4%B8%BA%E4%BD%A0%E7%9A%84hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E8%90%8C%E8%90%8C%E5%93%92%E7%9C%8B%E6%9D%BF%E5%A8%98/</url>
    
    <content type="html"><![CDATA[<h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><p>19号我就要上学了，以后可能会突然失踪一段时间，9月1号正式开学后，我会恢复到2周一更新的频率。在这里对所有关注我博客的人说声抱歉。</p><p>我寥寥无几的评论区里突然有人问我右下角的看板娘是怎么做到的：</p><blockquote><p>wpaladins •*********@163.com •2019-08-13 13:33:44<br>你网站的各种东西确实很炫，只是打开你的博客之后我垃圾mba的风扇就一直转个不停😂我想知道左下角的妹子怎么搞？😁</p></blockquote><p>这让我感动了一分钟….</p><p>本来我就有写这一篇文章的感觉，只是没有这个打算，既然您问了，那我就写吧。</p><p>live2D for hexo 作者：<a href="https://huaji8.top/post/live2d-plugin-2.0/" target="_blank" rel="noopener">原作大大的博客</a></p><h1 id="材料："><a href="#材料：" class="headerlink" title="材料："></a>材料：</h1><ul><li>Hexo：如果你不是使用Hexo，那很抱歉，我们不会也没有提到其他博客的部署方法，不过这里添加几个链接：<ul><li>Wordpress用户看这里：<a href="https://www.mom1.cn/4231.html" target="_blank" rel="noopener">WordPress插件给博客加上live2d伊斯特瓦尔</a></li><li>Typecho用户试一试：<a href="https://qqdie.com/archives/l2d233.html" target="_blank" rel="noopener">Live2D看板娘来了！typecho插件</a></li><li>Jekll用户可以参考： <a href="https://done.moe/tutorial/2018/08/11/how-to-add-cute-live2d-in-jekyll-blog/" target="_blank" rel="noopener">如何给你的Jekyll博客添加可爱的二次元看板娘(Live2D)</a></li><li>野路子用户： （很抱歉没有教程）</li></ul></li><li>Node.js (&gt;=6.0)</li></ul><h1 id="简单开始："><a href="#简单开始：" class="headerlink" title="简单开始："></a>简单开始：</h1><h2 id="安装Live2D："><a href="#安装Live2D：" class="headerlink" title="安装Live2D："></a>安装Live2D：</h2><p>请先cd到你的hexo安装目录下！</p><p>如果你安装过低版本的Live2D，那先运行：<code>npm uninstall hexo-helper-live2d</code> 。<br>安装： <code>npm uninstall hexo-helper-live2d</code></p><blockquote><p>注意<br>中国用户由于<code>显而易见的原因</code>，速度超级慢，具体解决方案前往<a href="/2019/07/19/国内加快NPM下载速度/#more">我早年写的文章</a> 查看</p></blockquote><p>安装完成之后，就会在博客的根目录<code>package.json</code>文件中存在依赖,同时出现<code>node_moduels</code>文件夹</p><h2 id="选择模型："><a href="#选择模型：" class="headerlink" title="选择模型："></a>选择模型：</h2><p>原生模型：</p><ul><li>Epsilon2.1</li><li>Gantzert_Felixander</li><li>haru</li><li>miku</li><li>ni-j</li><li>nico</li><li>nietzche</li><li>nipsilon</li><li>nito</li><li>shizuku</li><li>tsumiki</li><li>wanko</li><li>z16</li><li>hibiki</li><li>koharu</li><li>haruto</li><li>Unitychan</li><li>tororo</li><li>hijiki</li></ul><p>额外模型：<br>可以前往<a href="https://github.com/summerscar/live2dDemo" target="_blank" rel="noopener">summerscar大佬的Github</a>查看。</p><p>模型预览：<br>进入<a href="https://summerscar.me/live2dDemo/" target="_blank" rel="noopener">https://summerscar.me/live2dDemo/</a>，在<code>modelName:</code>键入模型名即可。</p><h2 id="安装模型："><a href="#安装模型：" class="headerlink" title="安装模型："></a>安装模型：</h2><p>原生模型： 在hexo文件夹根下键入<code>npm install --save live2d-widget-模型名</code>即可。<br>额外模型： 把文件夹下载到<code>node_moduels</code>下即可。</p><h2 id="配置："><a href="#配置：" class="headerlink" title="配置："></a>配置：</h2><p>打开<code>站点配置文件</code>,在末尾填上:</p><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-symbol">live2d:</span><span class="hljs-symbol">  model:</span><span class="hljs-symbol">    scale:</span> <span class="hljs-number">1</span><span class="hljs-symbol">    hHeadPos:</span> <span class="hljs-number">0.5</span><span class="hljs-symbol">    vHeadPos:</span> <span class="hljs-number">0.618</span><span class="hljs-symbol">    use:</span> live2d-widget-model-tororo <span class="hljs-comment">// 下载的动画模型名称</span><span class="hljs-symbol">  display:</span><span class="hljs-symbol">    superSample:</span> <span class="hljs-number">2</span><span class="hljs-symbol">    width:</span> <span class="hljs-number">120</span><span class="hljs-symbol">    height:</span> <span class="hljs-number">200</span><span class="hljs-symbol">    position:</span> left <span class="hljs-comment">// 模型在网页显示位置,left为左,right为右</span><span class="hljs-symbol">    hOffset:</span> <span class="hljs-number">20</span><span class="hljs-symbol">    vOffset:</span> <span class="hljs-number">50</span><span class="hljs-symbol">  mobile:</span><span class="hljs-symbol">    show:</span> true  <span class="hljs-comment">// 移动设备是否显示,true则显示,false则不显示</span><span class="hljs-symbol">    scale:</span> <span class="hljs-number">0.5</span><span class="hljs-symbol">  react:</span><span class="hljs-symbol">    opacityDefault:</span> <span class="hljs-number">0.7</span><span class="hljs-symbol">    opacityOnHover:</span> <span class="hljs-number">0.2</span></code></pre></div><p>接着<code>hexo server</code>看看吧!</p><h1 id="进阶"><a href="#进阶" class="headerlink" title="进阶:"></a>进阶:</h1><p>你看到别人的的看板娘会说话,能拍照,还能打游戏?<br>那你也能!</p><blockquote><p>警告:<br>这会严重拖慢你的网站加载速度,并且功能比较鸡肋,并不建议添加.如果你的博客建立在Github Pages上,添加会造成加载困难以致无法加载!</p></blockquote><blockquote><p>由于我没有使用进阶版,本文以下部分转载来自<a href="https://blog.csdn.net/qq_39610915/article/details/90679768" target="_blank" rel="noopener">https://blog.csdn.net/qq_39610915/article/details/90679768</a></p></blockquote><p>使用大神定制作品<br><a href="https://github.com/stevenjoezhang/live2d-widget" target="_blank" rel="noopener">https://github.com/stevenjoezhang/live2d-widget</a></p><p>按照教程<br><a href="https://blog.pangao.vip/Hexo博客NexT主题美化之新增看板娘(能说话、能换装)/" target="_blank" rel="noopener">https://blog.pangao.vip/Hexo博客NexT主题美化之新增看板娘(能说话、能换装)/</a><br>设定了一番<br>但网页中并没有出现看板娘<br>如果你和我一样是纯新手，而且完全按照上述教程进行，那么恭喜你，看板娘一定不会出现！<br>这是为什么呢？<br>首先我们去查看这个项目的说明</p><blockquote><h2 id="依赖-Dependencies"><a href="#依赖-Dependencies" class="headerlink" title="依赖 Dependencies"></a>依赖 Dependencies</h2><p>本插件需要jQuery和font-awesome支持，请确保它们已在页面中加载，例如在<code>&lt;head&gt;</code>中加入：<br>jQuery and font-awesome is required for this plugin. You can add this to <code>&lt;head&gt;</code>:</p></blockquote><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"stylesheet"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css"</span>&gt;</span></code></pre></div><blockquote><p>否则无法正常显示。（如果你的网页已经加载了jQuery，就不要重复加载了）</p></blockquote><p>而教程中并没有指出这一点，因此缺少依赖的博客，一定不会加载出看板娘。<br>其次是autoload.js的路径设置问题。</p><p>正确的步骤如下</p><h3 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h3><p>下载大神项目，解压到本地博客目录的<code>themes/next/source</code>下，修改<code>autoload.js</code>文件，将其中</p><div class="hljs"><pre><code class="hljs undefined">const live2d_path = <span class="hljs-string">"https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget/"</span><span class="hljs-comment">;</span></code></pre></div><p>改为</p><div class="hljs"><pre><code class="hljs undefined">const live2d_path = <span class="hljs-string">"/live2d/"</span><span class="hljs-comment">;</span></code></pre></div><p><code>autoload.js</code>中的注释的绝对地址指的是，将资源打包放到<code>hexo/theme/next/source</code>中后，以<code>hexo/theme/next/source</code>为根目录（/）的绝对路径，一般我们下载下来的是master分支，那么修改路径就是<code>/live2d-widget-master/xxx.js</code>，<code>autoload.js</code>的最后一个函数initWidget(“/live2d-widget-master/“, “<a href="https://api.fghrsh.net/live2d”" target="_blank" rel="noopener">https://api.fghrsh.net/live2d”</a>); 中的第二个参数不要变，是一个后台api。我选择将文件夹重命名为“live2d”，因此按照如上方式修改。</p><h3 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h3><p>在<code>/themes/next/layout/_layout.swing</code>中,<code>&lt;body&gt;</code>标签中新增如下内容，<code>########</code>为你自己的github账号：</p><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://########.github.io/live2d/autoload.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre></div><p><code>&lt;head&gt;</code>标签中新增如下内容：一定一定要加上依赖！！！！！</p><div class="hljs"><pre><code class="hljs undefined">&lt;script <span class="hljs-attribute">src</span>=<span class="hljs-string">"https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js"</span>&gt;&lt;/script&gt;&lt;link <span class="hljs-attribute">rel</span>=<span class="hljs-string">"stylesheet"</span> <span class="hljs-attribute">href</span>=<span class="hljs-string">"https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css"</span>/&gt;</code></pre></div><h3 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h3><p>在主题配置文件<code>_config.yml</code> 中,新增如下内容：</p><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-attr">live2d:</span><span class="hljs-attr">  enable:</span> <span class="hljs-literal">true</span></code></pre></div><p>想修改看板娘大小、位置、格式、文本内容等，可查看并修改 <code>waifu-tips.js</code> 、 <code>waifu-tips.json</code> 和 <code>waifu.css</code>。</p><p>最终效果如图：<br><img src="https://img.cyfan.top/pic/KBN.png" srcset="/img/loading.gif" alt title="最终效果"><br>后端API地址：<br><a href="https://github.com/fghrsh/live2d_api" target="_blank" rel="noopener">https://github.com/fghrsh/live2d_api</a></p><p>特别提醒！！！！！！<br>根据原作者反映，2018年十月，使用人数过多曾让该api暂时停止提供服务，更稳妥的方法是自建api。</p><hr>]]></content>
    
    
    <categories>
      
      <category>爱学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>站长必备</tag>
      
      <tag>Hexo</tag>
      
      <tag>Live2D</tag>
      
      <tag>萌萌哒</tag>
      
      <tag>看板娘</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【致歉】全能音乐搜索Bug修复</title>
    <link href="/2019/08/15/%E3%80%90%E8%87%B4%E6%AD%89%E3%80%91%E5%85%A8%E8%83%BD%E9%9F%B3%E4%B9%90%E6%90%9C%E7%B4%A2Bug%E4%BF%AE%E5%A4%8D/"/>
    <url>/2019/08/15/%E3%80%90%E8%87%B4%E6%AD%89%E3%80%91%E5%85%A8%E8%83%BD%E9%9F%B3%E4%B9%90%E6%90%9C%E7%B4%A2Bug%E4%BF%AE%E5%A4%8D/</url>
    
    <content type="html"><![CDATA[<h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><p>就在昨天，一位孜孜不倦的网友 <a href="https://github.com/qwqdanchun" target="_blank" rel="noopener">qwqdanchun</a> 跑到我的issues中，追了我一整天，原因是音乐搜索出现程序错误。</p><p>刚开始我有点不以为然，本来有些接口就坏掉了，打不开又以为是php服务商的问题，后来ta部署到heroku上，搜索功能有问题，只能显示主页，帮助页显示也有问题，一搜索直接刷新了，这才意识到严重性。</p><p>后来我打开电脑，仔细查看，终于发现了问题。</p><h1 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h1><p>我打开储存在本地的文件，和压缩包内文件进行比较，终于发现少了一个文件：<code>.htaccess</code></p><p>这个文件丢了可就了不得了，这会导致伪静态直接找不到自己在哪。</p><p>原来在解压时，Windows不允许创建一个无名字的文件，而Liunx允许，这导致我的阉割版好压直接略过错误不报提醒。</p><p>找到问题就好办了。</p><h1 id="解决："><a href="#解决：" class="headerlink" title="解决："></a>解决：</h1><p>直接在Github储存库添加一个<code>.htaccess</code>，里面填上：</p><div class="hljs"><pre><code class="hljs php">&lt;IfModule mod_rewrite.c&gt;RewriteEngine onRewriteCond %&#123;REQUEST_FILENAME&#125; !-dRewriteCond %&#123;REQUEST_FILENAME&#125; !-fRewriteRule ^(.*)$ index.php [L,E=PATH_INFO:$<span class="hljs-number">1</span>]&lt;/IfModule&gt;</code></pre></div><h1 id="结果："><a href="#结果：" class="headerlink" title="结果："></a>结果：</h1><p><img src="https://img.cyfan.top/pic/MUSIC/OK.jpg" srcset="/img/loading.gif" alt="修复完成" title="修复完成"></p><h1 id="心得："><a href="#心得：" class="headerlink" title="心得："></a>心得：</h1><p>凡事都要细心，不能毛糙，要及时比对啊！！！</p><hr>]]></content>
    
    
    <categories>
      
      <category>爱学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>音乐</tag>
      
      <tag>致歉</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【公告】博客多域名</title>
    <link href="/2019/08/14/%E3%80%90%E5%85%AC%E5%91%8A%E3%80%91%E5%8D%9A%E5%AE%A2%E5%A4%9A%E5%9F%9F%E5%90%8D/"/>
    <url>/2019/08/14/%E3%80%90%E5%85%AC%E5%91%8A%E3%80%91%E5%8D%9A%E5%AE%A2%E5%A4%9A%E5%9F%9F%E5%90%8D/</url>
    
    <content type="html"><![CDATA[<h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><p>连续两次宕机了！！！！！！！！！！！</p><p>香港线不靠谱啊啊啊啊啊啊啊啊啊啊啊！</p><p>一气之下添加了两个域名:</p><div class="hljs"><pre><code class="hljs undefined">sg<span class="hljs-selector-class">.blog</span><span class="hljs-selector-class">.cyfan</span><span class="hljs-selector-class">.ga</span>hk<span class="hljs-selector-class">.blog</span><span class="hljs-selector-class">.cyfan</span><span class="hljs-selector-class">.ga</span>blog<span class="hljs-selector-class">.cyfan</span><span class="hljs-selector-class">.ga</span></code></pre></div><p>其中<code>blog.cyfan.ga</code>没有失效,依然可以正常访问.华东地区会解析到香港,华北地区多半解析到新加坡.</p><p>(腾讯莫名其妙的,为什么不把华北接到HK?)</p><p>而另外的<code>sg.blog.cyfan.ga</code>和<code>hk.blog.cyfan.ga</code>则分别解析到新加坡和香港.</p><p>香港线速度较快,但经常宕机,新加坡不容易宕机,但速度迷人.</p><p>Valine的数据在三个域名都相通.因此你可以在任意一个域名上发言.</p><p>MMP,腾讯云!</p>]]></content>
    
    
    <categories>
      
      <category>要公告</category>
      
    </categories>
    
    
    <tags>
      
      <tag>宕机</tag>
      
      <tag>域名</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>User-Agent野史</title>
    <link href="/2019/08/13/User-Agent%E9%87%8E%E5%8F%B2/"/>
    <url>/2019/08/13/User-Agent%E9%87%8E%E5%8F%B2/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>关于这几天为什么不更新博客，原因很简单，台风来了，我家断电了。</p><p><img src="https://img.cyfan.top/pic/TY.jpg" srcset="/img/loading.gif" alt="台风" title="我在台风旁边啊！！！"></p><p>好吧，当我有网络后，我去 <a href="https://baiduwp.com" target="_blank" rel="noopener">https://baiduwp.com</a> 下载百度网盘上的东西时,弹出这样的一句话:</p><blockquote><p>[公告] 因百度网盘服务器升级，目前需要修改浏览器UA才能获取到高速下载地址（点击查看教程）</p></blockquote><p>点击就点击，进入后，Chrome要求下载<a href="https://chrome.google.com/webstore/detail/user-agent-switcher-for-c/djflhoibgkdhkhhcedjiklpkjnoahfmg" target="_blank" rel="noopener"> User-Agent Switcher for Chrome </a>，把UA改成<code>Opera</code><br>当然，显然易见，你上不去的，本人备份了一份在私有云上</p><a class="btn" href="http://pan.cyfan.top/%E6%8F%92%E4%BB%B6/crx/User-Agent_Switcher_for_Chrome.7z" target="_blank" rel="noopener">              >>CYF的私有云             </a><p>顿时，我就好奇了，那Chorme的UA是什么？<br>于是在地址栏键入</p><div class="hljs"><pre><code class="hljs javascript">javascript:<span class="hljs-built_in">document</span>.write(navigator.userAgent);</code></pre></div><p>你也可以试一试!! <a href="javascript:document.write(navigator.userAgent);" target="_blank" rel="noopener">点我看你的UA!</a></p><p>返回：</p><div class="hljs"><pre><code class="hljs undefined">Mozilla/<span class="hljs-number">5.0</span> (Windows NT <span class="hljs-number">10.0</span>; WOW64) AppleWebKit/<span class="hljs-number">537.36</span> (KHTML, like Gecko) Chrome/<span class="hljs-number">69.0</span><span class="hljs-number">.3497</span><span class="hljs-number">.100</span> Safari/<span class="hljs-number">537.36</span></code></pre></div><p>………………</p><p>我当时就懵逼了，<br>话不能说清楚吗?<br>我TM**一个<code>Chrome</code>怎么哪来<code>Mozilla</code>    这不是火狐的吗?<code>AppleWebKit</code>和<code>Safari</code>又是哪来的?????当我是<code>Safari</code>吗`?</p><p>不是说我不知道User-Agent,我也了解过,只是浏览器的标识而已,但是…..<br>标识有那么混乱吗??????</p><h1 id="What’s-User-Agent"><a href="#What’s-User-Agent" class="headerlink" title="What’s User-Agent?"></a>What’s User-Agent?</h1><h2 id="UA"><a href="#UA" class="headerlink" title="UA"></a>UA</h2><p>User Agent中文名为用户代理，简称 UA，它是一个特殊字符串头，使得服务器能够识别客户使用的操作系统及版本、CPU 类型、浏览器及版本、浏览器渲染引擎、浏览器语言、浏览器插件等。</p><p>一些网站常常通过判断 UA 来给不同的操作系统、不同的浏览器发送不同的页面，因此可能造成某些页面无法在某个浏览器中正常显示，但通过伪装 UA 可以绕过检测。</p><h2 id="浏览器的-UA-字串"><a href="#浏览器的-UA-字串" class="headerlink" title="浏览器的 UA 字串"></a>浏览器的 UA 字串</h2><p>标准格式为： 浏览器标识 (操作系统标识; 加密等级标识; 浏览器语言) 渲染引擎标识 版本信息</p><h2 id="浏览器标识"><a href="#浏览器标识" class="headerlink" title="浏览器标识"></a>浏览器标识</h2><p>由于很多网站在进行 UA 检测的时候忽略了两位数版本号，所以可能造成 浏览器及之后版本收到糟糕的页面，因此自 浏览器 10 之后的版本中浏览器标识项固定为 浏览器，在 UA 字串尾部添加真实版本信息。</p><blockquote><p>来自百度百科</p></blockquote><h1 id="野史"><a href="#野史" class="headerlink" title="野史:"></a>野史:</h1><blockquote><p>可能有一些人和我写了同样的文章,如<a href="http://litten.me/2014/09/26/history-of-browser-useragent/" target="_blank" rel="noopener">Litten的博客</a>，好吧╮(╯-╰)╭，我承认，题目是抄他的，内容也是借鉴他的，但是由于他的内容是2014年的，比较古老，本人就顺便更新和补充他的博文吧（以书签形式夹在原文中。）。</p></blockquote><h3 id="大事年表"><a href="#大事年表" class="headerlink" title="大事年表"></a>大事年表</h3><ul><li>1990年: Nexus(WorldWideWeb)诞生</li><li>1993年1月23日：Mosaic诞生</li><li>1994年12月：Netscape(Mozilla)诞生</li><li>1995年4月：Opera诞生</li><li>1995年8月16日：Internet Explorer诞生</li><li>2002年9月23日：Firefox诞生</li><li>2003年1月7日：Safari诞生</li><li>2008年9月2日：Chrome诞生</li><li>2018年8月15日：红芯浏览器打脸</li></ul><p><img src="https://img.cyfan.top/pic/UA.jpg" srcset="/img/loading.gif" alt="UA" title="不，这是你的UA"></p><h2 id="一、盘古开天地"><a href="#一、盘古开天地" class="headerlink" title="一、盘古开天地"></a>一、盘古开天地</h2><p>很久很久之前，上古大神Berners-Lee发明了WorldWideWeb，即万维网。同时，李大神也发明了第一款浏览器。真是具有跨时代意义的工具呀，好伟大呀，人们在想，叫什么好呢？<br>但大神就是大神，大神内心的想法又岂是尔等凡人能够肆意揣摩？</p><p>万万没想到，李大神说，我这浏览器，也叫WorldWideWeb！不行么？<br>行行行。</p><p>虽然李大神起名字这么拽，但他后来发觉，还是得赋予一点承上启下的历史意义，就改名成“Nexus”。值得注意的是，这浏览器，居然是可以兼容Unix跟Microsoft DOS的。它在当时流行的各种电脑上跑得飞起，应用也越来越广，被称为“杀手级应用”。杀手级…你们看互联网一开始就是这么的腥风血雨。</p><blockquote><p>这里插一句话：你依然可以在现实中找到他。还记得你奶奶的老年机吗？接上<code>2G</code>,使用浏览器,内核就是他.<br>然而你没想到,它也可以玩游戏!<br>文字游戏.</p></blockquote><p>但这个浏览器，还不支持图片的显示，这是出现UserAgent的导火索。</p><h2 id="二、唐尧虞舜"><a href="#二、唐尧虞舜" class="headerlink" title="二、唐尧虞舜"></a>二、唐尧虞舜</h2><p>93年，伊利诺大学的NCSA组织认为，浏览器无图无真相，这不好。因而他们发明了第一款可显示图片的浏览器。<br>真是具有跨时代意义的工具呀，好伟大呀，人们在想，叫什么好呢？<br>但大神就是大神，大神就是连起名字都让你惊心动魄。</p><p>NCSA组织说，它能显示图片，偏偏我们就要叫它“马赛克(Mosaic)”！不行么？<br>行行行。</p><blockquote><p>老司机们别开车啦!!我都忍住了啦!!!</p></blockquote><p>但有人就问了，Nexus不显示图片，Mosaic能显示，你们让html提供者怎么写代码？你们是不是想逼死选择困难症患者？有没有考虑过天秤座的感受？</p><p>因而UserAgent就诞生了。Mosaic将自己标志为<code>NCSA_Mosaic/2.0 (Windows 3.1)</code>，大家该怎么写代码就怎么写，但请求会带上这个信息，服务器就知道该不该返回能显示图片的html。UserAgent君，出生时跟我们设想的一样简单，仅仅标明了自己是什么浏览器，在什么系统运行，以及各自的版本号。</p><p>新旧浏览器们像彬彬有礼的君王，商议和让位是为了更好的繁荣。但风雨欲来。</p><h2 id="三、楚汉争霸"><a href="#三、楚汉争霸" class="headerlink" title="三、楚汉争霸"></a>三、楚汉争霸</h2><p>像刘邦一样，走出来一个搅局的小流氓。当然他还是很有志向的，他的目标，就是战胜霸主Mosaic。后来，他还真的做到了。<br>如今，所有现代浏览器的UserAgent里都有它的标志，就像汉朝之后，我们都称为“汉”人。一群很有天赋的程序员，一起缔造了它的辉煌。</p><p>真是具有跨时代意义的工具呀，好伟大呀，人们在想，它叫什么呢？<br>但大神就是大神，大神就是让你永远也猜不到他们想了个什么名字。<br>大神们说，叫Mozilla，不行么？<br>行。但什么意思呢？</p><p>含义有二。其一，哥斯拉(Godzilla)谐音，诚然是一头野心勃勃的怪兽；其二，”Mosaic Killa”之意，Killa是俚语中Killer的拼法，即“马赛克的终结者”，赤裸裸的挑战。</p><p>惊呆了的Mosaic小心翼翼的念着Mozilla这发音：“Mo…摸咋了？”勃然大怒，“摸你妹！”</p><p>鉴于Mosaic当时的权势，Mozilla改名成<code>Netscape Navigator</code>(网景航海家)。小怪兽突然变成有点文艺小清新的名字，郁闷得很，但内心的血液沸腾着。虽然叫大名叫网景，但它把UserAgent偷偷设置成<code>Mozilla/1.0 (Win3.1)</code>。还是摸咋了？咬我？</p><h2 id="四、宋元之战"><a href="#四、宋元之战" class="headerlink" title="四、宋元之战"></a>四、宋元之战</h2><p>很快，NetScape战胜了Mosaic，成为了新的霸主，因为其更优的展示。<br>NetScape最先支持了html框架显示，就是简单的table布局，内外边距之类，仅仅这点就将Mosaic抛诸身后。区别这两个浏览器，还是用的UserAgent。如果是UserAgent里含有“Mozilla”字样，那就发送支持框架的页面，否则，就发送不含框架的页面。</p><p>NetScape帝国日益庞大，歌舞升平，一切风平浪静，直到微软的铁骑挥军南下。</p><p>微软发布了一款跟系统强绑定的浏览器，真是具有跨时代意义的工具呀，好伟大呀，人们在想，它叫什么呢？<br>不用想了，就是IE。这命名也相当简单粗暴，<code>Internet Explorer</code>(网络浏览器)，直接把这工具的用途拍在你脸上。连说明书都可以免了。</p><p>IE也是支持html标准框架的，但由于前面的历史原因，人们只会给UserAgent里含有“Mozilla”字样的浏览器发送含框架的页面。但这点小事能难倒我大微软？IE呵呵一笑，把自己的UserAgent改成<code>Mozilla/1.22 (compatible; MSIE 2.0; Windows 95)</code>。看，我这里也有“Mozilla”字样，也能收到含框架的页面了！</p><blockquote><p>这也是微软迫不得已啊.</p></blockquote><p>当然，这个小流氓行为，跟后来把IE和Windows捆绑一起销售的大流氓行为比起来，根本不为足道。后面的故事我们也知道了，IE把NetScape干掉了。但它的身体上，却永远的烙上了“Mozilla”的印记。</p><h2 id="五、康乾盛世"><a href="#五、康乾盛世" class="headerlink" title="五、康乾盛世"></a>五、康乾盛世</h2><p>看过奥特曼的都知道，怪兽被打败了会再回来。别忘了NetScape曾拥有一批大神们，失败后，他们围绕着浏览器排版引擎Gecko(壁虎)成立了非正式组织Mozilla。小怪兽再次出发。大神们发明了另一款优秀的浏览器，它在插件拓展和开发调试领域做出的贡献，绝对可以载入互联网历史。</p><p>真是具有跨时代意义的工具呀，好伟大呀，人们在想，它叫什么呢？<br>但大神就是大神，大神就是即使你知道了Mozilla的命名都是野兽，却还是猜不到是什么。<br>Mozilla说，我们浴火重生，叫<code>Phoenix</code>(凤凰)！不行么？<br>真不行。</p><p>刚推出就被人告了，原来已经有一家公司叫做“凤凰科技”。<br>Mozilla瀑布汗，改名叫<code>Firebird</code>(火鸟)！还不行么？<br>我们得原谅一下他们的取名，虽然现在看来满满的山寨感，可放在那个时代，Firebird这名字很炫酷。就像你当初的QQ昵称叫赤炎天使感觉依然良好一样。</p><p>但是，他们发现，业内有个数据库系统，也叫的Firebird…泪流满面的Mozilla感慨重生好难呀。最后才决定叫<code>Firefox</code>(火狐)。</p><p>基于Gecko引擎的Firefox非常优秀，为了告诉大家，我使用了这个引擎，它标志自己的UserAgent为<code>Mozilla/5.0 (Windows; U; Windows NT 5.1; sv-SE; rv:1.7.5) Gecko/20041108 Firefox/1.0</code>。</p><blockquote><p>emmmmm,给自家打自家标签,确实没错.</p></blockquote><p>这时候的UserAgent，虽然长了点，但它并不混乱，准确的标明了系统，排版引擎，浏览器名称等信息。虽然IE这时已经占有了很大的市场份额，但基本停步不前；而Mozilla经过一段时间的修生养息，Firefox在业内广受好评，得到了快速的发展。</p><p>时值2003年，web2.0的浪潮前夕，浏览器的发展达到了空前的盛世。<br>然而所谓否极泰来，盛极则衰。涅槃的Firefox迎来盛世，却又恰恰由于盛世，决定了UserAgent纠结的命运。</p><h2 id="六、师夷长技"><a href="#六、师夷长技" class="headerlink" title="六、师夷长技"></a>六、师夷长技</h2><p>前面说到，微软靠Windows系统捆绑IE销售。而Windows自然也有它的对手，Linux。一个技术快速发展的时代，系统的世界里也是战火纷飞。Linux系统自从有了可视化界面，也需要浏览器呀。桌面系统KDE的缔造者们就发明了一个。</p><p>真是具有跨时代意义的工具呀，好伟大呀，人们在想，它叫什么呢？<br>但大神就是大神，大神就是讲究先从文字上占据压垮你的气势。<br>先有Navigator航海家，再有Explorer探索者，咱就叫Konqueror(Conqueror的变体)征服者吧。<br>行行行。我已懒得理这帮大神…</p><p>可是，问题来了。Konqueror使用KHTML排版引擎，即使它们认为自己跟Gecko引擎一样优秀，但用户不买单。你UserAgent里没有“Gecko”字样，我就不给你经过优良排版的html。<br>结果，Konqueror思来想去，做了一个艰难但很萌的决定，把UserAgent写成<code>Mozilla/5.0 (compatible; Konqueror/3.2; FreeBSD) (KHTML, like Gecko)</code>…<br>这就是现代浏览器里like Gecko这一萌词的由来。</p><p>就这样，伟大的排版引擎KHTML为了获得更好的资源，师夷长技。这并没什么不好，却造成了UserAgent的越发混乱。<br>KHTML与Gecko这一对，永远卿卿我我比翼双飞在UserAgent里面了。那个满含深意的“like”，有人觉得翻译成“像”，但也有人觉得应该是“喜欢”…</p><blockquote><p>我觉得更有可能是<code>爱</code> ~~~~</p></blockquote><h2 id="七、世界大战"><a href="#七、世界大战" class="headerlink" title="七、世界大战"></a>七、世界大战</h2><p>首先是IE冷静下来了，他觉得，你们不带这么玩的？<br>就我年少时不懂事，首先改了个Mozilla字样，后面追究这历史我岂不是成了罪魁祸首？我改还不行吗？<br>在IE6，它明确自己<code>UserAgent为Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0)</code>。除去已经注定不可抹去的“Mozilla”字样，其余信息简洁，准确，清晰。</p><p>微软脑子是转过来了,但事态已经不可收拾。</p><p>Opera给这狂躁的世界添了一把火。它觉得，易容术非常炫酷呀。Opera直接在菜单提供了三个UA:</p><ul><li><code>Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; en)Opera 9.51，</code></li><li><code>Mozilla/5.0 (Windows NT 6.0; U; en; rv:1.8.1) Gecko/20061208 Firefox/2.0.0 Opera 9.51，</code></li><li><code>Opera/9.51 (Windows NT 5.1; U; en)</code></li></ul><p>三个选择项。第一个是易容成IE，第二个是易容成火狐，第三个才是自己，选谁就是谁！</p><p>其实这并不是一件坏事。因为Opera是站在能够让用户通过选择，去获得更好的浏览体验的基础上的。你提供选择，或是不提供，混乱的UserAgent还是在这，不离，不弃。再者，这对网页的开发者有极大的好处，在某些情况，你不必同时打开几个不同的浏览器去调试。到目前，最新的Chrome浏览器更加炫酷，能够支持近40种不同的UserAgent，甚至你还可以自定义。当然这是后话。</p><blockquote><p>这里又要打断一下啦.<br>Opera自带了<code>普通节约</code>和<code>超级节约</code>两个功能.前者用的是<code>Mozilla/1.0 (Win3.1)</code>,<code>Nexus</code>的<code>UA</code><br>后者一度导致<code>JS</code>和图片无法加载,而前者也有缺陷,阻止(其实是识别不了)了<code>SSL1.1</code>以上的安全连接</p></blockquote><p>与此同时，苹果公司依靠内核WebKit，开发出Safari，命名UserAgent为<code>Mozilla/5.0 (Macintosh; U; PPC Mac OS X; de-de) AppleWebKit/85.7 (KHTML, like Gecko) Safari/85.5</code>。</p><p>有人就会问了，不是Webkit内核吗，怎么还有KHTML, like Gecko？注意，内核Webkit包含了一个排版引擎叫WebCore，而WebCore是KHTML衍生而来的。也就是说，WebCore是KHTML的儿子，子承父业，基因差不多。为了能够正常排版，safari只能这么写。</p><p>后来，google也开发了自己的浏览器Chrome，其内核也是Webkit，但它设定UserAgent为<code>Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/525.13 (KHTML, like Gecko) Chrome/0.2.149.27 Safari/525.13</code>。Safari一看，不对劲啊！你怎么也在后面写有Safari？Chrome呵呵一笑，你懂的。</p><p>因此，请让我一口气说完下面这一段：<br>Chrome希望能得到为Safari编写的网页，于是决定装成Safari，Safari使用了WebKit渲染引擎，而WebKit呢又伪装自己是KHTML，KHTML呢又是伪装成Gecko的。同时所有的浏览器又都宣称自己是Mozilla。</p><p>这就是整个UserAgent世界大战的格局…</p><h2 id="八、军阀混战"><a href="#八、军阀混战" class="headerlink" title="八、军阀混战"></a>八、军阀混战</h2><p><img src="https://img.cyfan.top/pic/3Q.jpg" srcset="/img/loading.gif" alt="UA" title="军阀混战"></p><p>将目光聚焦到国内，更是狼烟四起，混乱不堪。大家都知道，浏览器是互联网的入口，这块肥肉谁也不想丢。因而一个接一个的“国产”浏览器进入斗兽场。<br>360，百度，QQ，UC，搜狗，猎豹，遨游，世界之窗…你能说出一大堆。连淘宝，酷狗，hao123都有浏览器，不信你搜。<br>注意我前面“国产”两个字必须加上双引号，因为这个<code>made in china</code>并不纯。国人并没能像远古大神一样，硬生生发明一个内核出来，我们更擅长“微创新”。</p><p>利用Trident（IE的内核），包装一下皮肤，美化一下，就可以说：完美兼容<br>利用Webkit，包装一下皮肤，美化一下，就可以说：极速浏览<br>把两个内核都包起来，就可以说：智能双核</p><p>是微创新！读书人的事，能叫偷吗？</p><p>在这插播一下，浏览器的“双核”，并不是你听说手机双核电脑双核那回事。再多个核，速度也不会更快，当然这么说，会显得很厉害的样子。德艺双馨，智勇双全，名利双收，才貌双绝，夫妻双双把家还，你看带“双”字的词都很牛的。</p><blockquote><p>而且更慢了,你想想,同时开启两个浏览器,其中一个用不到,只用另一个,能不慢吗?</p></blockquote><p>但我上面的叙述，的确有夸张的成分。浏览器的诞生，肯定不仅仅是包一下皮肤那么简单，国内的工程师们，也苦心研究做了许多工作。如果要说优化策略，我可以再写一篇超级长的文章。优化无止境，路漫漫其修远，向同行们致敬。只是我非常讨厌那些不把事实说清楚，纯粹靠文案去忽悠人的产品…</p><p>话说回来，这么多国产浏览器，总得靠不同UserAgent标志自己呀。<br>大家自动分为两个阵营：使用Trident内核的，在IE已有UserAgent后添加自己的名称；使用Webkit内核的，就在Chrome的UserAgent后面添加。</p><p>前者像QQ浏览器：<code>Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; QQBrowser/7.7.26717.400)</code>。<br>后者像猎豹：<code>Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/34.0.1847.137 Safari/537.36 LBBROWSER</code>。<br>当然双核浏览器诚然就是墙头草，切换内核时UserAgent也需要跟着变化。</p><p>如此的混战格局，这厢的IE和Chome想必也是醉了。</p><h2 id="九、3Q内战"><a href="#九、3Q内战" class="headerlink" title="九、3Q内战"></a>九、3Q内战</h2><blockquote><p>我承认,3Q大战不是发生在我们的时代.所以,我连笔记都做不了…..</p></blockquote><p>适者生存是不变的生存法则，国产浏览器们经过一段时间的用户筛选，自然优胜劣汰。时值2010年，真正还在运营和更新的浏览器数量慢慢下降，用户集中在几家表现更优异的厂商手中。就在这时，好看的故事来了——3Q大战爆发。</p><p>有人说，腾讯电脑管家的推出是导火索。其实这场仗，大家都忍了好久，推不推出，都一定会在某个事件后爆发。360浏览器是奇虎的重量级产品，用户量众多，2009年它推出一个功能：过滤其它网站的广告。诚然民众们都很喜欢。可是其他互联网公司肯定就不乐意了，用户看不到更点击不到广告，这钱还怎么赚？</p><p>因而在3Q大战爆发后，腾讯的一个手段就是：如果你使用360浏览器，就不能访问QQ的网站（单单QQ空间就有巨大的用户量），也直接反攻360的最大收入来源。一个艰难的决定背后，往往是需要无数种的技术战略支撑的。企鹅判断用户是否使用360浏览器，依靠的就是UserAgent里是否有“360SE”的字样。</p><p>战报传来：号外，360浏览器上不了QQ空间！已经买了黄钻的杀马特贵族急了呀！只能换浏览器了呀！感覺侢乜卟哙噯嘞呀！<br>2011年11月3日，腾讯网站封杀360浏览器<br>2011年11月4日，360浏览器访问量仅为昨日一半<br>2011年11月5日，360浏览器访问量几乎为0</p><p>有人说，腾讯就这么快赢了？恰恰相反，360浏览器通过一次强制的自动升级，又可以访问QQ的网站了。360的工程师们在5日使用了伪装术——把“360SE”字样从UserAgent中去掉！<br>意思就是，360浏览器的UserAgent跟IE完全一样，你根本判断不出来（因而访问量为0）。就怕流氓有文化！企鹅傻眼了，总不能把大微软的IE也一并给禁了吧…</p><p>这场土匪遇恶霸的耍流氓大战，最终通过法律而化解。企鹅在技术侧拿360没办法，而360则得到了一个跟IE一样的身份证。在这场内战中，受伤的除了广大网民们，其实还有令人心疼UserAgent君，以往让它越长越长就算了，这次长了还得阉割掉，真心dan疼呀。</p><h2 id="十、疯狂打脸-￣ε-￣"><a href="#十、疯狂打脸-￣ε-￣" class="headerlink" title="十、疯狂打脸(￣ε(#￣)"></a>十、疯狂打脸(￣ε(#￣)</h2><blockquote><p>原创，转载注明。</p></blockquote><p>上面说的国产浏览器还是诚实的，起码它们自己承认了是双核Chrome+IE。</p><p><img src="https://img.cyfan.top/pic/RC/RC.jpg" srcset="/img/loading.gif" alt="RC" title="RedCore"></p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=476114873&auto=0&height=66"></iframe>（自己配上音乐读下面的话更带劲）<p>很久很久以前，国产一片混乱，带来了IE又带来了FF。<br>市场一片危机，UA一片乱糟，红芯跳了出来，大声喊：<br>我要打破美国垄断，拥有中国首个自主创新智能的浏览器内核！！我是世界第五,也是唯一一颗,属于中国人自己的浏览器内核——红芯Redcore!我还是中国第一个,也是唯一个，获得国产飞腾芯片和银河麒麟国产操作系统兼容性认证的浏览器!</p><p>（关音乐吧）</p><p>一天后，有人查看了它的UA：怎么和Chrome这么相似呢?</p><p>再解压红芯浏览器时，赫然发现该浏览器exe里全都是Chrome里的东西，用的还是好几年前的CHrome49版本内核……</p><p>好吧,Chrome49只是为了兼容XP.</p><p>接着,彩蛋降临:</p><p>号外号外!红芯浏览器也可以再没网时跳恐龙!!!(Chrome内置菜单)</p><p>红芯一看，完了完了，暴露了，赶紧把<code>谣言</code>压下去啊!</p><p><img src="https://img.cyfan.top/pic/RC/NO.jpg" srcset="/img/loading.gif" alt="RC" title="红芯：我不是在作假！！！"></p><p>接着,就出现了种种闹剧:</p><blockquote><p>红芯浏览器一到应用商店，所有浏览器便都看着他笑，有的叫道，“红芯浏览器，你又偷chrome的内核了！”他不回答，对柜里说，“来两轮融资，2.5亿起步。”便排出浏览器的广告。<br>他们又故意的高声嚷道， “你一定又偷了人家的内核了！”红芯浏览器睁大眼睛说，“你怎么这样凭空污人清白……” “什么清白？我前天亲眼见你反复封装chrome浏览器的内核，被大家解包吊着打脸。”<br>红芯浏览器便涨红了icon，图标的青筋条条绽出，争辩道，“换内核不能算抄……半定制！……浏览器内核的事，能算抄么？”接连便是难懂的话，什么“中国首个自主内核”，什么“多个企业和部门都在使用”之类，引得众浏览器都哄笑起来：应用商店内外充满了快活的空气。</p></blockquote><p>更有工程师拆代码，在红芯浏览器的安装包中有两个浏览器插件可以看到源代码。不少互联网工程师通过阅读代码发现，红芯的代码存在过度注释、代码冗余、语言陈旧等问题。甚至还有工程师测试后发现，它在插件的保密性上存在虚假宣传。一位从事数据相关业务的工程师表示，红芯浏览器插件的源代码中存在大量的注释，显得注释过度，产品上线后大量注释都没有处理，另外其插件代码中，大量使用常量字符串，这使得之后可能的重构变得非常困难，以及不利于国际化等进一步开发。除了代码的被指显得不够专业，更值得注意的是，红芯浏览器插件在数据安全方面也值得商榷。一位程序员试验发现，红芯的密码管家插件中所存储的密码仅存储于本地并且没有加密，即用户可知道使用同一台计算机的其他人的密码。</p><p>结果就道歉了:</p><p><img src="https://img.cyfan.top/pic/RC/SORRY.jpg" srcset="/img/loading.gif" alt="RC" title="红芯：好吧好吧，我承认了！！"></p><h2 id="十一、明日边缘"><a href="#十一、明日边缘" class="headerlink" title="十一、明日边缘"></a>十一、明日边缘</h2><p>看到这里，大家会明白一个道理：如果未来不出现一款霸主级别的浏览器（或内核），UserAgent应该不会有大变化了。</p><p>不过，这道理并不全对。别忘了，移动侧也是有浏览器的。</p><p>在早期能上网的手机里，内置了各手机厂商自研的浏览器。这些浏览器并不需要像PC一样的复杂设计，可以访问wap网页就足够了。因而它们的UserAgent命名，怎么简单怎么来，就直接叫诺基亚 <code>3100 Nokia3100/06.01 (UCWEB 3.3B)，PHILIPS755 ObigoInternetBrowser/2.0</code> 这样，有甚者连浏览器叫什么都不带 TCL-3199，三星 E618 SEC-SGHE618。</p><p>这样任由发展下去，一种要历史重演，往日重现的即视感压迫而来。</p><p>web世界的联合国——W3C组织，站在明日边缘，面对着历史和未来，终于发话，它制定UserAgent标准，以后都得按这规范去起名字。详细请阅User Agent Accessibility Guidelines。至此，命运坎坷的UserAgent终于逐步走向规范。W3C大法好，有人说你怎么不早点来拯救世界呀！其实W3C一直在努力，但规范的制定，到推广至大家认可并执行，是一条漫长的道路，需要时间，也需要实践。</p><p>W3C组织，在制定web标准这件工作之外，再我看来，还有两个身份：1、和事佬；2、背黑锅。和事不成，就得背黑锅。是的就是这样。</p><h3 id="彩蛋"><a href="#彩蛋" class="headerlink" title="彩蛋"></a>彩蛋</h3><p>那么，我们的故事接近尾声。还有一些有趣的小彩蛋。</p><ol><li>Chome 28开始，与苹果正式分道扬镳，采用Blink内核，但它的UserAgent并不改变。</li><li>淘宝封杀微信打开淘宝页面，靠的就是微信内置浏览器UserAgent里的MicroMessenger字样。其实微信也可以像当初360一样把UserAgent去掉，但微信并不这样做。</li><li>360出招之时留有后招。也许，它一开始就想到了腾讯会告他们对于UserAgent的欺瞒，因而它其实提供了设置项。默认设置是“保持跟IE一样的UserAgent”，但用户也可以不勾选。只是这选项比较隐蔽，而且你重启浏览器后…又会变回默认设置。如果没有这个小小的设置，结果大家可以自行想象。</li><li>微软又玩新花样了，在泄露版IE 11中，去掉了以往的MSIE字样。初步猜测此举是为了使现有的 CSS hack 失效，避免过去网页设计师对IE差别对待的情况再度发生。但又会引发其他问题啊亲。</li><li>在红芯浏览器被打脸前,红芯联合创始人高婧对外宣传时毕业于，美国哈佛大学&amp;香港科技大学。而红芯浏览器打脸后之后，高婧的介绍改为了毕业于香港科技大学，而哈佛大学则被移至介绍的下方小字中，并标注为（交流学生）。至于红芯CEO陈本峰早年间，在媒体采访中自称自己是科大讯飞的创世团队成员，也遭到了科大讯飞董事长刘庆峰的当场打脸：“与事实不符，就是在科大讯飞实验室的一个实习学生”。</li></ol><hr>]]></content>
    
    
    <categories>
      
      <category>有故事</category>
      
    </categories>
    
    
    <tags>
      
      <tag>User-Agent</tag>
      
      <tag>历史</tag>
      
      <tag>浏览器</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每日bing美图获取</title>
    <link href="/2019/08/08/%E6%AF%8F%E6%97%A5bing%E7%BE%8E%E5%9B%BE%E8%8E%B7%E5%8F%96/"/>
    <url>/2019/08/08/%E6%AF%8F%E6%97%A5bing%E7%BE%8E%E5%9B%BE%E8%8E%B7%E5%8F%96/</url>
    
    <content type="html"><![CDATA[<h1 id="前言（废话）："><a href="#前言（废话）：" class="headerlink" title="前言（废话）："></a>前言（废话）：</h1><p>(<em>Φ皿Φ</em>)百忙之中抽出来更一更。<br>关于Bing美图获取，早就有想法了，来源于<a href="http://tool.liumingye.cn/bingimg/" target="_blank" rel="noopener">刘明野大佬的工具箱</a><br>然而该方式有个特点,获取到的图片会以301方式跳到bing图床上.<br>本来也没有什么问题,我写了一个C++开机自动下载bing图片,可是当我使用wget(on Windows10)时工具,给我来了这么一出:</p><div class="hljs"><pre><code class="hljs undefined">--<span class="hljs-number">13</span>:<span class="hljs-number">12</span>:<span class="hljs-number">33</span>--  http:<span class="hljs-comment">//tool.liumingye.cn/bingimg/img.php</span>           =&gt; `img.php'Resolving tool.liumingye.cn... 47.52.74.81Connecting to tool.liumingye.cn|47.52.74.81|:80... connected.HTTP request sent, awaiting response... 302 FoundLocation: https://www.bing.com/th?id=OHR.NubbleLight_EN-US<span class="hljs-number">4307721919</span>_<span class="hljs-number">1920</span>x<span class="hljs-number">1080</span>.jpg&amp;rf=LaDigue_<span class="hljs-number">1920</span>x<span class="hljs-number">1080</span>.jpg&amp;pid=hp [following]https://www.bing.com/th?id=OHR.NubbleLight_EN-US<span class="hljs-number">4307721919</span>_<span class="hljs-number">1920</span>x<span class="hljs-number">1080</span>.jpg&amp;rf=LaDigue_<span class="hljs-number">1920</span>x<span class="hljs-number">1080</span>.jpg&amp;pid=hp: Unsupported scheme.</code></pre></div><p>注意一下,刘明野的bing是跳向了https的bing文件,<br>而原生wget是不支持https的!<br>这就有点尴尬了。<br>于是我把方向集中到wget下载https中：<br>rpm安装：</p><div class="hljs"><pre><code class="hljs undefined">curl http:<span class="hljs-comment">//www.stargard.ca/aix/RPMS/wget-1.12-1ssl.aix6.1.ppc.rpm &gt; wget-1.12-1ssl.aix6.1.ppc.rpm</span>rpm -e wgetrpm -ivh wget-<span class="hljs-number">1.12</span>-<span class="hljs-number">1s</span>sl<span class="hljs-selector-class">.aix6</span>.<span class="hljs-number">1</span><span class="hljs-selector-class">.ppc</span><span class="hljs-selector-class">.rpm</span></code></pre></div><p>可这语言是liunx的啊!!!!!!</p><p><code>砸桌子ing|(*x*)|~</code></p><h1 id="自己解决"><a href="#自己解决" class="headerlink" title="自己解决!"></a>自己解决!</h1><p>然后我就在想,可不可以自己写一个php不跳转呢??<br>点击刘明野的工具箱下的<kdb>源码</kdb>,进入了他的博客,里面有源码:</p><div class="hljs"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-comment">/*    * <span class="hljs-doctag">@author</span> www.liumingye.cn*/</span>$filename = <span class="hljs-string">"./cache.json"</span>;<span class="hljs-keyword">if</span> (file_exists($filename) === <span class="hljs-keyword">false</span>) &#123;    file_put_contents($filename, <span class="hljs-string">""</span>);&#125;$handle = fopen($filename, <span class="hljs-string">"r"</span>);$contents = fread($handle, filesize($filename));fclose($handle);$contents = json_decode($contents, <span class="hljs-keyword">true</span>);<span class="hljs-keyword">if</span> (filesize($filename) === <span class="hljs-number">0</span>) &#123;    <span class="hljs-comment">// echo "获取\r\n";</span>    getBingImg();&#125; <span class="hljs-keyword">else</span> &#123;    <span class="hljs-keyword">if</span> ($contents[<span class="hljs-string">'time'</span>] === date(<span class="hljs-string">"Ymd"</span>)) &#123;        <span class="hljs-comment">// echo "缓存\r\n";</span>        Header(<span class="hljs-string">"Location: "</span>.$contents[<span class="hljs-string">'url'</span>]);    &#125; <span class="hljs-keyword">else</span> &#123;        <span class="hljs-comment">// echo "过期\r\n";</span>        getBingImg();    &#125;&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getBingImg</span><span class="hljs-params">()</span> </span>&#123;    $str = file_get_contents(<span class="hljs-string">'http://cn.bing.com/HPImageArchive.aspx?idx=0&amp;n=1'</span>);    <span class="hljs-keyword">if</span> (preg_match(<span class="hljs-string">"/&lt;url&gt;(.+?)&lt;\/url&gt;/ies"</span>, $str, $matches)) &#123;        $imgurl = <span class="hljs-string">'https://cn.bing.com'</span> . $matches[<span class="hljs-number">1</span>];    &#125;    <span class="hljs-keyword">if</span> ($imgurl) &#123;        <span class="hljs-keyword">global</span> $contents;        <span class="hljs-keyword">if</span>($contents[<span class="hljs-string">'url'</span>] !== $imgurl)&#123;            <span class="hljs-keyword">global</span> $filename;            $data = <span class="hljs-keyword">array</span>(                <span class="hljs-string">"time"</span> =&gt; date(<span class="hljs-string">"Ymd"</span>) ,                <span class="hljs-string">"url"</span> =&gt; $imgurl            );            $data = json_encode($data);            file_put_contents($filename, $data);        &#125;        Header(<span class="hljs-string">"Location: "</span>.$imgurl);        <span class="hljs-keyword">exit</span>();    &#125; <span class="hljs-keyword">else</span> &#123;        <span class="hljs-keyword">exit</span>(<span class="hljs-string">'error'</span>);    &#125;&#125;</code></pre></div><p>可见原理是先缓存json到本地,接着读取源地址.<br>接着我注意到了第27行:</p><div class="hljs"><pre><code class="hljs php">$str = file_get_contents(<span class="hljs-string">'http://cn.bing.com/HPImageArchive.aspx?idx=0&amp;n=1'</span>);</code></pre></div><p>可见其<code>http://cn.bing.com/HPImageArchive.aspx?idx=0&amp;n=1</code>就是原址!<br>直接打开,得到一堆<code>xml</code>:</p><div class="hljs"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">images</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">image</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">startdate</span>&gt;</span>20190807<span class="hljs-tag">&lt;/<span class="hljs-name">startdate</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">fullstartdate</span>&gt;</span>201908070900<span class="hljs-tag">&lt;/<span class="hljs-name">fullstartdate</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">enddate</span>&gt;</span>20190808<span class="hljs-tag">&lt;/<span class="hljs-name">enddate</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>/th?id=OHR.LinyantiLeopard_ZH-CN9934758728_1920x1080.jpg&amp;rf=LaDigue_1920x1080.jpg&amp;pid=hp<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">urlBase</span>&gt;</span>/th?id=OHR.LinyantiLeopard_ZH-CN9934758728<span class="hljs-tag">&lt;/<span class="hljs-name">urlBase</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">copyright</span>&gt;</span>利尼扬蒂野生动物保护区中的一只雄性豹子，博茨瓦纳 (© Karine Aigner/Tandem Stills + Motion)<span class="hljs-tag">&lt;/<span class="hljs-name">copyright</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">copyrightlink</span>&gt;</span>https://www.bing.com/search?q=%E8%B1%B9%E5%AD%90&amp;form=hpcapt&amp;mkt=zh-cn<span class="hljs-tag">&lt;/<span class="hljs-name">copyrightlink</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">headline</span>/&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">drk</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">drk</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">top</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">top</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">bot</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">bot</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">hotspots</span>/&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">image</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">tooltips</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">loadMessage</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">message</span>&gt;</span>正在加载...<span class="hljs-tag">&lt;/<span class="hljs-name">message</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">loadMessage</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">previousImage</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">text</span>&gt;</span>上一个图像<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">previousImage</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">nextImage</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">text</span>&gt;</span>下一个图像<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">nextImage</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">play</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">text</span>&gt;</span>播放视频<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">play</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">pause</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">text</span>&gt;</span>暂停视频<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">pause</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">tooltips</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">images</span>&gt;</span></code></pre></div><p>很明显，第六行<code>url</code>下就是图片地址啦!<br>我试着修改了一下参数,<code>idx</code>是天数,最多缓存七日,<code>n</code>是张数,<code>n</code>为几就返回几张图片.<br>那就写一个php吧!</p><div class="hljs"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> $str=file_get_contents(<span class="hljs-string">'https://cn.bing.com/HPImageArchive.aspx?idx=0&amp;n=1'</span>);<span class="hljs-keyword">if</span> (preg_match(<span class="hljs-string">"/&lt;url&gt;(.+?)&lt;\/url&gt;/ies"</span>, $str, $matches)) &#123; $imgurl=<span class="hljs-string">'https://cn.bing.com'</span>.$matches[<span class="hljs-number">1</span>];&#125;<span class="hljs-keyword">if</span> ($imgurl) &#123; header(<span class="hljs-string">'Content-Type: image/JPEG'</span>); @ob_end_clean(); @readfile($imgurl); @flush(); @ob_flush(); <span class="hljs-keyword">exit</span>();&#125; <span class="hljs-keyword">else</span> &#123; <span class="hljs-keyword">exit</span>(<span class="hljs-string">'error'</span>);&#125;<span class="hljs-meta">?&gt;</span></code></pre></div><p>下面是返回的图片(每天都不一样):</p><p><img src="https://tools.cyfan.ga/bingpic/bing.php" srcset="/img/loading.gif" alt="bing" title="今日bing美图"></p><p>修改了一下Cloudflare,支持http直接访问.<br>接着用wget下载:</p><div class="hljs"><pre><code class="hljs undefined">--<span class="hljs-number">13</span>:<span class="hljs-number">38</span>:<span class="hljs-number">17</span>--  http://tools.cyfan.ga/bingpic/bing.php           =&gt; `bing.php.<span class="hljs-number">1</span>'Resolving tools.cyfan.ga... <span class="hljs-number">104.28.17.222</span>, <span class="hljs-number">104.28.16.222</span>Connecting to tools.cyfan.ga|<span class="hljs-number">104.28.17.222</span>|:<span class="hljs-number">80</span>... connected.HTTP request sent, awaiting response... <span class="hljs-number">200</span> OKLength: unspecified <span class="hljs-string">[image/JPEG]</span>    <span class="hljs-string">[        &lt;=&gt;                                                                     ]</span> <span class="hljs-number">343</span>,<span class="hljs-number">869</span>     <span class="hljs-number">76</span>.5K/s</code></pre></div><p>下载中…<br>等一下后：</p><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-params">--13</span><span class="hljs-function">:38</span><span class="hljs-function">:17--</span>  http:<span class="hljs-string">//tools.cyfan.ga/bingpic/bing.php</span>           =&gt; `bing.php.1'Resolving tools.cyfan.ga.<span class="hljs-string">..</span> 104.28.17.222, 104.28.16.222Connecting to tools.cyfan.ga|104.28.17.222|<span class="hljs-function">:80...</span> connected.HTTP request sent, awaiting response.<span class="hljs-string">..</span> 200 OKLength: unspecified [image/JPEG]    [       &lt;=&gt;                                                                      ] 343,869      176K/s   in 1.9s13<span class="hljs-function">:38</span><span class="hljs-function">:20</span> <span class="hljs-params">(176 KB/s)</span> - `bing.php.1' saved [343869]<span class="hljs-params">--13</span><span class="hljs-function">:38</span><span class="hljs-function">:20--</span>  http:<span class="hljs-string">//1.jpg/</span>           =&gt; `index.html'Resolving 1.jpg.<span class="hljs-string">..</span> failed: Unknown host.FINISHED <span class="hljs-params">--13</span><span class="hljs-function">:38</span><span class="hljs-function">:20--</span>Downloaded: 1 files, 336K in 1.9s <span class="hljs-params">(176 KB/s)</span></code></pre></div><p>(〃￣︶￣)人(￣︶￣〃)搞定啦!<br>更多请前往<a href="https://tools.cyfan.ga/bingpic/" target="_blank" rel="noopener">我的工具页</a>了解更多!</p><h1 id="危机来袭"><a href="#危机来袭" class="headerlink" title="危机来袭:"></a>危机来袭:</h1><p>兴奋之余，我上了一下<a href="bing主页">https://bing.com</a>,结果一盆凉水泼下来:图片不一样!<br>????????<br>上了一下刘明野的工具箱,也是同样的问题!<br>懵逼ing……<br>不对啊,我用梯子上了一下Bing,结果返回又一样了!<br>emmmmmmmm.<br>查询一下IP:<br>我的tools是<code>美国 cloudflare公司cdn节点</code>，运行在<code>000webhost荷兰节点</code>,而刘明野的工具箱来自<code>香港特别行政区 阿里云</code><br>(话说回来为什么Cloudflare不把我的ip解析到香港节点呢?Cloudflare不是有香港节点吗???)<br>接着用梯子上了一下<code>http://bing.com/HPImageArchive.aspx?idx=0&amp;n=1</code>,得到:</p><div class="hljs"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">images</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">image</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">startdate</span>&gt;</span>20190807<span class="hljs-tag">&lt;/<span class="hljs-name">startdate</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">fullstartdate</span>&gt;</span>201908070000<span class="hljs-tag">&lt;/<span class="hljs-name">fullstartdate</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">enddate</span>&gt;</span>20190808<span class="hljs-tag">&lt;/<span class="hljs-name">enddate</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>/th?id=OHR.NubbleLight_ROW6148679105_1920x1080.jpg&amp;rf=LaDigue_1920x1080.jpg&amp;pid=hp<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">urlBase</span>&gt;</span>/th?id=OHR.NubbleLight_ROW6148679105<span class="hljs-tag">&lt;/<span class="hljs-name">urlBase</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">copyright</span>&gt;</span>Cape Neddick Light in York, Maine (© Haizhan Zheng/Getty Images)<span class="hljs-tag">&lt;/<span class="hljs-name">copyright</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">copyrightlink</span>&gt;</span>javascript:void(0)<span class="hljs-tag">&lt;/<span class="hljs-name">copyrightlink</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">headline</span>/&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">drk</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">drk</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">top</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">top</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">bot</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">bot</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">hotspots</span>/&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">image</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">tooltips</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">loadMessage</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">message</span>&gt;</span>正在加载...<span class="hljs-tag">&lt;/<span class="hljs-name">message</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">loadMessage</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">previousImage</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">text</span>&gt;</span>上一个图像<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">previousImage</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">nextImage</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">text</span>&gt;</span>下一个图像<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">nextImage</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">play</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">text</span>&gt;</span>播放视频<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">play</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">pause</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">text</span>&gt;</span>暂停视频<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">pause</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">tooltips</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">images</span>&gt;</span></code></pre></div><p><del>瞬间懂了,原来是国内外bing提供的图片不同,php获取到的图片也不一样.<br>可是,在国内找到稳定高速的php运行商又有多困难?<br>算了算了,国外就国外吧.╮(╯▽╰)╭<br>~</del><br>不对不对，后来查明原因了，原来是时差原因…</p><hr>]]></content>
    
    
    <categories>
      
      <category>爱学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PHP</tag>
      
      <tag>Bing</tag>
      
      <tag>美图</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Momentum：一款美化你Chrome新标签页的插件</title>
    <link href="/2019/08/05/Momentum%EF%BC%9A%E4%B8%80%E6%AC%BE%E7%BE%8E%E5%8C%96%E4%BD%A0Chrome%E6%96%B0%E6%A0%87%E7%AD%BE%E9%A1%B5%E7%9A%84%E6%8F%92%E4%BB%B6/"/>
    <url>/2019/08/05/Momentum%EF%BC%9A%E4%B8%80%E6%AC%BE%E7%BE%8E%E5%8C%96%E4%BD%A0Chrome%E6%96%B0%E6%A0%87%E7%AD%BE%E9%A1%B5%E7%9A%84%E6%8F%92%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<p>最近在折腾站点收录，有点忙，今天就过来水一片吧。</p><h1 id="Momentum-chrome插件概述"><a href="#Momentum-chrome插件概述" class="headerlink" title="Momentum chrome插件概述"></a>Momentum chrome插件概述</h1><p>Momentum插件是一款自动更换壁纸，自带时钟，任务日历和工作清单的chrome浏览器插件。官方的解释就是：替换你 Chrome 浏览器默认的“标签页”。里面的图片全部来自500PX里面的高清图，无广告，无弹窗，非常适合笔记本使用，让装逼再上新台阶。让我来感受下出自细节，触及心灵的美。</p><h1 id="Momentum-chrome插件功能介绍"><a href="#Momentum-chrome插件功能介绍" class="headerlink" title="Momentum chrome插件功能介绍"></a>Momentum chrome插件功能介绍</h1><p>我们知道Chrome 的新标签页默认会显示经常访问的网页，多数情况下会比导航网站靠谱，但是我们是不是会觉得新标签页由于多年没换过，偶尔换个新鲜养眼的也不错？Momentum插件就是能帮助我们解决这个问题的，能给老掉牙的 Chrome 新标签页换个样式，首先添加一个漂亮的风景照，右上角显示当前城市天气，右下角可添加待办事项 Todo 列表，正中间显示系统时间以及今天的主要目标，想切换回原标签页，点击左上角 Apps 即可</p><ul><li><input checked disabled type="checkbox"> 华丽的、赏心悦目的图片充满整个Tab页，忘掉Google默认的那个吧！</li><li><input checked disabled type="checkbox"> 轻度的任务管理：设置今天的目标，以及查看过往Todo list来巡视完成情况。</li><li><input checked disabled type="checkbox"> 时间、所在地天气、格言（英语谚语或来自某经典电影的台词…），合理的排布位置并没有让页面显得臃肿。</li><li><input checked disabled type="checkbox"> 当然，常用网址和Chrome应用列表页也保留了。（点击左上角“Apps”进入）</li></ul><p><img src="https://img.cyfan.top/pic/M.jpg" srcset="/img/loading.gif" alt="棒棒哒" title="↑每天都能换壁纸呢!!"></p><h1 id="Momentum-chrome插件下载"><a href="#Momentum-chrome插件下载" class="headerlink" title="Momentum chrome插件下载"></a>Momentum chrome插件下载</h1><p>在chrome应用商店搜索momentum插件，直接安装就可以.但无法直连,这里提供私有云链接:</p><a class="btn" href="https://pan.cyfan.top/%E6%8F%92%E4%BB%B6/crx/Momentum.7z" target="_blank" rel="noopener">              >>CYF的私有云             </a><hr>]]></content>
    
    
    <categories>
      
      <category>丆插件</category>
      
    </categories>
    
    
    <tags>
      
      <tag>插件</tag>
      
      <tag>标签页</tag>
      
      <tag>美化</tag>
      
      <tag>Chrome</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>移除000webhost右下角Powered by 000webhost字样</title>
    <link href="/2019/08/04/%E7%A7%BB%E9%99%A4000webhost%E5%8F%B3%E4%B8%8B%E8%A7%92Powered%20by%20000webhost%E5%AD%97%E6%A0%B7/"/>
    <url>/2019/08/04/%E7%A7%BB%E9%99%A4000webhost%E5%8F%B3%E4%B8%8B%E8%A7%92Powered%20by%20000webhost%E5%AD%97%E6%A0%B7/</url>
    
    <content type="html"><![CDATA[<h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><p>这几天都忙着部署私有云和工具页，忘记更新了，今天发一片干货。<br>由于资金周转困难（没钱），个人的私有云和在线工具全部部署在000webhost上，因为这是一个少有的免费php可视化部署云。<br>而且最最最好的是可以用CNAME绑定自定义域名,(heroku要信用卡验证)<br>当然了,由于<code>不可抗因素</code>,全程<code>爬城</code>,<br>结果在部署的时候发生了一件令我恶心的事。</p><h1 id="右下角广告："><a href="#右下角广告：" class="headerlink" title="右下角广告："></a>右下角广告：</h1><p><img src="https://img.cyfan.top/pic/000AD.jpg" srcset="/img/loading.gif" alt="广告" title="↑这是什么??????"></p><p>哇,这么一大块东西看的我恶心.<br>打广告也不能打的那么显眼吧?(((φ(◎ロ◎;)φ)))</p><h1 id="试图解决"><a href="#试图解决" class="headerlink" title="试图解决:"></a>试图解决:</h1><p>我登入三蛋空间后台,看看有没有可以去除广告选项:</p><p><img src="https://img.cyfan.top/pic/000ADE.jpg" srcset="/img/loading.gif" alt="广告不可抗" title="↑F**K,居然不给关"></p><p>可能大家不懂英语,google翻译一下:</p><p><img src="https://img.cyfan.top/pic/000ADC.jpg" srcset="/img/loading.gif" alt="广告不可抗" title="↑咳咳,怎么办?"></p><p>呵呵,居然威胁我升级高级版,我要是有钱还用得着说吗?</p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案:"></a>解决方案:</h1><p>后来查看了一下源代码,在<code>&lt;/html&gt;</code>前面狠狠的插上了这么一段代码:</p><div class="hljs"><pre><code class="hljs HTML"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"text-align: right;position: fixed;z-index:9999999;bottom: 0;width: auto;right: 1%;cursor: pointer;line-height: 0;display:block !important;"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Hosted on free web hosting 000webhost.com. Host your own website for FREE."</span> <span class="hljs-attr">target</span>=<span class="hljs-string">"_blank"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://www.000webhost.com/?utm_source=000webhostapp&amp;utm_campaign=000_logo&amp;utm_medium=website&amp;utm_content=footer_img"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://cdn.000webhost.com/000webhost/logo/footer-powered-by-000webhost-white2.png"</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">"www.000webhost.com"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getCookie</span>(<span class="hljs-params">e</span>)</span>&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> t=e+<span class="hljs-string">"="</span>,n=<span class="hljs-built_in">decodeURIComponent</span>(<span class="hljs-built_in">document</span>.cookie).split(<span class="hljs-string">";"</span>),o=<span class="hljs-number">0</span>;o&lt;n.length;o++)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=n[o];<span class="hljs-string">" "</span>==i.charAt(<span class="hljs-number">0</span>);)i=i.substring(<span class="hljs-number">1</span>);<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>==i.indexOf(t))<span class="hljs-keyword">return</span> i.substring(t.length,i.length)&#125;<span class="hljs-keyword">return</span><span class="hljs-string">""</span>&#125;getCookie(<span class="hljs-string">"hostinger"</span>)&amp;&amp;(<span class="hljs-built_in">document</span>.cookie=<span class="hljs-string">"hostinger=;expires=Thu, 01 Jan 1970 00:00:01 GMT;"</span>,location.reload());<span class="hljs-keyword">var</span> notification=<span class="hljs-built_in">document</span>.getElementsByClassName(<span class="hljs-string">"notice notice-success is-dismissible"</span>),hostingerLogo=<span class="hljs-built_in">document</span>.getElementsByClassName(<span class="hljs-string">"hlogo"</span>),mainContent=<span class="hljs-built_in">document</span>.getElementsByClassName(<span class="hljs-string">"notice_content"</span>)[<span class="hljs-number">0</span>],newList=[<span class="hljs-string">"Powerful and Easy-To-Use Control Panel."</span>,<span class="hljs-string">"1-Click Auto Installer and 24/7 Live Support."</span>,<span class="hljs-string">"Free Domain, Email and SSL Bundle."</span>,<span class="hljs-string">"5x faster WordPress performance"</span>,<span class="hljs-string">"Weekly Backups and Fast Response Time."</span>];<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>&lt;notification.length&amp;&amp;<span class="hljs-literal">null</span>!=mainContent)&#123;<span class="hljs-keyword">var</span> googleFont=<span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">"link"</span>);googleFontHref=<span class="hljs-built_in">document</span>.createAttribute(<span class="hljs-string">"href"</span>),googleFontRel=<span class="hljs-built_in">document</span>.createAttribute(<span class="hljs-string">"rel"</span>),googleFontHref.value=<span class="hljs-string">"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600"</span>,googleFontRel.value=<span class="hljs-string">"stylesheet"</span>,googleFont.setAttributeNode(googleFontHref),googleFont.setAttributeNode(googleFontRel);<span class="hljs-keyword">var</span> css=<span class="hljs-string">"@media only screen and (max-width: 768px) &#123;.web-hosting-90-off-image-wrapper &#123;position: absolute;&#125; .notice_content &#123;justify-content: center;&#125; .web-hosting-90-off-image &#123;opacity: 0.3;&#125;&#125; @media only screen and (min-width: 769px) &#123;.notice_content &#123;justify-content: space-between;&#125; .web-hosting-90-off-image-wrapper &#123;padding: 0 5%&#125;&#125; .content-wrapper &#123;z-index: 5&#125; .notice_content &#123;display: flex; align-items: center;&#125; * &#123;-webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale;&#125; .upgrade_button_red_sale&#123;border: 0; border-radius: 3px; background-color: #ff123a !important; padding: 15px 55px !important; margin-left: 30px; font-family: 'Open Sans', sans-serif; font-size: 16px; font-weight: 600; color: #ffffff;&#125; .upgrade_button_red_sale:hover&#123;color: #ffffff !important; background: #d10303 !important;&#125;"</span>,style=<span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">"style"</span>),sheet=<span class="hljs-built_in">window</span>.document.styleSheets[<span class="hljs-number">0</span>];style.styleSheet?style.styleSheet.cssText=css:style.appendChild(<span class="hljs-built_in">document</span>.createTextNode(css)),<span class="hljs-built_in">document</span>.getElementsByTagName(<span class="hljs-string">"head"</span>)[<span class="hljs-number">0</span>].appendChild(style),<span class="hljs-built_in">document</span>.getElementsByTagName(<span class="hljs-string">"head"</span>)[<span class="hljs-number">0</span>].appendChild(googleFont);<span class="hljs-keyword">var</span> button=<span class="hljs-built_in">document</span>.getElementsByClassName(<span class="hljs-string">"upgrade_button_red"</span>)[<span class="hljs-number">0</span>],link=button.parentElement;link.setAttribute(<span class="hljs-string">"href"</span>,<span class="hljs-string">"https://www.hostinger.com/special/000webhost?utm_source=000webhost&amp;utm_medium=panel&amp;utm_campaign=000-wp"</span>),link.innerHTML=<span class="hljs-string">'&lt;button class="upgrade_button_red_sale"&gt;TRANSFER NOW&lt;/button&gt;'</span>,(notification=notification[<span class="hljs-number">0</span>]).setAttribute(<span class="hljs-string">"style"</span>,<span class="hljs-string">"padding-bottom: 10px; padding-top: 5px; background-image: url(https://cdn.000webhost.com/000webhost/promotions/springsale/mountains-neon-background.jpg); background-color: #000000; background-size: cover; background-repeat: no-repeat; color: #ffffff; border-color: #ff123a; border-width: 8px;"</span>),notification.className=<span class="hljs-string">"notice notice-error is-dismissible"</span>,(hostingerLogo=hostingerLogo[<span class="hljs-number">0</span>]).setAttribute(<span class="hljs-string">"src"</span>,<span class="hljs-string">"https://cdn.000webhost.com/000webhost/promotions/springsale/logo-hostinger-white.svg"</span>),hostingerLogo.setAttribute(<span class="hljs-string">"style"</span>,<span class="hljs-string">"float: none !important; height: auto; max-width: 100%; margin: 40px 20px 10px 30px;"</span>);<span class="hljs-keyword">var</span> h1Tag=notification.getElementsByTagName(<span class="hljs-string">"H1"</span>)[<span class="hljs-number">0</span>];h1Tag.remove();<span class="hljs-keyword">var</span> paragraph=notification.getElementsByTagName(<span class="hljs-string">"p"</span>)[<span class="hljs-number">0</span>];paragraph.innerHTML=<span class="hljs-string">"Fast &amp; Secure Web Hosting. &lt;br&gt;Limited time offer: get an SSL certificate for FREE"</span>,paragraph.setAttribute(<span class="hljs-string">"style"</span>,<span class="hljs-string">'max-width: 600px; margin-left: 30px; font-family: "Open Sans", sans-serif; font-size: 22px; font-weight: 600;'</span>);<span class="hljs-keyword">var</span> list=notification.getElementsByTagName(<span class="hljs-string">"UL"</span>)[<span class="hljs-number">0</span>];list.setAttribute(<span class="hljs-string">"style"</span>,<span class="hljs-string">"max-width: 675px;"</span>);<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> listElements=list.getElementsByTagName(<span class="hljs-string">"LI"</span>),i=<span class="hljs-number">0</span>;i&lt;newList.length;i++)listElements[i].setAttribute(<span class="hljs-string">"style"</span>,<span class="hljs-string">"color:#ffffff; list-style-type: disc; margin-left: 30px; font-family: 'Open Sans', sans-serif; font-size: 14px; font-weight: 300; line-height: 1.5;"</span>),listElements[i].innerHTML=newList[i];listElements[listElements.length<span class="hljs-number">-1</span>].remove();<span class="hljs-keyword">var</span> org_html=mainContent.innerHTML,new_html=<span class="hljs-string">'&lt;div class="content-wrapper"&gt;'</span>+mainContent.innerHTML+<span class="hljs-string">'&lt;/div&gt;&lt;div class="web-hosting-90-off-image-wrapper"&gt;&lt;img class="web-hosting-90-off-image" src="https://cdn.000webhost.com/000webhost/promotions/springsale/web-hosting-90-off.png"&gt;&lt;/div&gt;'</span>;mainContent.innerHTML=new_html;<span class="hljs-keyword">var</span> saleImage=mainContent.getElementsByClassName(<span class="hljs-string">"web-hosting-90-off-image"</span>)[<span class="hljs-number">0</span>];!<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-keyword">var</span> t=<span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">"body.wp-admin"</span>)[<span class="hljs-number">0</span>];<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">e</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-keyword">var</span> e=<span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">"iframe"</span>);e.id=<span class="hljs-string">"hgr-promo-widget"</span>,e.setAttribute(<span class="hljs-string">"src"</span>,<span class="hljs-string">"https://www.hostinger.com/widgets/bottom-banner-sale/000_wp_admin"</span>),e.setAttribute(<span class="hljs-string">"allowfullscreen"</span>,!<span class="hljs-number">0</span>),e.setAttribute(<span class="hljs-string">"frameborder"</span>,<span class="hljs-number">0</span>),e.style.cssText=<span class="hljs-string">"z-index: 2147483000 !important;position: fixed !important;bottom: 0; width: 100%;!important; left: 0!important;"</span>,e.style.opacity=<span class="hljs-number">0</span>,e.onload=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;iFrameResize(&#123;&#125;,<span class="hljs-string">"#hgr-promo-widget"</span>),e.style.opacity=<span class="hljs-number">1</span>&#125;,t.insertAdjacentElement(<span class="hljs-string">"afterend"</span>,e)&#125;<span class="hljs-keyword">if</span>(<span class="hljs-built_in">window</span>.iFrameResize)e();<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">var</span> n=<span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">"script"</span>);n.type=<span class="hljs-string">"text/javascript"</span>,t.insertAdjacentElement(<span class="hljs-string">"afterend"</span>,n),n.onload=e,n.src=<span class="hljs-string">"https://unpkg.com/iframe-resizer@3.6.3/js/iframeResizer.min.js"</span>&#125;&#125;()&#125;</span></code></pre></div><p>这个真的恨,硬生生插在<code>&lt;/html&gt;</code>标签前.<br>注意一下,这说明广告代码被插了进去,而不是添加在后面.<br>后来细思熟虑了一下,干脆在不要最后的<code>&lt;/html&gt;</code>了,直接把它们全部变成注释得了.<br>在<code>&lt;/html&gt;</code>前直接填上<code>&lt;!--</code>,把广告代码变成了注释.<br>(￢︿̫̿￢☆),干脆把你变成注释算了!<br>修复结果: <a href="http://pan.cyfan.top" target="_blank" rel="noopener">http://pan.cyfan.top</a><br>搞定!</p><hr>]]></content>
    
    
    <categories>
      
      <category>好方法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>奇淫巧技</tag>
      
      <tag>广告</tag>
      
      <tag>000webhost</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Adobe2019年Windows全家桶</title>
    <link href="/2019/08/01/Adobe2019%E5%B9%B4Windows%E5%85%A8%E5%AE%B6%E6%A1%B6/"/>
    <url>/2019/08/01/Adobe2019%E5%B9%B4Windows%E5%85%A8%E5%AE%B6%E6%A1%B6/</url>
    
    <content type="html"><![CDATA[<h1 id="警告："><a href="#警告：" class="headerlink" title="警告："></a>警告：</h1><p>文件过大，故放在百度网盘上。<br>先贴链接：</p><a class="btn" href="https://pan.baidu.com/s/1YUwQCaov_fPEmbHi7BH0lQ" target="_blank" rel="noopener">              >>百度网盘 提取码: rxx1            </a>这可是百年难见的好东西啊！<p><img src="https://img.cyfan.top/pic/ADOBE.png" srcset="/img/loading.gif" alt="旗舰店上的价格" title="旗舰店上的价格"></p><h1 id="什么是Adobe-CC"><a href="#什么是Adobe-CC" class="headerlink" title="什么是Adobe CC?"></a>什么是Adobe CC?</h1><p>adobe是Photoshop的原始软件名称，CC即为：Creative Cloud ，也就是创意云。<br>所有Adobe创意相关的服务和软件工具都是通过CC服务体系交付给设计师、客户和开发者。CC不仅能够提供Adobe旗下所有的创意软件，还具有一定大小的云存储服务，所有软件工具的升级、下载和安装均能够在CC内的Adobe Application manager内完成。Creative Cloud 集成了用户创作作品所需要的所有元素，能够带给用户最棒、最新的 Adobe 创意工具和服务，Creative Cloud 将用户需要的所有元素集中整合到一个平台，简化了整个创意过程，为用户的使用带来便利。</p><h1 id="我有这些有什么用"><a href="#我有这些有什么用" class="headerlink" title="我有这些有什么用?"></a>我有这些有什么用?</h1><p>…….<br>此处不做回答</p><hr>]]></content>
    
    
    <categories>
      
      <category>繡软件</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Adobe</tag>
      
      <tag>全家桶</tag>
      
      <tag>年度</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何在中国以免【爬城】的体位下使用Google的reCAPTCHA</title>
    <link href="/2019/07/29/%E5%A6%82%E4%BD%95%E5%9C%A8%E4%B8%AD%E5%9B%BD%E4%BB%A5%E5%85%8D%E3%80%90%E7%88%AC%E5%9F%8E%E3%80%91%E7%9A%84%E4%BD%93%E4%BD%8D%E4%B8%8B%E4%BD%BF%E7%94%A8Google%E7%9A%84reCAPTCHA/"/>
    <url>/2019/07/29/%E5%A6%82%E4%BD%95%E5%9C%A8%E4%B8%AD%E5%9B%BD%E4%BB%A5%E5%85%8D%E3%80%90%E7%88%AC%E5%9F%8E%E3%80%91%E7%9A%84%E4%BD%93%E4%BD%8D%E4%B8%8B%E4%BD%BF%E7%94%A8Google%E7%9A%84reCAPTCHA/</url>
    
    <content type="html"><![CDATA[<h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><p>在中国，每每用到<a href="https://www.clipconverter.cc" target="_blank" rel="noopener">clipconverter</a>时下载youtube上的视频,reCAPTCHA一直没有加载出来.<br>后来意识到Google的人机验证好像在中国<strong>不能用</strong>.<br>……<br>这是就进入<code>前有狼后又虎的尴尬状态了</code>,,ԾㅂԾ,,.<br>不代理,人机验证加载不出来,挂代理,50Mbps的代理速度估计是要把我活生生等死.</p><h2 id="为什么在中国不能用"><a href="#为什么在中国不能用" class="headerlink" title="为什么在中国不能用??????"></a>为什么在中国不能用??????</h2><p>自2014年5月27日后，Google 公司的各项服务遭到疑似来自<code>不可告人的秘密</code>的<del>善</del>意干扰，导致中国大陆地区的用户无法正常使用其服务的事件。自当天起，来自中国大陆的用户发现 Google 旗下的各个分站以及 Google 的其他服务（Google 搜索、Google Play、Gmail 等）均无法正常访问与使用，所有 google.cn 以外的 Google 服务均受影响无法使用，用户甚至无法登陆 Google 账户。然而，不同于 2009 年至 2013 年仅针对敏感时期的行为规律，XX运动纪念日结束后攻击者对 Google 的<del>善意</del>打扰仍未停止。——维基百科<br>而 reCaptcha 人机验证就是 Google 的服务之一。所以，reCaptcha 也没能逃过这次封锁，才导致国内 reCaptcha 验证码无法显示。</p><blockquote><p><strong>现在打个岔</strong><br>本文图片较少,故接下来要强制添加图片:<br><img src="https://img.cyfan.top/pic/QZYT.png" srcset="/img/loading.gif" alt="强制有图" title="强制有图"><br>哈哈哈哈哈哈哈哈(●’◡’●)开玩笑.</p></blockquote><h2 id="reCaptcha有哪些-有什么用"><a href="#reCaptcha有哪些-有什么用" class="headerlink" title="reCaptcha有哪些,有什么用?"></a>reCaptcha有哪些,有什么用?</h2><p>reCaptcha有三个版本V1、V2、V3,通常现在使用的是v2.<br>这些往往在原网站上的去，铀用上recaptcha的网站，比如谷歌镜像之类的。</p><h1 id="试图解决"><a href="#试图解决" class="headerlink" title="试图解决:"></a>试图解决:</h1><h2 id="直接绕开"><a href="#直接绕开" class="headerlink" title="直接绕开:"></a>直接绕开:</h2><p>既然你不让我用,那我就不用了.(￢︿̫̿￢☆)<br>打开<code>开发者工具</code>找到js脚本,指向空白.<br>当然这样行不通了.</p><h2 id="ATP"><a href="#ATP" class="headerlink" title="ATP"></a>ATP</h2><p><del>就是<a href="https://baike.baidu.com/item/atp/10948513?fr=aladdin" target="_blank" rel="noopener">Ass-To-Pussy</a></del><br>w(ﾟДﾟ)w我在说什么????千万不要点链接啊啊啊!<br>呸呸呸,就是指在爬出去的情况下通过人机验证,再回来下载.<br>而这也很快被防盗链挡住了.<br>emmmmmmm……</p><h1 id="后来解决"><a href="#后来解决" class="headerlink" title="后来解决:"></a>后来解决:</h1><p>其实大家都没想到,reCaptcha在国内还是有镜像的.<br>网址是:<a href="http://recaptcha.net" target="_blank" rel="noopener">http://recaptcha.net</a>,很简单暴力的域名.<br>甚至连维基中文都认为镜像网址挂了。因为你直接打开,恭喜,你会收获这个</p><p><font size="92">Not Found</font><br><font size="67">Error 404</font></p><p>于是就孪生了两种方法:</p><h2 id="小白解法："><a href="#小白解法：" class="headerlink" title="小白解法："></a>小白解法：</h2><p>Tampermonkey脚本：(感谢原作者an_anthony的贡献！)</p><div class="hljs"><pre><code class="hljs Javascript"><span class="hljs-comment">// ==UserScript==</span><span class="hljs-comment">// @namespacexyz.tree0</span><span class="hljs-comment">// @namereCaptcha 验证码镜像加载</span><span class="hljs-comment">// @description替换使用官方地址的 reCaptcha 为官方镜像地址，让墙内用户的 reCaptch 能正常显示。</span><span class="hljs-comment">// @description似乎只能用于 reCaptcha v2</span><span class="hljs-comment">// @authoran_anthony</span><span class="hljs-comment">// @version0.1.2</span><span class="hljs-comment">// @grantnone</span><span class="hljs-comment">// @match             *://*/*</span><span class="hljs-comment">// ==/UserScript==</span><span class="hljs-keyword">var</span> scrArr = <span class="hljs-built_in">document</span>.getElementsByTagName(<span class="hljs-string">"script"</span>);<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> k = <span class="hljs-number">0</span>;k &lt; scrArr.length;++k)&#123;<span class="hljs-keyword">if</span>(scrArr[k].src !== <span class="hljs-literal">null</span> &amp;&amp; scrArr[k].src.indexOf(<span class="hljs-string">"https://www.google.com/recaptcha/api.js"</span>) != <span class="hljs-number">-1</span>)&#123;<span class="hljs-keyword">var</span> scrAppend = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">"script"</span>);    scrAppend.src = scrArr[k].src.replace(<span class="hljs-string">"google.com"</span>,<span class="hljs-string">"recaptcha.net"</span>);scrAppend.type = <span class="hljs-string">"text/javascript"</span>;    scrAppend.async = <span class="hljs-literal">true</span>;    scrArr[k].parentNode.appendChild(scrAppend);     scrArr[k].parentNode.removeChild(scrArr[k]);    alert(<span class="hljs-string">"已替换该页面的 reCaptcha 地址，如果还未显示出 reCaptcha Logo，请稍等(约30s)"</span>);<span class="hljs-keyword">break</span>;&#125;&#125;</code></pre></div><blockquote><p><strong>Attention！</strong><br>对那些使用了 Content-Security-Policy 属性的网站无效。Content-Security-Policy 属性会验证资源的地址，导致更换的镜像地址被阻止。如果你查看了 F12，会发现很多类似下面的错误信息：</p><blockquote><p>Refused to load the script ‘xxx’ because it violates the following Content Security Policy directive<br>解决方案:请使用大神解法：</p></blockquote></blockquote><h2 id="大神来此："><a href="#大神来此：" class="headerlink" title="大神来此："></a>大神来此：</h2><p>打开开发者工具，搜索<code>www.google.com/recaptcha/api.js</code><br><code>.com</code>之类的以情况而定.<br>接着把他替换成<code>https://recaptcha.net/recaptcha/api.js</code><br>等一会儿就好了.<br>其实这与js原理相同，但此种解法在CSP检测完成后进行，相当于绕开CSP。</p><p>完毕!</p><hr>]]></content>
    
    
    <categories>
      
      <category>好方法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>人机验证</tag>
      
      <tag>科学上网</tag>
      
      <tag>JavaScript</tag>
      
      <tag>Tampermonkey</tag>
      
      <tag>奇淫巧技</tag>
      
      <tag>Google</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【公告】关于宕机</title>
    <link href="/2019/07/28/%E3%80%90%E5%85%AC%E5%91%8A%E3%80%91%E5%85%B3%E4%BA%8E%E5%AE%95%E6%9C%BA/"/>
    <url>/2019/07/28/%E3%80%90%E5%85%AC%E5%91%8A%E3%80%91%E5%85%B3%E4%BA%8E%E5%AE%95%E6%9C%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="第二次-2019-08-13-17-30-xx-2019-08-13-17-39-xx"><a href="#第二次-2019-08-13-17-30-xx-2019-08-13-17-39-xx" class="headerlink" title="第二次:2019-08-13 17:30:xx - 2019-08-13 17:39:xx"></a>第二次:<code>2019-08-13 17:30:xx - 2019-08-13 17:39:xx</code></h1><p>又一次迷人的小宕机。<br>由于更换域名调试，我把<code>CNAME</code>到了Coding的原始界面,用的是<code>CloudFlare</code>给予的DNS.<br>因为腾讯云本生就自带了CDN,我也没用CF的CDN.<br>结果昨天香港线又宕机了.<br>emmmmm，于是添加了<a href="/2019/08/14/【公告】博客多域名/#more">多域名</a>。</p><h1 id="第一次-2019-07-27-14-10-xx-2019-07-28-12-50-03"><a href="#第一次-2019-07-27-14-10-xx-2019-07-28-12-50-03" class="headerlink" title="第一次:2019-07-27 14:10:xx - 2019-07-28 12:50:03"></a>第一次:<code>2019-07-27 14:10:xx - 2019-07-28 12:50:03</code></h1><p>突然间我的博客不能访问了,刚开始以为是出发了关键字<code>科学上网</code>,接过删了也没有用.<br>今天我ping了一下我的博客,结果:<br><img src="https://img.cyfan.top/pic/PINGBLOG.png" srcset="/img/loading.gif" alt="Ping" title="ping的结果"></p><p>好吧，估计是香港区IP抽风吧，那我只好更改<code>A</code>成新加坡了。<br>什么鬼？？？难不成<code>不可告人的秘密</code>又拦截了???<br>我也不清楚啊啊啊o((&gt;ω&lt; ))o</p>]]></content>
    
    
    <categories>
      
      <category>要公告</category>
      
    </categories>
    
    
    <tags>
      
      <tag>宕机</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Github无法注册：Unable to verify your captcha response</title>
    <link href="/2019/07/27/Github%E6%97%A0%E6%B3%95%E6%B3%A8%E5%86%8C%EF%BC%9AUnable-to-verify-your-captcha-response/"/>
    <url>/2019/07/27/Github%E6%97%A0%E6%B3%95%E6%B3%A8%E5%86%8C%EF%BC%9AUnable-to-verify-your-captcha-response/</url>
    
    <content type="html"><![CDATA[<h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><p>前几天就想注册一个Github账号，话说回来早就该注册了。<br>前面注册时也是正常的，结果在人机验证（Github Captcha）卡住了。<br>点击<kbd>Create an Account</kbd>,结果…</p><h1 id="注册时报错："><a href="#注册时报错：" class="headerlink" title="注册时报错："></a>注册时报错：</h1><div class="hljs"><pre><code class="hljs undefined">Unable to verify your captcha response. Please visit <span class="hljs-symbol">https:</span>/<span class="hljs-regexp">/help.github.com/articles</span><span class="hljs-regexp">/troubleshooting-connectivity-problems/</span><span class="hljs-comment">#troubleshooting-the-captcha</span><span class="hljs-keyword">for</span> troubleshooting information.</code></pre></div><p>一脸懵逼…<br>什么鬼,可是在按下之前人机验证不都是打钩了吗？U•ェ•*<br>???</p><h1 id="试图解决："><a href="#试图解决：" class="headerlink" title="试图解决："></a>试图解决：</h1><p>网上查了一下，也有很多类似的事，如<a href="https://blog.csdn.net/m0_37617778/article/details/83098985" target="_blank" rel="noopener">https://blog.csdn.net/m0_37617778/article/details/83098985</a><br>其中博主提出解决方案：</p><blockquote><p>使用IE就可以了.</p></blockquote><p>(/≧▽≦)/,笑死我了,连Chrome都做不到,怎么可能在IE中做到?<br>后来在评论中看到这样的话:</p><blockquote><p><strong>欧二lord：</strong><br>科学上网吧，我换了三个浏览器都不行，后来科学上网用chrome就可以了.</p></blockquote><p>科学上网么…<br>我挂上代理后再次进入,结果还是老样子:<br><img src="https://img.cyfan.top/pic/GITHUB_ERROR.jpg" srcset="/img/loading.gif" alt="老样子" title="还是老样子啊"></p><p>…</p><h1 id="最后解决"><a href="#最后解决" class="headerlink" title="最后解决:"></a>最后解决:</h1><p>然后我一直点着<kbd>Create an Account</kbd>,一直报错.大概点了5下后:<br><img src="https://img.cyfan.top/pic/GITHUB_CAPTCHA.jpg" srcset="/img/loading.gif" alt="新样子" title="=_=换了个样子"><br>终于报出真正的人机验证了!点进去,人机验证的方式是旋转小狗小牛到正确的位置.<br>人机验证完成,我就直接被跳到邮箱验证了.<br>^3^,终于解决了!</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结:"></a>总结:</h1><ol><li>浏览器:<ul><li><input checked disabled type="checkbox"> Chrome</li><li><input checked disabled type="checkbox"> Firefox</li><li><input checked disabled type="checkbox"> Chromium</li><li><input disabled type="checkbox"> IE</li></ul></li><li>网络状态<ul><li><input checked disabled type="checkbox"> 科学上网</li></ul></li><li>连续点击直到出现真正的人机验证<br>OK!</li></ol><hr>]]></content>
    
    
    <categories>
      
      <category>干问题</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Github</tag>
      
      <tag>错误</tag>
      
      <tag>人机验证</tag>
      
      <tag>科学上网</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JS特效：一个打字绚烂烟花的特效</title>
    <link href="/2019/07/25/JS%E7%89%B9%E6%95%88%EF%BC%9A%E4%B8%80%E4%B8%AA%E6%89%93%E5%AD%97%E7%BB%9A%E7%83%82%E7%83%9F%E8%8A%B1%E7%9A%84%E7%89%B9%E6%95%88/"/>
    <url>/2019/07/25/JS%E7%89%B9%E6%95%88%EF%BC%9A%E4%B8%80%E4%B8%AA%E6%89%93%E5%AD%97%E7%BB%9A%E7%83%82%E7%83%9F%E8%8A%B1%E7%9A%84%E7%89%B9%E6%95%88/</url>
    
    <content type="html"><![CDATA[<h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><blockquote><p><strong>转载警告</strong><br>该特效转载<a href="http://mlldxe.cn/archives/541" target="_blank" rel="noopener">http://mlldxe.cn/archives/541</a>,本来是仅仅支持wordpress的,但顺手被我抠出来放回javascript中了。(●’◡’●)好有成就感呢！</p></blockquote><blockquote><p><strong>绚烂警告</strong><br>该代码效果及其绚烂,注意安全!</p></blockquote><p>好吧好吧,乱解刨别人代码也是不对的.</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码:"></a>代码:</h1><h2 id="原生代码"><a href="#原生代码" class="headerlink" title="原生代码:"></a>原生代码:</h2><div class="hljs"><pre><code class="hljs Javascript"><span class="hljs-keyword">var</span> sw = <span class="hljs-built_in">window</span>.screen.width;<span class="hljs-keyword">if</span> (sw &gt; <span class="hljs-number">1200</span>) &#123;    (<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">webpackUniversalModuleDefinition</span>(<span class="hljs-params">root, factory</span>) </span>&#123;            <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> exports === <span class="hljs-string">'object'</span> &amp;&amp; <span class="hljs-keyword">typeof</span> <span class="hljs-built_in">module</span> === <span class="hljs-string">'object'</span>)                <span class="hljs-built_in">module</span>.exports = factory();            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> define === <span class="hljs-string">'function'</span> &amp;&amp; define.amd)                define([], factory);            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> exports === <span class="hljs-string">'object'</span>)                exports[<span class="hljs-string">"POWERMODE"</span>] = factory();            <span class="hljs-keyword">else</span>                root[<span class="hljs-string">"POWERMODE"</span>] = factory()        &#125;    )(<span class="hljs-keyword">this</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-keyword">return</span> (<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">modules</span>) </span>&#123;                <span class="hljs-keyword">var</span> installedModules = &#123;&#125;;                <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__webpack_require__</span>(<span class="hljs-params">moduleId</span>) </span>&#123;                    <span class="hljs-keyword">if</span> (installedModules[moduleId])                        <span class="hljs-keyword">return</span> installedModules[moduleId].exports;                    <span class="hljs-keyword">var</span> <span class="hljs-built_in">module</span> = installedModules[moduleId] = &#123;                        <span class="hljs-attr">exports</span>: &#123;&#125;,                        <span class="hljs-attr">id</span>: moduleId,                        <span class="hljs-attr">loaded</span>: <span class="hljs-literal">false</span>                    &#125;;                    modules[moduleId].call(<span class="hljs-built_in">module</span>.exports, <span class="hljs-built_in">module</span>, <span class="hljs-built_in">module</span>.exports, __webpack_require__);                    <span class="hljs-built_in">module</span>.loaded = <span class="hljs-literal">true</span>;                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">module</span>.exports                &#125;                __webpack_require__.m = modules;                __webpack_require__.c = installedModules;                __webpack_require__.p = <span class="hljs-string">""</span>;                <span class="hljs-keyword">return</span> __webpack_require__(<span class="hljs-number">0</span>)            &#125;        )([(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">module, exports, __webpack_require__</span>) </span>&#123;<span class="hljs-meta">                'use strict'</span>;                <span class="hljs-keyword">var</span> canvas = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">'canvas'</span>);                canvas.width = <span class="hljs-built_in">window</span>.innerWidth;                canvas.height = <span class="hljs-built_in">window</span>.innerHeight;                canvas.style.cssText = <span class="hljs-string">'position:fixed;top:0;left:0;pointer-events:none;z-index:999999'</span>;                <span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">'resize'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;                    canvas.width = <span class="hljs-built_in">window</span>.innerWidth;                    canvas.height = <span class="hljs-built_in">window</span>.innerHeight                &#125;);                <span class="hljs-built_in">document</span>.body.appendChild(canvas);                <span class="hljs-keyword">var</span> context = canvas.getContext(<span class="hljs-string">'2d'</span>);                <span class="hljs-keyword">var</span> particles = [];                <span class="hljs-keyword">var</span> particlePointer = <span class="hljs-number">0</span>;                <span class="hljs-keyword">var</span> rendering = <span class="hljs-literal">false</span>;                POWERMODE.shake = <span class="hljs-literal">true</span>;                <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getRandom</span>(<span class="hljs-params">min, max</span>) </span>&#123;                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.random() * (max - min) + min                &#125;                <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getColor</span>(<span class="hljs-params">el</span>) </span>&#123;                    <span class="hljs-keyword">if</span> (POWERMODE.colorful) &#123;                        <span class="hljs-keyword">var</span> u = getRandom(<span class="hljs-number">0</span>, <span class="hljs-number">360</span>);                        <span class="hljs-keyword">return</span> <span class="hljs-string">'hsla('</span> + getRandom(u - <span class="hljs-number">10</span>, u + <span class="hljs-number">10</span>) + <span class="hljs-string">', 100%, '</span> + getRandom(<span class="hljs-number">50</span>, <span class="hljs-number">80</span>) + <span class="hljs-string">'%, '</span> + <span class="hljs-number">1</span> + <span class="hljs-string">')'</span>                    &#125; <span class="hljs-keyword">else</span> &#123;                        <span class="hljs-keyword">return</span> <span class="hljs-built_in">window</span>.getComputedStyle(el).color                    &#125;                &#125;                <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getCaret</span>(<span class="hljs-params"></span>) </span>&#123;                    <span class="hljs-keyword">var</span> el = <span class="hljs-built_in">document</span>.activeElement;                    <span class="hljs-keyword">var</span> bcr;                    <span class="hljs-keyword">if</span> (el.tagName === <span class="hljs-string">'TEXTAREA'</span> || (el.tagName === <span class="hljs-string">'INPUT'</span> &amp;&amp; el.getAttribute(<span class="hljs-string">'type'</span>) === <span class="hljs-string">'text'</span>)) &#123;                        <span class="hljs-keyword">var</span> offset = __webpack_require__(<span class="hljs-number">1</span>)(el, el.selectionEnd);                        bcr = el.getBoundingClientRect();                        <span class="hljs-keyword">return</span> &#123;                            <span class="hljs-attr">x</span>: offset.left + bcr.left,                            <span class="hljs-attr">y</span>: offset.top + bcr.top,                            <span class="hljs-attr">color</span>: getColor(el)                        &#125;                    &#125;                    <span class="hljs-keyword">var</span> selection = <span class="hljs-built_in">window</span>.getSelection();                    <span class="hljs-keyword">if</span> (selection.rangeCount) &#123;                        <span class="hljs-keyword">var</span> range = selection.getRangeAt(<span class="hljs-number">0</span>);                        <span class="hljs-keyword">var</span> startNode = range.startContainer;                        <span class="hljs-keyword">if</span> (startNode.nodeType === <span class="hljs-built_in">document</span>.TEXT_NODE) &#123;                            startNode = startNode.parentNode                        &#125;                        bcr = range.getBoundingClientRect();                        <span class="hljs-keyword">return</span> &#123;                            <span class="hljs-attr">x</span>: bcr.left,                            <span class="hljs-attr">y</span>: bcr.top,                            <span class="hljs-attr">color</span>: getColor(startNode)                        &#125;                    &#125;                    <span class="hljs-keyword">return</span> &#123;                        <span class="hljs-attr">x</span>: <span class="hljs-number">0</span>,                        <span class="hljs-attr">y</span>: <span class="hljs-number">0</span>,                        <span class="hljs-attr">color</span>: <span class="hljs-string">'transparent'</span>                    &#125;                &#125;                <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createParticle</span>(<span class="hljs-params">x, y, color</span>) </span>&#123;                    <span class="hljs-keyword">return</span> &#123;                        <span class="hljs-attr">x</span>: x,                        <span class="hljs-attr">y</span>: y,                        <span class="hljs-attr">alpha</span>: <span class="hljs-number">1</span>,                        <span class="hljs-attr">color</span>: color,                        <span class="hljs-attr">velocity</span>: &#123;                            <span class="hljs-attr">x</span>: <span class="hljs-number">-1</span> + <span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">2</span>,                            <span class="hljs-attr">y</span>: <span class="hljs-number">-3.5</span> + <span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">2</span>                        &#125;                    &#125;                &#125;                <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">POWERMODE</span>(<span class="hljs-params"></span>) </span>&#123;                    &#123;                        <span class="hljs-keyword">var</span> caret = getCaret();                        <span class="hljs-keyword">var</span> numParticles = <span class="hljs-number">5</span> + <span class="hljs-built_in">Math</span>.round(<span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">10</span>);                        <span class="hljs-keyword">while</span> (numParticles--) &#123;                            particles[particlePointer] = createParticle(caret.x, caret.y, caret.color);                            particlePointer = (particlePointer + <span class="hljs-number">1</span>) % <span class="hljs-number">500</span>                        &#125;                    &#125;                    &#123;                        <span class="hljs-keyword">if</span> (POWERMODE.shake) &#123;                            <span class="hljs-keyword">var</span> intensity = <span class="hljs-number">1</span> + <span class="hljs-number">2</span> * <span class="hljs-built_in">Math</span>.random();                            <span class="hljs-keyword">var</span> x = intensity * (<span class="hljs-built_in">Math</span>.random() &gt; <span class="hljs-number">0.5</span> ? <span class="hljs-number">-1</span> : <span class="hljs-number">1</span>);                            <span class="hljs-keyword">var</span> y = intensity * (<span class="hljs-built_in">Math</span>.random() &gt; <span class="hljs-number">0.5</span> ? <span class="hljs-number">-1</span> : <span class="hljs-number">1</span>);                            <span class="hljs-built_in">document</span>.body.style.marginLeft = x + <span class="hljs-string">'px'</span>;                            <span class="hljs-built_in">document</span>.body.style.marginTop = y + <span class="hljs-string">'px'</span>;                            setTimeout(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;                                <span class="hljs-built_in">document</span>.body.style.marginLeft = <span class="hljs-string">''</span>;                                <span class="hljs-built_in">document</span>.body.style.marginTop = <span class="hljs-string">''</span>                            &#125;, <span class="hljs-number">75</span>)                        &#125;                    &#125;                    <span class="hljs-keyword">if</span> (!rendering) &#123;                        requestAnimationFrame(loop)                    &#125;                &#125;                ;POWERMODE.colorful = <span class="hljs-literal">false</span>;                <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">loop</span>(<span class="hljs-params"></span>) </span>&#123;                    rendering = <span class="hljs-literal">true</span>;                    context.clearRect(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, canvas.width, canvas.height);                    <span class="hljs-keyword">var</span> rendered = <span class="hljs-literal">false</span>;                    <span class="hljs-keyword">var</span> rect = canvas.getBoundingClientRect();                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; particles.length; ++i) &#123;                        <span class="hljs-keyword">var</span> particle = particles[i];                        <span class="hljs-keyword">if</span> (particle.alpha &lt;= <span class="hljs-number">0.1</span>)                            <span class="hljs-keyword">continue</span>;                        particle.velocity.y += <span class="hljs-number">0.075</span>;                        particle.x += particle.velocity.x;                        particle.y += particle.velocity.y;                        particle.alpha *= <span class="hljs-number">0.96</span>;                        context.globalAlpha = particle.alpha;                        context.fillStyle = particle.color;                        context.fillRect(<span class="hljs-built_in">Math</span>.round(particle.x - <span class="hljs-number">1.5</span>) - rect.left, <span class="hljs-built_in">Math</span>.round(particle.y - <span class="hljs-number">1.5</span>) - rect.top, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>);                        rendered = <span class="hljs-literal">true</span>                    &#125;                    <span class="hljs-keyword">if</span> (rendered) &#123;                        requestAnimationFrame(loop)                    &#125; <span class="hljs-keyword">else</span> &#123;                        rendering = <span class="hljs-literal">false</span>                    &#125;                &#125;                <span class="hljs-built_in">module</span>.exports = POWERMODE            &#125;        ), (<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">module, exports</span>) </span>&#123;                (<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;                    <span class="hljs-keyword">var</span> properties = [<span class="hljs-string">'direction'</span>, <span class="hljs-string">'boxSizing'</span>, <span class="hljs-string">'width'</span>, <span class="hljs-string">'height'</span>, <span class="hljs-string">'overflowX'</span>, <span class="hljs-string">'overflowY'</span>, <span class="hljs-string">'borderTopWidth'</span>, <span class="hljs-string">'borderRightWidth'</span>, <span class="hljs-string">'borderBottomWidth'</span>, <span class="hljs-string">'borderLeftWidth'</span>, <span class="hljs-string">'borderStyle'</span>, <span class="hljs-string">'paddingTop'</span>, <span class="hljs-string">'paddingRight'</span>, <span class="hljs-string">'paddingBottom'</span>, <span class="hljs-string">'paddingLeft'</span>, <span class="hljs-string">'fontStyle'</span>, <span class="hljs-string">'fontVariant'</span>, <span class="hljs-string">'fontWeight'</span>, <span class="hljs-string">'fontStretch'</span>, <span class="hljs-string">'fontSize'</span>, <span class="hljs-string">'fontSizeAdjust'</span>, <span class="hljs-string">'lineHeight'</span>, <span class="hljs-string">'fontFamily'</span>, <span class="hljs-string">'textAlign'</span>, <span class="hljs-string">'textTransform'</span>, <span class="hljs-string">'textIndent'</span>, <span class="hljs-string">'textDecoration'</span>, <span class="hljs-string">'letterSpacing'</span>, <span class="hljs-string">'wordSpacing'</span>, <span class="hljs-string">'tabSize'</span>, <span class="hljs-string">'MozTabSize'</span>];                    <span class="hljs-keyword">var</span> isFirefox = <span class="hljs-built_in">window</span>.mozInnerScreenX != <span class="hljs-literal">null</span>;                    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getCaretCoordinates</span>(<span class="hljs-params">element, position, options</span>) </span>&#123;                        <span class="hljs-keyword">var</span> debug = options &amp;&amp; options.debug || <span class="hljs-literal">false</span>;                        <span class="hljs-keyword">if</span> (debug) &#123;                            <span class="hljs-keyword">var</span> el = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">'#input-textarea-caret-position-mirror-div'</span>);                            <span class="hljs-keyword">if</span> (el) &#123;                                el.parentNode.removeChild(el)                            &#125;                        &#125;                        <span class="hljs-keyword">var</span> div = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">'div'</span>);                        div.id = <span class="hljs-string">'input-textarea-caret-position-mirror-div'</span>;                        <span class="hljs-built_in">document</span>.body.appendChild(div);                        <span class="hljs-keyword">var</span> style = div.style;                        <span class="hljs-keyword">var</span> computed = <span class="hljs-built_in">window</span>.getComputedStyle ? getComputedStyle(element) : element.currentStyle;                        style.whiteSpace = <span class="hljs-string">'pre-wrap'</span>;                        <span class="hljs-keyword">if</span> (element.nodeName !== <span class="hljs-string">'INPUT'</span>)                            style.wordWrap = <span class="hljs-string">'break-word'</span>;                        style.position = <span class="hljs-string">'absolute'</span>;                        <span class="hljs-keyword">if</span> (!debug)                            style.visibility = <span class="hljs-string">'hidden'</span>;                        properties.forEach(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">prop</span>) </span>&#123;                            style[prop] = computed[prop]                        &#125;);                        <span class="hljs-keyword">if</span> (isFirefox) &#123;                            <span class="hljs-keyword">if</span> (element.scrollHeight &gt; <span class="hljs-built_in">parseInt</span>(computed.height))                                style.overflowY = <span class="hljs-string">'scroll'</span>                        &#125; <span class="hljs-keyword">else</span> &#123;                            style.overflow = <span class="hljs-string">'hidden'</span>                        &#125;                        div.textContent = element.value.substring(<span class="hljs-number">0</span>, position);                        <span class="hljs-keyword">if</span> (element.nodeName === <span class="hljs-string">'INPUT'</span>)                            div.textContent = div.textContent.replace(<span class="hljs-regexp">/\s/g</span>, <span class="hljs-string">"\u00a0"</span>);                        <span class="hljs-keyword">var</span> span = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">'span'</span>);                        span.textContent = element.value.substring(position) || <span class="hljs-string">'.'</span>;                        div.appendChild(span);                        <span class="hljs-keyword">var</span> coordinates = &#123;                            <span class="hljs-attr">top</span>: span.offsetTop + <span class="hljs-built_in">parseInt</span>(computed[<span class="hljs-string">'borderTopWidth'</span>]),                            <span class="hljs-attr">left</span>: span.offsetLeft + <span class="hljs-built_in">parseInt</span>(computed[<span class="hljs-string">'borderLeftWidth'</span>])                        &#125;;                        <span class="hljs-keyword">if</span> (debug) &#123;                            span.style.backgroundColor = <span class="hljs-string">'#aaa'</span>                        &#125; <span class="hljs-keyword">else</span> &#123;                            <span class="hljs-built_in">document</span>.body.removeChild(div)                        &#125;                        <span class="hljs-keyword">return</span> coordinates                    &#125;                    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> <span class="hljs-built_in">module</span> != <span class="hljs-string">"undefined"</span> &amp;&amp; <span class="hljs-keyword">typeof</span> <span class="hljs-built_in">module</span>.exports != <span class="hljs-string">"undefined"</span>) &#123;                        <span class="hljs-built_in">module</span>.exports = getCaretCoordinates                    &#125; <span class="hljs-keyword">else</span> &#123;                        <span class="hljs-built_in">window</span>.getCaretCoordinates = getCaretCoordinates                    &#125;                &#125;())            &#125;        )])    &#125;)&#125;    <span class="hljs-keyword">var</span> sw=<span class="hljs-built_in">window</span>.screen.width;    <span class="hljs-keyword">if</span> (sw&gt;<span class="hljs-number">1200</span>) &#123;        POWERMODE.colorful=<span class="hljs-literal">true</span>;        POWERMODE.shake=<span class="hljs-literal">true</span>;        <span class="hljs-built_in">document</span>.body.addEventListener(<span class="hljs-string">'input'</span>,POWERMODE)    &#125;</code></pre></div><h2 id="Tampermonkey用户有福了"><a href="#Tampermonkey用户有福了" class="headerlink" title="Tampermonkey用户有福了!"></a>Tampermonkey用户有福了!</h2><div class="hljs"><pre><code class="hljs Javascript"><span class="hljs-comment">// ==UserScript==</span><span class="hljs-comment">// @name         打字敲击特效</span><span class="hljs-comment">// @namespace    /</span><span class="hljs-comment">// @version      0.1</span><span class="hljs-comment">// @description  ?</span><span class="hljs-comment">// @author       CYF</span><span class="hljs-comment">// @match        *://*/*</span><span class="hljs-comment">// @grant        none</span><span class="hljs-comment">// ==/UserScript==</span><span class="hljs-keyword">var</span> sw = <span class="hljs-built_in">window</span>.screen.width;<span class="hljs-keyword">if</span> (sw &gt; <span class="hljs-number">1200</span>) &#123;    (<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">webpackUniversalModuleDefinition</span>(<span class="hljs-params">root, factory</span>) </span>&#123;            <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> exports === <span class="hljs-string">'object'</span> &amp;&amp; <span class="hljs-keyword">typeof</span> <span class="hljs-built_in">module</span> === <span class="hljs-string">'object'</span>)                <span class="hljs-built_in">module</span>.exports = factory();            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> define === <span class="hljs-string">'function'</span> &amp;&amp; define.amd)                define([], factory);            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> exports === <span class="hljs-string">'object'</span>)                exports[<span class="hljs-string">"POWERMODE"</span>] = factory();            <span class="hljs-keyword">else</span>                root[<span class="hljs-string">"POWERMODE"</span>] = factory()        &#125;    )(<span class="hljs-keyword">this</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-keyword">return</span> (<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">modules</span>) </span>&#123;                <span class="hljs-keyword">var</span> installedModules = &#123;&#125;;                <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__webpack_require__</span>(<span class="hljs-params">moduleId</span>) </span>&#123;                    <span class="hljs-keyword">if</span> (installedModules[moduleId])                        <span class="hljs-keyword">return</span> installedModules[moduleId].exports;                    <span class="hljs-keyword">var</span> <span class="hljs-built_in">module</span> = installedModules[moduleId] = &#123;                        <span class="hljs-attr">exports</span>: &#123;&#125;,                        <span class="hljs-attr">id</span>: moduleId,                        <span class="hljs-attr">loaded</span>: <span class="hljs-literal">false</span>                    &#125;;                    modules[moduleId].call(<span class="hljs-built_in">module</span>.exports, <span class="hljs-built_in">module</span>, <span class="hljs-built_in">module</span>.exports, __webpack_require__);                    <span class="hljs-built_in">module</span>.loaded = <span class="hljs-literal">true</span>;                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">module</span>.exports                &#125;                __webpack_require__.m = modules;                __webpack_require__.c = installedModules;                __webpack_require__.p = <span class="hljs-string">""</span>;                <span class="hljs-keyword">return</span> __webpack_require__(<span class="hljs-number">0</span>)            &#125;        )([(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">module, exports, __webpack_require__</span>) </span>&#123;<span class="hljs-meta">                'use strict'</span>;                <span class="hljs-keyword">var</span> canvas = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">'canvas'</span>);                canvas.width = <span class="hljs-built_in">window</span>.innerWidth;                canvas.height = <span class="hljs-built_in">window</span>.innerHeight;                canvas.style.cssText = <span class="hljs-string">'position:fixed;top:0;left:0;pointer-events:none;z-index:999999'</span>;                <span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">'resize'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;                    canvas.width = <span class="hljs-built_in">window</span>.innerWidth;                    canvas.height = <span class="hljs-built_in">window</span>.innerHeight                &#125;);                <span class="hljs-built_in">document</span>.body.appendChild(canvas);                <span class="hljs-keyword">var</span> context = canvas.getContext(<span class="hljs-string">'2d'</span>);                <span class="hljs-keyword">var</span> particles = [];                <span class="hljs-keyword">var</span> particlePointer = <span class="hljs-number">0</span>;                <span class="hljs-keyword">var</span> rendering = <span class="hljs-literal">false</span>;                POWERMODE.shake = <span class="hljs-literal">true</span>;                <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getRandom</span>(<span class="hljs-params">min, max</span>) </span>&#123;                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.random() * (max - min) + min                &#125;                <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getColor</span>(<span class="hljs-params">el</span>) </span>&#123;                    <span class="hljs-keyword">if</span> (POWERMODE.colorful) &#123;                        <span class="hljs-keyword">var</span> u = getRandom(<span class="hljs-number">0</span>, <span class="hljs-number">360</span>);                        <span class="hljs-keyword">return</span> <span class="hljs-string">'hsla('</span> + getRandom(u - <span class="hljs-number">10</span>, u + <span class="hljs-number">10</span>) + <span class="hljs-string">', 100%, '</span> + getRandom(<span class="hljs-number">50</span>, <span class="hljs-number">80</span>) + <span class="hljs-string">'%, '</span> + <span class="hljs-number">1</span> + <span class="hljs-string">')'</span>                    &#125; <span class="hljs-keyword">else</span> &#123;                        <span class="hljs-keyword">return</span> <span class="hljs-built_in">window</span>.getComputedStyle(el).color                    &#125;                &#125;                <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getCaret</span>(<span class="hljs-params"></span>) </span>&#123;                    <span class="hljs-keyword">var</span> el = <span class="hljs-built_in">document</span>.activeElement;                    <span class="hljs-keyword">var</span> bcr;                    <span class="hljs-keyword">if</span> (el.tagName === <span class="hljs-string">'TEXTAREA'</span> || (el.tagName === <span class="hljs-string">'INPUT'</span> &amp;&amp; el.getAttribute(<span class="hljs-string">'type'</span>) === <span class="hljs-string">'text'</span>)) &#123;                        <span class="hljs-keyword">var</span> offset = __webpack_require__(<span class="hljs-number">1</span>)(el, el.selectionEnd);                        bcr = el.getBoundingClientRect();                        <span class="hljs-keyword">return</span> &#123;                            <span class="hljs-attr">x</span>: offset.left + bcr.left,                            <span class="hljs-attr">y</span>: offset.top + bcr.top,                            <span class="hljs-attr">color</span>: getColor(el)                        &#125;                    &#125;                    <span class="hljs-keyword">var</span> selection = <span class="hljs-built_in">window</span>.getSelection();                    <span class="hljs-keyword">if</span> (selection.rangeCount) &#123;                        <span class="hljs-keyword">var</span> range = selection.getRangeAt(<span class="hljs-number">0</span>);                        <span class="hljs-keyword">var</span> startNode = range.startContainer;                        <span class="hljs-keyword">if</span> (startNode.nodeType === <span class="hljs-built_in">document</span>.TEXT_NODE) &#123;                            startNode = startNode.parentNode                        &#125;                        bcr = range.getBoundingClientRect();                        <span class="hljs-keyword">return</span> &#123;                            <span class="hljs-attr">x</span>: bcr.left,                            <span class="hljs-attr">y</span>: bcr.top,                            <span class="hljs-attr">color</span>: getColor(startNode)                        &#125;                    &#125;                    <span class="hljs-keyword">return</span> &#123;                        <span class="hljs-attr">x</span>: <span class="hljs-number">0</span>,                        <span class="hljs-attr">y</span>: <span class="hljs-number">0</span>,                        <span class="hljs-attr">color</span>: <span class="hljs-string">'transparent'</span>                    &#125;                &#125;                <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createParticle</span>(<span class="hljs-params">x, y, color</span>) </span>&#123;                    <span class="hljs-keyword">return</span> &#123;                        <span class="hljs-attr">x</span>: x,                        <span class="hljs-attr">y</span>: y,                        <span class="hljs-attr">alpha</span>: <span class="hljs-number">1</span>,                        <span class="hljs-attr">color</span>: color,                        <span class="hljs-attr">velocity</span>: &#123;                            <span class="hljs-attr">x</span>: <span class="hljs-number">-1</span> + <span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">2</span>,                            <span class="hljs-attr">y</span>: <span class="hljs-number">-3.5</span> + <span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">2</span>                        &#125;                    &#125;                &#125;                <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">POWERMODE</span>(<span class="hljs-params"></span>) </span>&#123;                    &#123;                        <span class="hljs-keyword">var</span> caret = getCaret();                        <span class="hljs-keyword">var</span> numParticles = <span class="hljs-number">5</span> + <span class="hljs-built_in">Math</span>.round(<span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">10</span>);                        <span class="hljs-keyword">while</span> (numParticles--) &#123;                            particles[particlePointer] = createParticle(caret.x, caret.y, caret.color);                            particlePointer = (particlePointer + <span class="hljs-number">1</span>) % <span class="hljs-number">500</span>                        &#125;                    &#125;                    &#123;                        <span class="hljs-keyword">if</span> (POWERMODE.shake) &#123;                            <span class="hljs-keyword">var</span> intensity = <span class="hljs-number">1</span> + <span class="hljs-number">2</span> * <span class="hljs-built_in">Math</span>.random();                            <span class="hljs-keyword">var</span> x = intensity * (<span class="hljs-built_in">Math</span>.random() &gt; <span class="hljs-number">0.5</span> ? <span class="hljs-number">-1</span> : <span class="hljs-number">1</span>);                            <span class="hljs-keyword">var</span> y = intensity * (<span class="hljs-built_in">Math</span>.random() &gt; <span class="hljs-number">0.5</span> ? <span class="hljs-number">-1</span> : <span class="hljs-number">1</span>);                            <span class="hljs-built_in">document</span>.body.style.marginLeft = x + <span class="hljs-string">'px'</span>;                            <span class="hljs-built_in">document</span>.body.style.marginTop = y + <span class="hljs-string">'px'</span>;                            setTimeout(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;                                <span class="hljs-built_in">document</span>.body.style.marginLeft = <span class="hljs-string">''</span>;                                <span class="hljs-built_in">document</span>.body.style.marginTop = <span class="hljs-string">''</span>                            &#125;, <span class="hljs-number">75</span>)                        &#125;                    &#125;                    <span class="hljs-keyword">if</span> (!rendering) &#123;                        requestAnimationFrame(loop)                    &#125;                &#125;                ;POWERMODE.colorful = <span class="hljs-literal">false</span>;                <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">loop</span>(<span class="hljs-params"></span>) </span>&#123;                    rendering = <span class="hljs-literal">true</span>;                    context.clearRect(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, canvas.width, canvas.height);                    <span class="hljs-keyword">var</span> rendered = <span class="hljs-literal">false</span>;                    <span class="hljs-keyword">var</span> rect = canvas.getBoundingClientRect();                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; particles.length; ++i) &#123;                        <span class="hljs-keyword">var</span> particle = particles[i];                        <span class="hljs-keyword">if</span> (particle.alpha &lt;= <span class="hljs-number">0.1</span>)                            <span class="hljs-keyword">continue</span>;                        particle.velocity.y += <span class="hljs-number">0.075</span>;                        particle.x += particle.velocity.x;                        particle.y += particle.velocity.y;                        particle.alpha *= <span class="hljs-number">0.96</span>;                        context.globalAlpha = particle.alpha;                        context.fillStyle = particle.color;                        context.fillRect(<span class="hljs-built_in">Math</span>.round(particle.x - <span class="hljs-number">1.5</span>) - rect.left, <span class="hljs-built_in">Math</span>.round(particle.y - <span class="hljs-number">1.5</span>) - rect.top, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>);                        rendered = <span class="hljs-literal">true</span>                    &#125;                    <span class="hljs-keyword">if</span> (rendered) &#123;                        requestAnimationFrame(loop)                    &#125; <span class="hljs-keyword">else</span> &#123;                        rendering = <span class="hljs-literal">false</span>                    &#125;                &#125;                <span class="hljs-built_in">module</span>.exports = POWERMODE            &#125;        ), (<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">module, exports</span>) </span>&#123;                (<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;                    <span class="hljs-keyword">var</span> properties = [<span class="hljs-string">'direction'</span>, <span class="hljs-string">'boxSizing'</span>, <span class="hljs-string">'width'</span>, <span class="hljs-string">'height'</span>, <span class="hljs-string">'overflowX'</span>, <span class="hljs-string">'overflowY'</span>, <span class="hljs-string">'borderTopWidth'</span>, <span class="hljs-string">'borderRightWidth'</span>, <span class="hljs-string">'borderBottomWidth'</span>, <span class="hljs-string">'borderLeftWidth'</span>, <span class="hljs-string">'borderStyle'</span>, <span class="hljs-string">'paddingTop'</span>, <span class="hljs-string">'paddingRight'</span>, <span class="hljs-string">'paddingBottom'</span>, <span class="hljs-string">'paddingLeft'</span>, <span class="hljs-string">'fontStyle'</span>, <span class="hljs-string">'fontVariant'</span>, <span class="hljs-string">'fontWeight'</span>, <span class="hljs-string">'fontStretch'</span>, <span class="hljs-string">'fontSize'</span>, <span class="hljs-string">'fontSizeAdjust'</span>, <span class="hljs-string">'lineHeight'</span>, <span class="hljs-string">'fontFamily'</span>, <span class="hljs-string">'textAlign'</span>, <span class="hljs-string">'textTransform'</span>, <span class="hljs-string">'textIndent'</span>, <span class="hljs-string">'textDecoration'</span>, <span class="hljs-string">'letterSpacing'</span>, <span class="hljs-string">'wordSpacing'</span>, <span class="hljs-string">'tabSize'</span>, <span class="hljs-string">'MozTabSize'</span>];                    <span class="hljs-keyword">var</span> isFirefox = <span class="hljs-built_in">window</span>.mozInnerScreenX != <span class="hljs-literal">null</span>;                    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getCaretCoordinates</span>(<span class="hljs-params">element, position, options</span>) </span>&#123;                        <span class="hljs-keyword">var</span> debug = options &amp;&amp; options.debug || <span class="hljs-literal">false</span>;                        <span class="hljs-keyword">if</span> (debug) &#123;                            <span class="hljs-keyword">var</span> el = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">'#input-textarea-caret-position-mirror-div'</span>);                            <span class="hljs-keyword">if</span> (el) &#123;                                el.parentNode.removeChild(el)                            &#125;                        &#125;                        <span class="hljs-keyword">var</span> div = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">'div'</span>);                        div.id = <span class="hljs-string">'input-textarea-caret-position-mirror-div'</span>;                        <span class="hljs-built_in">document</span>.body.appendChild(div);                        <span class="hljs-keyword">var</span> style = div.style;                        <span class="hljs-keyword">var</span> computed = <span class="hljs-built_in">window</span>.getComputedStyle ? getComputedStyle(element) : element.currentStyle;                        style.whiteSpace = <span class="hljs-string">'pre-wrap'</span>;                        <span class="hljs-keyword">if</span> (element.nodeName !== <span class="hljs-string">'INPUT'</span>)                            style.wordWrap = <span class="hljs-string">'break-word'</span>;                        style.position = <span class="hljs-string">'absolute'</span>;                        <span class="hljs-keyword">if</span> (!debug)                            style.visibility = <span class="hljs-string">'hidden'</span>;                        properties.forEach(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">prop</span>) </span>&#123;                            style[prop] = computed[prop]                        &#125;);                        <span class="hljs-keyword">if</span> (isFirefox) &#123;                            <span class="hljs-keyword">if</span> (element.scrollHeight &gt; <span class="hljs-built_in">parseInt</span>(computed.height))                                style.overflowY = <span class="hljs-string">'scroll'</span>                        &#125; <span class="hljs-keyword">else</span> &#123;                            style.overflow = <span class="hljs-string">'hidden'</span>                        &#125;                        div.textContent = element.value.substring(<span class="hljs-number">0</span>, position);                        <span class="hljs-keyword">if</span> (element.nodeName === <span class="hljs-string">'INPUT'</span>)                            div.textContent = div.textContent.replace(<span class="hljs-regexp">/\s/g</span>, <span class="hljs-string">"\u00a0"</span>);                        <span class="hljs-keyword">var</span> span = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">'span'</span>);                        span.textContent = element.value.substring(position) || <span class="hljs-string">'.'</span>;                        div.appendChild(span);                        <span class="hljs-keyword">var</span> coordinates = &#123;                            <span class="hljs-attr">top</span>: span.offsetTop + <span class="hljs-built_in">parseInt</span>(computed[<span class="hljs-string">'borderTopWidth'</span>]),                            <span class="hljs-attr">left</span>: span.offsetLeft + <span class="hljs-built_in">parseInt</span>(computed[<span class="hljs-string">'borderLeftWidth'</span>])                        &#125;;                        <span class="hljs-keyword">if</span> (debug) &#123;                            span.style.backgroundColor = <span class="hljs-string">'#aaa'</span>                        &#125; <span class="hljs-keyword">else</span> &#123;                            <span class="hljs-built_in">document</span>.body.removeChild(div)                        &#125;                        <span class="hljs-keyword">return</span> coordinates                    &#125;                    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> <span class="hljs-built_in">module</span> != <span class="hljs-string">"undefined"</span> &amp;&amp; <span class="hljs-keyword">typeof</span> <span class="hljs-built_in">module</span>.exports != <span class="hljs-string">"undefined"</span>) &#123;                        <span class="hljs-built_in">module</span>.exports = getCaretCoordinates                    &#125; <span class="hljs-keyword">else</span> &#123;                        <span class="hljs-built_in">window</span>.getCaretCoordinates = getCaretCoordinates                    &#125;                &#125;())            &#125;        )])    &#125;)&#125;    <span class="hljs-keyword">var</span> sw=<span class="hljs-built_in">window</span>.screen.width;    <span class="hljs-keyword">if</span> (sw&gt;<span class="hljs-number">1200</span>) &#123;        POWERMODE.colorful=<span class="hljs-literal">true</span>;        POWERMODE.shake=<span class="hljs-literal">true</span>;        <span class="hljs-built_in">document</span>.body.addEventListener(<span class="hljs-string">'input'</span>,POWERMODE)    &#125;</code></pre></div><h1 id="修改提示"><a href="#修改提示" class="headerlink" title="修改提示:"></a>修改提示:</h1><p>最后几行:</p><div class="hljs"><pre><code class="hljs Javascript"><span class="hljs-keyword">var</span> sw=<span class="hljs-built_in">window</span>.screen.width;<span class="hljs-keyword">if</span> (sw&gt;<span class="hljs-number">1200</span>) &#123;    POWERMODE.colorful=<span class="hljs-literal">true</span>;     POWERMODE.shake=<span class="hljs-literal">true</span>;    <span class="hljs-built_in">document</span>.body.addEventListener(<span class="hljs-string">'input'</span>,POWERMODE)&#125;</code></pre></div><p>中<code>POWERMODE.colorful=true;</code>指是否开启多彩颜色。而<code>POWERMODE.shake=true;</code>指是否开启屏幕震荡.<br>默认全部开启.</p><hr>]]></content>
    
    
    <categories>
      
      <category>屌代码</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>特效</tag>
      
      <tag>Tampermonkey</tag>
      
      <tag>站长必备</tag>
      
      <tag>萌哒哒</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MarkDown语法详解（高级版）</title>
    <link href="/2019/07/24/MarkDown%E8%AF%AD%E6%B3%95%E8%AF%A6%E8%A7%A3%EF%BC%88%E9%AB%98%E7%BA%A7%E7%89%88%EF%BC%89/"/>
    <url>/2019/07/24/MarkDown%E8%AF%AD%E6%B3%95%E8%AF%A6%E8%A7%A3%EF%BC%88%E9%AB%98%E7%BA%A7%E7%89%88%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言:"></a>前言:</h1><blockquote><p><strong>注意</strong><br>文章内所有名字纯属虚构,如有雷同,纯属巧合!</p></blockquote><blockquote><p>这是第三篇MarkDown语法详解（高级版），如果你想要学习第二篇，请前往<a href="/2019/07/22/MarkDown语法详解（中级版）">MarkDown语法详解（中级版）</a>；如果你想要学习第一篇，请前往<a href="/2019/07/21/MarkDown语法详解（初级版）">MarkDown语法详解（初级版）</a></p></blockquote><blockquote><p><strong>警告</strong><br>本次授课相对来说比较难,请做好心理准备!</p></blockquote><h2 id="列表："><a href="#列表：" class="headerlink" title="列表："></a>列表：</h2><h3 id="正常方法"><a href="#正常方法" class="headerlink" title="正常方法:"></a>正常方法:</h3><p>Markdown 制作表格使用<code>|</code>来分隔不同的单元格，使用<code>-</code>来分隔表头和其他行。<br>语法格式如下：</p><div class="hljs"><pre><code class="hljs Markdown">|  表头   | 表头  ||  ----  | ----  || 单元格  | 单元格 || 单元格  | 单元格 |</code></pre></div><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr></tbody></table><p>当然你也可以在表格中使用特殊符号如:</p><div class="hljs"><pre><code class="hljs Markdown">|人物|技能一|技能二|技能三|大招||----|----|----|----|----||刘老师|讲一个段子|加一张试卷|/|考一场试||梁M法|抢体育课|<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">font</span> <span class="hljs-attr">color</span>=<span class="hljs-string">yello</span>&gt;</span></span>抢电脑课<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">font</span>&gt;</span></span>|<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">font</span> <span class="hljs-attr">color</span>=<span class="hljs-string">red</span>&gt;</span></span>抢美术课<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">font</span>&gt;</span></span>|<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">font</span> <span class="hljs-attr">color</span>=<span class="hljs-string">green</span>&gt;</span></span>连续考试<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">font</span>&gt;</span></span>||刘老师老婆|[<span class="hljs-string">哭</span>](<span class="hljs-link">https://baike.baidu.com/item/一哭二闹三上吊/838254</span>)|[<span class="hljs-string">闹</span>](<span class="hljs-link">https://baike.baidu.com/item/一哭二闹三上吊/838254</span>)|[<span class="hljs-string">上吊</span>](<span class="hljs-link">https://baike.baidu.com/item/一哭二闹三上吊/838254</span>)|向刘老师发射一张离婚协议书.对其造成5000点物理伤害|</code></pre></div><table><thead><tr><th>人物</th><th>技能一</th><th>技能二</th><th>技能三</th><th>大招</th></tr></thead><tbody><tr><td>刘老师</td><td>讲一个段子</td><td>加一张试卷</td><td>/</td><td>考一场试</td></tr><tr><td>梁M法</td><td>抢体育课</td><td><font color="yello">抢电脑课</font></td><td><font color="red">抢美术课</font></td><td><font color="green">连续考试</font></td></tr><tr><td>刘老师老婆</td><td><a href="https://baike.baidu.com/item/一哭二闹三上吊/838254" target="_blank" rel="noopener">哭</a></td><td><a href="https://baike.baidu.com/item/一哭二闹三上吊/838254" target="_blank" rel="noopener">闹</a></td><td><a href="https://baike.baidu.com/item/一哭二闹三上吊/838254" target="_blank" rel="noopener">上吊</a></td><td>向刘老师发射一张离婚协议书.对其造成5000点物理伤害</td></tr></tbody></table><h3 id="对齐"><a href="#对齐" class="headerlink" title="对齐:"></a>对齐:</h3><p>我们可以设置表格的对齐方式：</p><ul><li>-: 设置内容和标题栏居右对齐。</li><li>:- 设置内容和标题栏居左对齐。</li><li>:-: 设置内容和标题栏居中对齐。<br>实例如下：<div class="hljs"><pre><code class="hljs undefined">|<span class="hljs-string"> 左对齐 </span>|<span class="hljs-string"> 右对齐 </span>|<span class="hljs-string"> 居中对齐 </span>||<span class="hljs-string"> :-----</span>|<span class="hljs-string"> ----: </span>|<span class="hljs-string"> :----: </span>||<span class="hljs-string"> 单元格 </span>|<span class="hljs-string"> 单元格 </span>|<span class="hljs-string"> 单元格 </span>||<span class="hljs-string"> 单元格 </span>|<span class="hljs-string"> 单元格 </span>|<span class="hljs-string"> 单元格 </span>|</code></pre></div></li></ul><table><thead><tr><th align="left">左对齐</th><th align="right">右对齐</th><th align="center">居中对齐</th></tr></thead><tbody><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr></tbody></table><blockquote><p><strong>提示</strong>:<br>表格打完要空一行啊!</p></blockquote><h2 id="流程图"><a href="#流程图" class="headerlink" title="流程图:"></a>流程图:</h2><p>Hexo用户可能要额外安装插件: <code>npm install --save hexo-filter-flowchart</code></p><p>st=&gt;start: Start:&gt;<a href="http://www.google.com[blank]" target="_blank" rel="noopener">http://www.google.com[blank]</a> e=&gt;end:&gt;<a href="http://www.google.com" target="_blank" rel="noopener">http://www.google.com</a> op1=&gt;operation: My Operation sub1=&gt;subroutine: My Subroutine cond=&gt;condition: Yes or No?:&gt;<a href="http://www.google.com" target="_blank" rel="noopener">http://www.google.com</a> io=&gt;inputoutput: catch something… para=&gt;parallel: parallel tasks st-&gt;op1-&gt;cond cond(yes)-&gt;io-&gt;e cond(no)-&gt;para para(path1, bottom)-&gt;sub1(right)-&gt;op1 para(path2, top)-&gt;op1<br>具体写法前往<a href="http://flowchart.js.org" target="_blank" rel="noopener">官网</a>了解更多.</p><h2 id="打出正常符号来"><a href="#打出正常符号来" class="headerlink" title="打出正常符号来:"></a>打出正常符号来:</h2><p>用<code>\</code>反斜杠来转义,转义表格如下:</p><table><thead><tr><th>你要打出的符号</th><th>你应该写出的符号</th></tr></thead><tbody><tr><td><code>!</code></td><td>`!</td></tr><tr><td>`</td><td>\`</td></tr><tr><td><code>#</code></td><td><code>\#</code></td></tr><tr><td><code>-</code></td><td><code>\-</code></td></tr><tr><td><code>&amp;</code></td><td><code>\&amp;</code></td></tr><tr><td><code>*</code></td><td><code>\*</code></td></tr><tr><td><code>+</code></td><td><code>\+</code></td></tr></tbody></table><p>等等等等只要以单个<code>\</code>放在需转义的单个字符前即可.</p><blockquote><p><strong>注意</strong><br>多字符转义需要一个一个添加<code>\</code>!<br>被`和```包裹起来的代码无需转义!</p></blockquote><h2 id="公式"><a href="#公式" class="headerlink" title="公式:"></a>公式:</h2><h3 id="单行公式"><a href="#单行公式" class="headerlink" title="单行公式:"></a>单行公式:</h3><p>用一个<code>$</code>来包裹单行代码(Hexo不支持)</p><h3 id="多行公式："><a href="#多行公式：" class="headerlink" title="多行公式："></a>多行公式：</h3><p>用两个<code>$</code>来包裹单行代码(Hexo不支持)</p><h2 id="Todo"><a href="#Todo" class="headerlink" title="Todo:"></a>Todo:</h2><p>用<code>[ ]</code>代替未完成的事项:</p><ul><li><input disabled type="checkbox"> 语文作业<br>用<code>[x]</code>代替已完成的事项:</li><li><input checked disabled type="checkbox"> 科学作业</li></ul><blockquote><p><strong>注意</strong><br>如果你显示不出来….<br>说明你踩坑里去了!<br>在每一个<code>[ ]</code>和<code>[x]</code>前要加上<a href="/2019/07/22/MarkDown语法详解（中级版）/#无序排序">无序列表的符号</a>!!<br>反正我是踩坑里去了!</p></blockquote><h2 id="HTML标签："><a href="#HTML标签：" class="headerlink" title="HTML标签："></a>HTML标签：</h2><p>Markdown本身就能与html互相转换,比如:</p><div class="hljs"><pre><code class="hljs markdown">[<span class="hljs-string">baidu</span>](<span class="hljs-link">https://baidu.com</span>)</code></pre></div><p>转换成html:</p><div class="hljs"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://baidu.com"</span>&gt;</span>baidu<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre></div><p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。<br>目前支持的 HTML 元素有：<code>&amp;amp;lt;kbd&amp;amp;gt; &amp;amp;lt;b&amp;amp;gt; &amp;amp;lt;i&amp;amp;gt; &amp;amp;lt;em&amp;amp;gt; &amp;amp;lt;sup&amp;amp;gt; &amp;amp;lt;sub&amp;amp;gt; &amp;amp;lt;br&amp;amp;gt;</code>等 ，如：<br>此处讲解几个不能被markdown使用的标签:</p><h3 id="按键符号"><a href="#按键符号" class="headerlink" title="按键符号:"></a>按键符号:</h3><div class="hljs"><pre><code class="hljs undefined">按&amp;amp;<span class="hljs-keyword">lt</span>;kbd&amp;amp;<span class="hljs-keyword">gt</span>; &amp;amp;<span class="hljs-keyword">lt</span>;b&amp;amp;<span class="hljs-keyword">gt</span>; &amp;amp;<span class="hljs-keyword">lt</span>;i&amp;amp;<span class="hljs-keyword">gt</span>; &amp;amp;<span class="hljs-keyword">lt</span>;em&amp;amp;<span class="hljs-keyword">gt</span>; &amp;amp;<span class="hljs-keyword">lt</span>;sup&amp;amp;<span class="hljs-keyword">gt</span>; &amp;amp;<span class="hljs-keyword">lt</span>;<span class="hljs-function"><span class="hljs-keyword">sub</span>&amp;<span class="hljs-title">amp</span></span>;<span class="hljs-keyword">gt</span>; &amp;amp;<span class="hljs-keyword">lt</span>;br&amp;amp;<span class="hljs-keyword">gt</span>;就可以调出任务管理器了！</code></pre></div><p>按<kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>Esc</kbd>就可以调出任务管理器了！</p><h3 id="上标"><a href="#上标" class="headerlink" title="上标"></a>上标</h3><div class="hljs"><pre><code class="hljs html">我是正常的刘老师<span class="hljs-tag">&lt;<span class="hljs-name">sup</span>&gt;</span>我是上标刘老师<span class="hljs-tag">&lt;/<span class="hljs-name">sup</span>&gt;</span></code></pre></div><p>我是正常的刘老师<sup>我是上标刘老师</sup></p><h3 id="下标"><a href="#下标" class="headerlink" title="下标:"></a>下标:</h3><div class="hljs"><pre><code class="hljs html">我是正常的刘老师<span class="hljs-tag">&lt;<span class="hljs-name">sub</span>&gt;</span>我是下标刘老师<span class="hljs-tag">&lt;/<span class="hljs-name">sub</span>&gt;</span></code></pre></div><p>我是正常的刘老师<sub>我是下标刘老师</sub></p><h3 id="改字体颜色"><a href="#改字体颜色" class="headerlink" title="改字体颜色:"></a>改字体颜色:</h3><div class="hljs"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">font</span> <span class="hljs-attr">color</span>=<span class="hljs-string">#F7FE2E</span>&gt;</span>刘:我的心和我一样颜色<span class="hljs-tag">&lt;/<span class="hljs-name">font</span>&gt;</span></code></pre></div><p><font color="#F7FE2E">刘:我的心和我一样颜色</font></p><h3 id="改字体背景颜色"><a href="#改字体背景颜色" class="headerlink" title="改字体背景颜色:"></a>改字体背景颜色:</h3><div class="hljs"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"background:#F7FE2E"</span>&gt;</span>刘:我的心和背景一样颜色!<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></code></pre></div><p style="background:#F7FE2E">刘:我的心和背景一样颜色!</p><h3 id="改字体大小"><a href="#改字体大小" class="headerlink" title="改字体大小:"></a>改字体大小:</h3><div class="hljs"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">font</span> <span class="hljs-attr">size</span>=<span class="hljs-string">72</span>&gt;</span>刘:我的\*和我一样大<span class="hljs-tag">&lt;/<span class="hljs-name">font</span>&gt;</span></code></pre></div><p><font size="72">刘:我的*和我一样大</font></p><h2 id="js-css"><a href="#js-css" class="headerlink" title="js/css"></a>js/css</h2><p>与正常使用无差异</p><p>完</p><hr>]]></content>
    
    
    <categories>
      
      <category>爱学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MarkDown</tag>
      
      <tag>语法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JS特效：鼠标单击出现爱心</title>
    <link href="/2019/07/23/JS%E7%89%B9%E6%95%88%EF%BC%9A%E9%BC%A0%E6%A0%87%E5%8D%95%E5%87%BB%E5%87%BA%E7%8E%B0%E7%88%B1%E5%BF%83/"/>
    <url>/2019/07/23/JS%E7%89%B9%E6%95%88%EF%BC%9A%E9%BC%A0%E6%A0%87%E5%8D%95%E5%87%BB%E5%87%BA%E7%8E%B0%E7%88%B1%E5%BF%83/</url>
    
    <content type="html"><![CDATA[<h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><p>用久了blog会感觉单调。<br>好吧确实挺单调的。<br>这次推一个爱心特效的代码，百度上都烂大街了，所以就不注明转载了！<br>其实用起来还是可以的，自我感觉良好啊。<br>不说了，直接贴演示：</p><h1 id="演示："><a href="#演示：" class="headerlink" title="演示："></a>演示：</h1><p><img src="https://img.cyfan.top/pic/HEART.jpg" srcset="/img/loading.gif" alt="演示" title="爱心特效"></p><h2 id="Javascript代码"><a href="#Javascript代码" class="headerlink" title="Javascript代码:"></a>Javascript代码:</h2><div class="hljs"><pre><code class="hljs Javascript">(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">window,document,undefined</span>)</span>&#123;<span class="hljs-keyword">var</span> hearts = [];<span class="hljs-built_in">window</span>.requestAnimationFrame = (<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-keyword">return</span> <span class="hljs-built_in">window</span>.requestAnimationFrame ||<span class="hljs-built_in">window</span>.webkitRequestAnimationFrame ||<span class="hljs-built_in">window</span>.mozRequestAnimationFrame ||<span class="hljs-built_in">window</span>.oRequestAnimationFrame ||<span class="hljs-built_in">window</span>.msRequestAnimationFrame ||<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">callback</span>)</span>&#123;setTimeout(callback,<span class="hljs-number">1000</span>/<span class="hljs-number">60</span>);&#125;&#125;)();init();<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">init</span>(<span class="hljs-params"></span>)</span>&#123;css(<span class="hljs-string">".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: absolute;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"</span>);attachEvent();gameloop();&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">gameloop</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;hearts.length;i++)&#123;<span class="hljs-keyword">if</span>(hearts[i].alpha &lt;=<span class="hljs-number">0</span>)&#123;<span class="hljs-built_in">document</span>.body.removeChild(hearts[i].el);hearts.splice(i,<span class="hljs-number">1</span>);<span class="hljs-keyword">continue</span>;&#125;hearts[i].y--;hearts[i].scale += <span class="hljs-number">0.004</span>;hearts[i].alpha -= <span class="hljs-number">0.013</span>;hearts[i].el.style.cssText = <span class="hljs-string">"left:"</span>+hearts[i].x+<span class="hljs-string">"px;top:"</span>+hearts[i].y+<span class="hljs-string">"px;opacity:"</span>+hearts[i].alpha+<span class="hljs-string">";transform:scale("</span>+hearts[i].scale+<span class="hljs-string">","</span>+hearts[i].scale+<span class="hljs-string">") rotate(45deg);background:"</span>+hearts[i].color;&#125;requestAnimationFrame(gameloop);&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">attachEvent</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-keyword">var</span> old = <span class="hljs-keyword">typeof</span> <span class="hljs-built_in">window</span>.οnclick===<span class="hljs-string">"function"</span> &amp;&amp; <span class="hljs-built_in">window</span>.onclick;<span class="hljs-built_in">window</span>.onclick = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">event</span>)</span>&#123;old &amp;&amp; old();createHeart(event);&#125;&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createHeart</span>(<span class="hljs-params">event</span>)</span>&#123;<span class="hljs-keyword">var</span> d = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">"div"</span>);d.className = <span class="hljs-string">"heart"</span>;hearts.push(&#123;<span class="hljs-attr">el</span> : d,<span class="hljs-attr">x</span> : event.clientX - <span class="hljs-number">5</span>,<span class="hljs-attr">y</span> : event.clientY - <span class="hljs-number">5</span>,<span class="hljs-attr">scale</span> : <span class="hljs-number">1</span>,<span class="hljs-attr">alpha</span> : <span class="hljs-number">1</span>,<span class="hljs-attr">color</span> : randomColor()&#125;);<span class="hljs-built_in">document</span>.body.appendChild(d);&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">css</span>(<span class="hljs-params">css</span>)</span>&#123;<span class="hljs-keyword">var</span> style = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">"style"</span>);style.type=<span class="hljs-string">"text/css"</span>;<span class="hljs-keyword">try</span>&#123;style.appendChild(<span class="hljs-built_in">document</span>.createTextNode(css));&#125;<span class="hljs-keyword">catch</span>(ex)&#123;style.styleSheet.cssText = css;&#125;<span class="hljs-built_in">document</span>.getElementsByTagName(<span class="hljs-string">'head'</span>)[<span class="hljs-number">0</span>].appendChild(style);&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">randomColor</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-keyword">return</span> <span class="hljs-string">"rgb("</span>+(~~(<span class="hljs-built_in">Math</span>.random()*<span class="hljs-number">255</span>))+<span class="hljs-string">","</span>+(~~(<span class="hljs-built_in">Math</span>.random()*<span class="hljs-number">255</span>))+<span class="hljs-string">","</span>+(~~(<span class="hljs-built_in">Math</span>.random()*<span class="hljs-number">255</span>))+<span class="hljs-string">")"</span>;&#125;&#125;)(<span class="hljs-built_in">window</span>,<span class="hljs-built_in">document</span>);</code></pre></div><p>把它夹在<code>&lt;script&gt;</code>和<code>&lt;/script&gt;</code>就可以了.</p><h2 id="如果你想在所有界面都使用这个特效"><a href="#如果你想在所有界面都使用这个特效" class="headerlink" title="如果你想在所有界面都使用这个特效:"></a>如果你想在所有界面都使用这个特效:</h2><p>请先安装<a href="https://www.tampermonkey.net" target="_blank" rel="noopener">Tampermonkey</a>,再安装一下代码：</p><div class="hljs"><pre><code class="hljs Javascript"><span class="hljs-comment">// ==UserScript==</span><span class="hljs-comment">// @name         鼠标单击心型特效</span><span class="hljs-comment">// @namespace    /</span><span class="hljs-comment">// @version      0.1</span><span class="hljs-comment">// @description  萌哒哒的特效</span><span class="hljs-comment">// @author       陈YF</span><span class="hljs-comment">// @match        *://*/*</span><span class="hljs-comment">// @grant        none</span><span class="hljs-comment">// ==/UserScript==</span>(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">window,document,undefined</span>)</span>&#123;<span class="hljs-keyword">var</span> hearts = [];<span class="hljs-built_in">window</span>.requestAnimationFrame = (<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-keyword">return</span> <span class="hljs-built_in">window</span>.requestAnimationFrame ||<span class="hljs-built_in">window</span>.webkitRequestAnimationFrame ||<span class="hljs-built_in">window</span>.mozRequestAnimationFrame ||<span class="hljs-built_in">window</span>.oRequestAnimationFrame ||<span class="hljs-built_in">window</span>.msRequestAnimationFrame ||<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">callback</span>)</span>&#123;setTimeout(callback,<span class="hljs-number">1000</span>/<span class="hljs-number">60</span>);&#125;&#125;)();init();<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">init</span>(<span class="hljs-params"></span>)</span>&#123;css(<span class="hljs-string">".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: absolute;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"</span>);attachEvent();gameloop();&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">gameloop</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;hearts.length;i++)&#123;<span class="hljs-keyword">if</span>(hearts[i].alpha &lt;=<span class="hljs-number">0</span>)&#123;<span class="hljs-built_in">document</span>.body.removeChild(hearts[i].el);hearts.splice(i,<span class="hljs-number">1</span>);<span class="hljs-keyword">continue</span>;&#125;hearts[i].y--;hearts[i].scale += <span class="hljs-number">0.004</span>;hearts[i].alpha -= <span class="hljs-number">0.013</span>;hearts[i].el.style.cssText = <span class="hljs-string">"left:"</span>+hearts[i].x+<span class="hljs-string">"px;top:"</span>+hearts[i].y+<span class="hljs-string">"px;opacity:"</span>+hearts[i].alpha+<span class="hljs-string">";transform:scale("</span>+hearts[i].scale+<span class="hljs-string">","</span>+hearts[i].scale+<span class="hljs-string">") rotate(45deg);background:"</span>+hearts[i].color;&#125;requestAnimationFrame(gameloop);&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">attachEvent</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-keyword">var</span> old = <span class="hljs-keyword">typeof</span> <span class="hljs-built_in">window</span>.οnclick===<span class="hljs-string">"function"</span> &amp;&amp; <span class="hljs-built_in">window</span>.onclick;<span class="hljs-built_in">window</span>.onclick = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">event</span>)</span>&#123;old &amp;&amp; old();createHeart(event);&#125;&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createHeart</span>(<span class="hljs-params">event</span>)</span>&#123;<span class="hljs-keyword">var</span> d = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">"div"</span>);d.className = <span class="hljs-string">"heart"</span>;hearts.push(&#123;<span class="hljs-attr">el</span> : d,<span class="hljs-attr">x</span> : event.clientX - <span class="hljs-number">5</span>,<span class="hljs-attr">y</span> : event.clientY - <span class="hljs-number">5</span>,<span class="hljs-attr">scale</span> : <span class="hljs-number">1</span>,<span class="hljs-attr">alpha</span> : <span class="hljs-number">1</span>,<span class="hljs-attr">color</span> : randomColor()&#125;);<span class="hljs-built_in">document</span>.body.appendChild(d);&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">css</span>(<span class="hljs-params">css</span>)</span>&#123;<span class="hljs-keyword">var</span> style = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">"style"</span>);style.type=<span class="hljs-string">"text/css"</span>;<span class="hljs-keyword">try</span>&#123;style.appendChild(<span class="hljs-built_in">document</span>.createTextNode(css));&#125;<span class="hljs-keyword">catch</span>(ex)&#123;style.styleSheet.cssText = css;&#125;<span class="hljs-built_in">document</span>.getElementsByTagName(<span class="hljs-string">'head'</span>)[<span class="hljs-number">0</span>].appendChild(style);&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">randomColor</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-keyword">return</span> <span class="hljs-string">"rgb("</span>+(~~(<span class="hljs-built_in">Math</span>.random()*<span class="hljs-number">255</span>))+<span class="hljs-string">","</span>+(~~(<span class="hljs-built_in">Math</span>.random()*<span class="hljs-number">255</span>))+<span class="hljs-string">","</span>+(~~(<span class="hljs-built_in">Math</span>.random()*<span class="hljs-number">255</span>))+<span class="hljs-string">")"</span>;&#125;&#125;)(<span class="hljs-built_in">window</span>,<span class="hljs-built_in">document</span>);</code></pre></div><hr>]]></content>
    
    
    <categories>
      
      <category>屌代码</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>特效</tag>
      
      <tag>Tampermonkey</tag>
      
      <tag>站长必备</tag>
      
      <tag>萌哒哒</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MarkDown语法详解（中级版）</title>
    <link href="/2019/07/22/MarkDown%E8%AF%AD%E6%B3%95%E8%AF%A6%E8%A7%A3%EF%BC%88%E4%B8%AD%E7%BA%A7%E7%89%88%EF%BC%89/"/>
    <url>/2019/07/22/MarkDown%E8%AF%AD%E6%B3%95%E8%AF%A6%E8%A7%A3%EF%BC%88%E4%B8%AD%E7%BA%A7%E7%89%88%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言:"></a>前言:</h1><blockquote><p><strong>注意</strong><br>文章内所有名字纯属虚构,如有雷同,纯属巧合!</p></blockquote><blockquote><p>这是第二篇MarkDown语法详解（中级版），如果你想要学习第一篇，请前往<a href="/2019/07/21/MarkDown语法详解（初级版）">MarkDown语法详解（初级版）</a></p></blockquote><p>下面开始授课:</p><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接:"></a>超链接:</h2><p>格式如下:</p><div class="hljs"><pre><code class="hljs undefined">[<span class="hljs-string">MarkDown语法详解（初级版）</span>](<span class="hljs-link">/2019/07/21/MarkDown语法详解（初级版）</span>)</code></pre></div><p>你会得到:<br><a href="/2019/07/21/MarkDown语法详解（初级版）">MarkDown语法详解（初级版）</a><br>第一个方括号内填标题,后一个圆括号内写链接.<br>这个比较简单.<br>当然你也可以这样：</p><div class="hljs"><pre><code class="hljs undefined">&lt;<span class="hljs-string">https:</span><span class="hljs-comment">//baidu.com&gt;</span></code></pre></div><p>结果是：<br><a href="https://baidu.com" target="_blank" rel="noopener">https://baidu.com</a></p><h2 id="图片"><a href="#图片" class="headerlink" title="图片:"></a>图片:</h2><h3 id="一种方法"><a href="#一种方法" class="headerlink" title="一种方法:"></a>一种方法:</h3><p>格式如下:</p><div class="hljs"><pre><code class="hljs undefined">![<span class="hljs-string">图片标题</span>](<span class="hljs-link">图片地址 "图片ALT"</span>)</code></pre></div><p>其中<code>图片alt</code>可不填.图片地址可以是绝对地址,也可以是相对地址.</p><p>例如:</p><div class="hljs"><pre><code class="hljs undefined">![<span class="hljs-string">刘老师</span>](<span class="hljs-link">https://img.cyfan.top/pic/LLS.jpg "刘老师真容"</span>)</code></pre></div><p>是相对地址,会得到:<br><img src="https://img.cyfan.top/pic/LLS.jpg" srcset="/img/loading.gif" alt="刘老师" title="刘老师真容"><br>（这么帅气的脸只舍得打半边马赛克）<br>而</p><div class="hljs"><pre><code class="hljs undefined">![<span class="hljs-string">刘老师</span>](<span class="hljs-link">https://blog.cyfblog.gahttps://img.cyfan.top/pic/LLS.jpg "刘老师真容"</span>)</code></pre></div><p>是绝对地址,会得到:<br><img src="https://img.cyfan.top/pic/LLS.jpg" srcset="/img/loading.gif" alt="刘老师" title="刘老师真容"></p><p>其实结果是一样的.</p><h3 id="另一种方法"><a href="#另一种方法" class="headerlink" title="另一种方法:"></a>另一种方法:</h3><p>当然，你也可以像网址那样对图片网址使用变量:</p><div class="hljs"><pre><code class="hljs undefined">这个链接用 1 作为网址变量 [<span class="hljs-string">刘老师真容</span>][<span class="hljs-symbol">1</span>].然后在文档的结尾位变量赋值（网址）[<span class="hljs-symbol">1</span>]: <span class="hljs-link">https://img.cyfan.top/pic/LLS.jpg</span></code></pre></div><p>会得到:<br>这个链接用 1 作为网址变量 <a href="https://img.cyfan.top/pic/LLS.jpg" target="_blank" rel="noopener">刘老师真容</a>.<br>然后在文档的结尾位变量赋值（网址）</p><blockquote><p><strong>提示</strong><br>如果你对大小比较在意,可以使用html语法来写.具体写法在高级玩法写出.</p></blockquote><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><h3 id="无序排序"><a href="#无序排序" class="headerlink" title="无序排序:"></a>无序排序:</h3><p>使用<code>+</code>或<code>-</code>或<code>*</code>来做首标题<br>实例如下:</p><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-bullet">+ </span>科学作业:无<span class="hljs-bullet">+ </span>语文作业:翻倍<span class="hljs-bullet">+ </span>数学作业:超级加倍</code></pre></div><p>会得到:</p><ul><li>科学作业:无</li><li>语文作业:翻倍</li><li>数学作业:超级加倍</li></ul><blockquote><p><strong>注意</strong><br>无论是<code>+</code>或<code>-</code>或<code>*</code>,使用时与要列表的文字空一格空格!</p></blockquote><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表:"></a>有序列表:</h3><p>使用<code>数字</code>+<code>.</code>+<code>空格</code>+<code>文字</code>代替,如:</p><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-bullet">1. </span>写试卷<span class="hljs-bullet">2. </span>写两张试卷<span class="hljs-bullet">3. </span>写三张试卷</code></pre></div><p>会得到:</p><ol><li>写试卷</li><li>写两张试卷</li><li>写三张试卷</li></ol><blockquote><p><strong>警告</strong><br>一定要加空格!</p></blockquote><h2 id="列表镶嵌"><a href="#列表镶嵌" class="headerlink" title="列表镶嵌:"></a>列表镶嵌:</h2><p>如实例:在第二列前加上<kbd>Tab</kbd>一个即可!</p><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-bullet">+ </span>一级无序列表内容<span class="hljs-bullet">+ </span>二级无序列表内容<span class="hljs-bullet">+ </span>二级无序列表内容<span class="hljs-bullet">+ </span>二级无序列表内容<span class="hljs-bullet">- </span>一级无序列表内容<span class="hljs-bullet">1. </span>二级有序列表内容<span class="hljs-bullet">2. </span>二级有序列表内容<span class="hljs-bullet">3. </span>二级有序列表内容<span class="hljs-bullet">1. </span>一级有序列表内容<span class="hljs-bullet">+ </span>二级无序列表内容<span class="hljs-bullet">+ </span>二级无序列表内容<span class="hljs-bullet">+ </span>二级无序列表内容<span class="hljs-bullet">1. </span>一级有序列表内容<span class="hljs-bullet">1. </span>二级有序列表内容<span class="hljs-bullet">2. </span>二级有序列表内容<span class="hljs-bullet">3. </span>二级有序列表内容</code></pre></div><p>会得到:</p><ul><li>一级无序列表内容<ul><li>二级无序列表内容</li><li>二级无序列表内容</li><li>二级无序列表内容</li></ul></li></ul><ul><li>一级无序列表内容<ol><li>二级有序列表内容</li><li>二级有序列表内容</li><li>二级有序列表内容</li></ol></li></ul><ol><li>一级有序列表内容<ul><li>二级无序列表内容</li><li>二级无序列表内容</li><li>二级无序列表内容</li></ul></li></ol><ol><li>一级有序列表内容<ol><li>二级有序列表内容</li><li>二级有序列表内容</li><li>二级有序列表内容</li></ol></li></ol><h2 id="分隔符："><a href="#分隔符：" class="headerlink" title="分隔符："></a>分隔符：</h2><p>以<code>- - -</code>为例子:<br>中级教程完.</p><hr>]]></content>
    
    
    <categories>
      
      <category>爱学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MarkDown</tag>
      
      <tag>语法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MarkDown语法详解（初级版）</title>
    <link href="/2019/07/21/MarkDown%E8%AF%AD%E6%B3%95%E8%AF%A6%E8%A7%A3%EF%BC%88%E5%88%9D%E7%BA%A7%E7%89%88%EF%BC%89/"/>
    <url>/2019/07/21/MarkDown%E8%AF%AD%E6%B3%95%E8%AF%A6%E8%A7%A3%EF%BC%88%E5%88%9D%E7%BA%A7%E7%89%88%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言:"></a>前言:</h1><h2 id="什么是MarkDown"><a href="#什么是MarkDown" class="headerlink" title="什么是MarkDown?"></a>什么是MarkDown?</h2><p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。<br>Markdown 语言在 2004 由约翰·格鲁伯（英语：John Gruber）创建。<br><img src="https://img.cyfan.top/pic/JG.jpg" srcset="/img/loading.gif" alt="约翰·格鲁伯" title="约翰·格鲁伯"><br>Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。<br>Markdown 编写的文档后缀为 .md, .markdown。<br>由于Markdown的轻量化、易读易写特性，并且对于图片，图表、数学式都有支持，当前许多网站都广泛使用 Markdown 来撰写帮助文档或是用于论坛上发表消息。例如：GitHub、reddit、Diaspora、Stack Exchange、OpenStreetMap 、SourceForge等。甚至Markdown能被使用来撰写电子书。因此,很多博客把它当作语法来写,比如WordPress,Hexo,或者是Typecho.<br>常见的编辑器有<a href="https://typora.io/" target="_blank" rel="noopener">Typora</a>,还有萌萌哒编辑器<a href="https://yosoro.coolecho.net/" target="_blank" rel="noopener">Yosoro</a><br>下面开始讲</p><h1 id="语法"><a href="#语法" class="headerlink" title="语法:"></a>语法:</h1><blockquote><p><strong>注意</strong><br>文章内所有名字纯属虚构,如有雷同,纯属巧合!</p></blockquote><h2 id="文字"><a href="#文字" class="headerlink" title="文字"></a>文字</h2><p>MarkDown的文字直接书写，与正常无区别<br>书写</p><div class="hljs"><pre><code class="hljs undefined">我是刘老师.</code></pre></div><p>会得到:</p><p>我是刘老师.</p><h2 id="标题："><a href="#标题：" class="headerlink" title="标题："></a>标题：</h2><p>基本上标题分两种：</p><h3 id="分隔符标题："><a href="#分隔符标题：" class="headerlink" title="分隔符标题："></a>分隔符标题：</h3><p>以<code>-</code>和<code>=</code>分隔成一级和二级标题:</p><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-section">我是一级刘老师---</span><span class="hljs-section">我是二级刘老师===</span></code></pre></div><p>会得到:</p><h2 id="我是一级刘老师"><a href="#我是一级刘老师" class="headerlink" title="我是一级刘老师"></a>我是一级刘老师</h2><h1 id="我是二级刘老师"><a href="#我是二级刘老师" class="headerlink" title="我是二级刘老师"></a>我是二级刘老师</h1><blockquote><p><strong>注意:</strong><br>无论是<code>-</code>还是<code>=</code>,只要三个及以上即可!</p></blockquote><h3 id="字符标题"><a href="#字符标题" class="headerlink" title="字符标题:"></a>字符标题:</h3><p>以<code>#</code>代替标识,<code>#</code>越多`,标题级别越低:<br>例子:</p><div class="hljs"><pre><code class="hljs undefined"># 我是一级刘老师## 我是二级刘老师### 我是三级刘老师#### 我是四级刘老师##### 我是五级刘老师###### 我是六级刘老师</code></pre></div><p>会得到:</p><h1 id="我是一级刘老师-1"><a href="#我是一级刘老师-1" class="headerlink" title="我是一级刘老师"></a>我是一级刘老师</h1><h2 id="我是二级刘老师-1"><a href="#我是二级刘老师-1" class="headerlink" title="我是二级刘老师"></a>我是二级刘老师</h2><h3 id="我是三级刘老师"><a href="#我是三级刘老师" class="headerlink" title="我是三级刘老师"></a>我是三级刘老师</h3><h4 id="我是四级刘老师"><a href="#我是四级刘老师" class="headerlink" title="我是四级刘老师"></a>我是四级刘老师</h4><h5 id="我是五级刘老师"><a href="#我是五级刘老师" class="headerlink" title="我是五级刘老师"></a>我是五级刘老师</h5><h6 id="我是六级刘老师"><a href="#我是六级刘老师" class="headerlink" title="我是六级刘老师"></a>我是六级刘老师</h6><blockquote><p><strong>注意</strong><br>以#来做标题不得超过6个！</p></blockquote><h2 id="段落"><a href="#段落" class="headerlink" title="段落:"></a>段落:</h2><p>MarkDown的段落直接换行，与正常无区别.</p><h2 id="字体"><a href="#字体" class="headerlink" title="字体:"></a>字体:</h2><p>MarkDown可用字体如下:</p><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-emphasis">*我是斜着的刘老师*</span><span class="hljs-emphasis">_我也是斜着的刘老师_</span><span class="hljs-strong">**我是粗粗的刘老师**</span><span class="hljs-strong">__我也是粗粗的刘老师__</span><span class="hljs-strong">***我是又粗又斜的刘老师**</span>*<span class="hljs-strong">___我也是又粗又斜的刘老师__</span>_</code></pre></div><p>你会得到:<br><em>我是斜着的刘老师</em><br><em>我也是斜着的刘老师</em><br><strong>我是粗粗的刘老师</strong><br><strong>我也是粗粗的刘老师</strong><br><strong><em>我是又粗又斜的刘老师</em></strong><br><strong><em>我也是又粗又斜的刘老师</em></strong></p><h2 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h2><p>用<code>~~</code>把要删除的文字包起来</p><div class="hljs"><pre><code class="hljs undefined">刘老师:今天试卷加~~三张~~ 四张!</code></pre></div><p>会得到:</p><p>刘老师:今天试卷加<del>三张</del> 四张!</p><h2 id="引用-有时可做警告"><a href="#引用-有时可做警告" class="headerlink" title="引用(有时可做警告)"></a>引用(有时可做警告)</h2><p>语法:</p><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-quote">&gt; 刘：YRWS,ZSWF</span></code></pre></div><p>得到:</p><blockquote><p>刘：YRWS,ZSWF</p></blockquote><p>还可以多级引用:</p><div class="hljs"><pre><code class="hljs undefined">&gt; 我是被引用的刘老师.<span class="hljs-meta">&gt;&gt;</span> 我是被引用的刘老师.<span class="hljs-meta">&gt;&gt;</span>&gt; 我是被引用的刘老师.<span class="hljs-meta">&gt;&gt;</span>&gt;&gt; 我是被引用的刘老师.<span class="hljs-meta">&gt;&gt;</span>&gt;&gt;&gt; 我是被引用的刘老师.<span class="hljs-meta">&gt;&gt;</span>&gt;&gt;&gt;&gt; 我是被引用的刘老师.<span class="hljs-meta">&gt;&gt;</span>&gt;&gt;&gt;&gt;&gt; 我是被引用的刘老师.<span class="hljs-meta">&gt;&gt;</span>&gt;&gt;&gt;&gt;&gt;&gt; 我是被引用的刘老师.<span class="hljs-meta">&gt;&gt;</span>&gt;&gt;&gt;&gt;&gt;&gt;&gt; 我是被引用的刘老师.</code></pre></div><blockquote><p>我是被引用的刘老师.</p><blockquote><p>我是被引用的刘老师.</p><blockquote><p>我是被引用的刘老师.</p><blockquote><p>我是被引用的刘老师.</p><blockquote><p>我是被引用的刘老师.</p><blockquote><p>我是被引用的刘老师.</p><blockquote><p>我是被引用的刘老师.</p><blockquote><p>我是被引用的刘老师.</p><blockquote><p>我是被引用的刘老师.</p></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote><p>好像可以一直下去</p><blockquote><p><strong>注意</strong><br>如果你想要跳出引用,请换行再写!</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码:"></a>代码:</h2><h3 id="单行代码"><a href="#单行代码" class="headerlink" title="单行代码:"></a>单行代码:</h3><p>用`包裹</p><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块:"></a>代码块:</h3><p>用```把代码包裹<br>此处不好举例,不再举例了.</p><blockquote><p><strong>提示</strong><br>在```后加上代码类型可以给予代码高亮欧!</p></blockquote><p>初级教程完,接下来请去中级教程.</p><hr>]]></content>
    
    
    <categories>
      
      <category>爱学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MarkDown</tag>
      
      <tag>语法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>国内加快NPM下载速度</title>
    <link href="/2019/07/19/%E5%9B%BD%E5%86%85%E5%8A%A0%E5%BF%ABNPM%E4%B8%8B%E8%BD%BD%E9%80%9F%E5%BA%A6/"/>
    <url>/2019/07/19/%E5%9B%BD%E5%86%85%E5%8A%A0%E5%BF%ABNPM%E4%B8%8B%E8%BD%BD%E9%80%9F%E5%BA%A6/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>大家都知道，在国内下载Github上文件是什么情景。<br>对＜（＾－＾）＞，就是那个8kb/s的结果！<br>这是因为<code>不为人知的秘密</code>所造成的。<br>同样，在NPM下载中也是很痛苦的。<br>以下载cnpm为例：<br>在命令提示符中键入<code>npm install -g cnpm</code>,结果可能是这样:</p><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-attribute">C</span>:\Users\CYF&gt;npm install -g cnpm[...................]<span class="hljs-attribute">fetchMetadata</span>: sill resolveWithNewModule cnpm<span class="hljs-variable">@6</span>.<span class="hljs-number">1.0</span> checking installable status</code></pre></div><p>就这样卡半天。<br>5分钟后:</p><div class="hljs"><pre><code class="hljs undefined">C:<span class="hljs-symbol">\U</span>sers<span class="hljs-symbol">\C</span>YF<span class="hljs-symbol">\A</span>ppData<span class="hljs-symbol">\R</span>oaming<span class="hljs-symbol">\n</span>pm<span class="hljs-symbol">\c</span>npm -&gt; C:<span class="hljs-symbol">\U</span>sers<span class="hljs-symbol">\C</span>YF<span class="hljs-symbol">\A</span>ppData<span class="hljs-symbol">\R</span>oaming<span class="hljs-symbol">\n</span>pm<span class="hljs-symbol">\n</span>ode_modules<span class="hljs-symbol">\c</span>npm<span class="hljs-symbol">\b</span>in<span class="hljs-symbol">\c</span>npm+ cnpm@6.1.0added 691 packages from 924 contributors in 308.39s</code></pre></div><p>308.39秒啊啊啊啊啊,这到底卡了多久啊!</p><h1 id="如何解决？"><a href="#如何解决？" class="headerlink" title="如何解决？"></a>如何解决？</h1><h2 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h2><p>在每行npm后加上<a href="registry.npm.taobao.org">npm淘宝镜像</a>(不是那个淘宝),加上<code>--registry=https://registry.npm.taobao.org</code>.<br>如<code>npm install -g cnpm</code>变成<code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code><br>那样能快很多。先卸载cnpm：</p><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-built_in">npm</span> uninstall cnpm</code></pre></div><p>会得到:</p><div class="hljs"><pre><code class="hljs undefined">npm WARN optional SKIPPING OPTIONAL <span class="hljs-string">DEPENDENCY:</span> fsevents@<span class="hljs-number">1.2</span><span class="hljs-number">.9</span> (node_modules\fsevents):npm WARN notsup SKIPPING OPTIONAL <span class="hljs-string">DEPENDENCY:</span> Unsupported platform <span class="hljs-keyword">for</span> fsevents@<span class="hljs-number">1.2</span><span class="hljs-number">.9</span>: wanted &#123;<span class="hljs-string">"os"</span>:<span class="hljs-string">"darwin"</span>,<span class="hljs-string">"arch"</span>:<span class="hljs-string">"any"</span>&#125; (<span class="hljs-string">current:</span> &#123;<span class="hljs-string">"os"</span>:<span class="hljs-string">"win32"</span>,<span class="hljs-string">"arch"</span>:<span class="hljs-string">"x64"</span>&#125;)audited <span class="hljs-number">9067</span> packages <span class="hljs-keyword">in</span> <span class="hljs-number">26.562</span>sfound <span class="hljs-number">0</span> vulnerabilities</code></pre></div><p>呃呃呃,卸载还比安装快.<br>再安装:</p><div class="hljs"><pre><code class="hljs undefined">C:<span class="hljs-symbol">\U</span>sers<span class="hljs-symbol">\C</span>YF<span class="hljs-symbol">\A</span>ppData<span class="hljs-symbol">\R</span>oaming<span class="hljs-symbol">\n</span>pm<span class="hljs-symbol">\c</span>npm -&gt; C:<span class="hljs-symbol">\U</span>sers<span class="hljs-symbol">\C</span>YF<span class="hljs-symbol">\A</span>ppData<span class="hljs-symbol">\R</span>oaming<span class="hljs-symbol">\n</span>pm<span class="hljs-symbol">\n</span>ode_modules<span class="hljs-symbol">\c</span>npm<span class="hljs-symbol">\b</span>in<span class="hljs-symbol">\c</span>npm+ cnpm@6.1.0added 691 packages from 924 contributors in 97.818s</code></pre></div><h2 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h2><p>直接使用<code>cnpm</code>代替<code>npm</code>.<br>如<code>npm install -g cnpm</code>变成<code>cnpm install -g cnpm</code><br>原理与方法一相同，不再阐述。</p><h2 id="方法三："><a href="#方法三：" class="headerlink" title="方法三："></a>方法三：</h2><p>可以用全局代理软件如<code>Proxifier</code>给<code>npm</code>挂代理,使他绕过<code>不为人知的秘密</code>,加快下载速度.<br>但不建议,因为这种方法麻烦,用方法一二完全可以代替.</p><h1 id="F-amp-Q："><a href="#F-amp-Q：" class="headerlink" title="F&amp;Q："></a>F&amp;Q：</h1><h2 id="Q：镜像站是什么？"><a href="#Q：镜像站是什么？" class="headerlink" title="Q：镜像站是什么？"></a>Q：镜像站是什么？</h2><h2 id="F：所谓镜像站，就是把你现有的网站放在另外一个地方的服务器上，当然，这个服务器既可是你购置而托管的，又可是虚拟的服务器。如果你把网页放在两个以上不同国家或地区的服务器上，那就说明你已为你的网站建立了多重镜像站，这样可以加快你的网站的访问速度，称之为“多重镜像站”。镜像站就跟镜子一样。一般是个人网站的站长为自己的站做一个备份，也就是说，一个站由于流量或其它原因访问不到时，人们可以去另一个一模一样的站看。这个站还可以起到分流，减少服务器压力的作用。不过，这些都是由于个人网站的服务器不能接受太多的访问量而采取的办法。商业网站一般不用这样的办法。因为用户要记两个域名，内容要上传两次，要随时保持两个地方一致，内容一多非常麻烦。而淘宝npm的服务器构建在国内，加快了访问速度。（部分摘自百度百科：镜像站）"><a href="#F：所谓镜像站，就是把你现有的网站放在另外一个地方的服务器上，当然，这个服务器既可是你购置而托管的，又可是虚拟的服务器。如果你把网页放在两个以上不同国家或地区的服务器上，那就说明你已为你的网站建立了多重镜像站，这样可以加快你的网站的访问速度，称之为“多重镜像站”。镜像站就跟镜子一样。一般是个人网站的站长为自己的站做一个备份，也就是说，一个站由于流量或其它原因访问不到时，人们可以去另一个一模一样的站看。这个站还可以起到分流，减少服务器压力的作用。不过，这些都是由于个人网站的服务器不能接受太多的访问量而采取的办法。商业网站一般不用这样的办法。因为用户要记两个域名，内容要上传两次，要随时保持两个地方一致，内容一多非常麻烦。而淘宝npm的服务器构建在国内，加快了访问速度。（部分摘自百度百科：镜像站）" class="headerlink" title="F：所谓镜像站，就是把你现有的网站放在另外一个地方的服务器上，当然，这个服务器既可是你购置而托管的，又可是虚拟的服务器。如果你把网页放在两个以上不同国家或地区的服务器上，那就说明你已为你的网站建立了多重镜像站，这样可以加快你的网站的访问速度，称之为“多重镜像站”。镜像站就跟镜子一样。一般是个人网站的站长为自己的站做一个备份，也就是说，一个站由于流量或其它原因访问不到时，人们可以去另一个一模一样的站看。这个站还可以起到分流，减少服务器压力的作用。不过，这些都是由于个人网站的服务器不能接受太多的访问量而采取的办法。商业网站一般不用这样的办法。因为用户要记两个域名，内容要上传两次，要随时保持两个地方一致，内容一多非常麻烦。而淘宝npm的服务器构建在国内，加快了访问速度。（部分摘自百度百科：镜像站）"></a>F：所谓镜像站，就是把你现有的网站放在另外一个地方的服务器上，当然，这个服务器既可是你购置而托管的，又可是虚拟的服务器。如果你把网页放在两个以上不同国家或地区的服务器上，那就说明你已为你的网站建立了多重镜像站，这样可以加快你的网站的访问速度，称之为“多重镜像站”。镜像站就跟镜子一样。一般是个人网站的站长为自己的站做一个备份，也就是说，一个站由于流量或其它原因访问不到时，人们可以去另一个一模一样的站看。这个站还可以起到分流，减少服务器压力的作用。不过，这些都是由于个人网站的服务器不能接受太多的访问量而采取的办法。商业网站一般不用这样的办法。因为用户要记两个域名，内容要上传两次，要随时保持两个地方一致，内容一多非常麻烦。而淘宝npm的服务器构建在国内，加快了访问速度。（部分摘自百度百科：镜像站）</h2><h2 id="Q：如果镜像站上没有npm的文件，怎么办？"><a href="#Q：如果镜像站上没有npm的文件，怎么办？" class="headerlink" title="Q：如果镜像站上没有npm的文件，怎么办？"></a>Q：如果镜像站上没有npm的文件，怎么办？</h2><h2 id="F：从-registry-npm-taobao-org-安装所有模块-当安装的时候发现安装的模块还没有同步过来-淘宝-NPM-会自动在后台进行同步-并且会让你从官方-NPM-registry-npmjs-org-进行安装-下次你再安装这个模块的时候-就会直接从-淘宝-NPM-安装了"><a href="#F：从-registry-npm-taobao-org-安装所有模块-当安装的时候发现安装的模块还没有同步过来-淘宝-NPM-会自动在后台进行同步-并且会让你从官方-NPM-registry-npmjs-org-进行安装-下次你再安装这个模块的时候-就会直接从-淘宝-NPM-安装了" class="headerlink" title="F：从 registry.npm.taobao.org 安装所有模块. 当安装的时候发现安装的模块还没有同步过来, 淘宝 NPM 会自动在后台进行同步, 并且会让你从官方 NPM registry.npmjs.org 进行安装. 下次你再安装这个模块的时候, 就会直接从 淘宝 NPM 安装了."></a>F：从 registry.npm.taobao.org 安装所有模块. 当安装的时候发现安装的模块还没有同步过来, 淘宝 NPM 会自动在后台进行同步, 并且会让你从官方 NPM registry.npmjs.org 进行安装. 下次你再安装这个模块的时候, 就会直接从 淘宝 NPM 安装了.</h2><hr>]]></content>
    
    
    <categories>
      
      <category>好方法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>NPM</tag>
      
      <tag>奇淫巧技</tag>
      
      <tag>Node.js</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>巧妙去除百度首页广告</title>
    <link href="/2019/07/17/%E5%B7%A7%E5%A6%99%E5%8E%BB%E9%99%A4%E7%99%BE%E5%BA%A6%E9%A6%96%E9%A1%B5%E5%B9%BF%E5%91%8A/"/>
    <url>/2019/07/17/%E5%B7%A7%E5%A6%99%E5%8E%BB%E9%99%A4%E7%99%BE%E5%BA%A6%E9%A6%96%E9%A1%B5%E5%B9%BF%E5%91%8A/</url>
    
    <content type="html"><![CDATA[<h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><p>百度首页有<del>新闻</del>广告，虽然声称新闻，实际上就是你会发现其中有大量广告。<br>好吧好吧，如果你一直坚定认为它是新闻，我也没办法。<br>下面说说如何去除</p><h2 id="去除前："><a href="#去除前：" class="headerlink" title="去除前："></a>去除前：</h2><p>这是你输入<a href="https://baidu.com" target="_blank" rel="noopener">https://baidu.com</a>时的场景：<br><img src="https://img.cyfan.top/pic/BAIDUADS.jpg" srcset="/img/loading.gif" alt="百度首页广告" title="去除前"></p><h2 id="做法："><a href="#做法：" class="headerlink" title="做法："></a>做法：</h2><p>在baidu.com 后跟上<code>/?tn=simple</code>,变成<a href="https://baidu.com/?tn=simple" target="_blank" rel="noopener">https://baidu.com?tn=simple</a><br><img src="https://img.cyfan.top/pic/BAIDUNOADS.jpg" srcset="/img/loading.gif" alt="百度首页广告" title="去除后"></p><h3 id="搞定！"><a href="#搞定！" class="headerlink" title="搞定！"></a>搞定！</h3><hr>]]></content>
    
    
    <categories>
      
      <category>好方法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>奇淫巧技</tag>
      
      <tag>百度</tag>
      
      <tag>广告</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
