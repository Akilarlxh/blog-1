<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>陈YFの博客(￣▽￣)&quot;</title>
  
  <subtitle>(｡･∀･)ﾉﾞ嗨</subtitle>
  <link href="https://blog.cyfan.top/atom.xml" rel="self"/>
  
  <link href="https://blog.cyfan.top/"/>
  <updated>2021-02-08T00:18:08.325Z</updated>
  <id>https://blog.cyfan.top/</id>
  
  <author>
    <name>CYF</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PanList：ServerLess百度网盘列表直链程序</title>
    <link href="https://blog.cyfan.top/p/32883f0c.html"/>
    <id>https://blog.cyfan.top/p/32883f0c.html</id>
    <published>2021-01-06T13:44:55.000Z</published>
    <updated>2021-02-08T00:18:08.325Z</updated>
    
    <content type="html"><![CDATA[<div class="note note-success"><h3 id="警告"><a href="#警告" class="headerlink" title="警告"></a>警告</h3><p>本篇文章在panlist发布后两天内写成，panlist尚处于高速迭代状态，本篇教程随时会失效！</p></div><blockquote><p><del>百度网盘2021年最新不限速下载方式是怎么回事呢？百度网盘相信大家都很熟悉，但是百度网盘2021年最新不限速下载方式是怎么回事呢，下面就让小编带大家一起了解吧。</del><br><del>百度网盘2021年最新不限速下载方式，其实就是PandownloadCloudFlareWorkers版本，大家可能会很惊讶百度网盘怎么会2021年最新不限速下载方式呢？但事实就是这样，小编也感到非常惊讶。</del><br><del>这就是关于百度网盘2021年最新不限速下载方式的事情了，大家有什么想法呢，欢迎在评论区告诉小编一起讨论哦！</del></p></blockquote><p>之前写过<a href="/p/74e90c90.html">GoogleDrive</a>、<a href="/p/4fb070ca.html">OneDrive</a> 的CloudFlare列表程序，这两个有个共同点，那就是国内都无法很好的下载，所以用CloudFlareWorkers作为中间件转发流量。</p><p>比较讽刺的是，CloudFlareWorkers用的都是国外节点，但以上两个运行于此的目录列表程序支持的下载速度却远远大于国内有节点的百度网盘，不说是移动BGP走香港有多好，至少我在『电信』网络环境下的下载速度都远远大于百度网盘。很显然，百度网盘作为垄断国内网盘市场的资本，既然已经度过了烧钱的时间，那么现在自然是能剩多少省多少，这就是『吃相难看』。</p><p>两年前，当微博上的人们开始质问突然『诈尸』的百度网盘微博账号，网友们才纷纷意识到自己的百度网盘被恶意限速了，紧接着，破解百度网盘限速的方式层出不穷。只是后来，这些方式一点一点被打压下去，最终戛然而止。</p><p>最近这几天因为在写<a href="https://github.com/HexoPlusPlus/HexoPlusPlus" target="_blank" rel="noopener">HexoPlusPlus: A ServerLess Hexo Dashboard</a> 正在努力学习CloudFlareWorkers。由于评论模块需要数据结构有关知识，可惜这一块知识大都都被一些所谓白嫖CloudFlareWorkers的教程所淹没：</p><p><img src="https://cdn.jsdelivr.net/npm/chenyfan-oss@1.1.5/101043.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="&quot;Google上CloudFlareWorkers搜索结果&quot;"></p><p>在查询有关资料的时候，Github上一颗冉冉新星引起了我的注意，<a href="https://github.com/teardr0p/PanList" target="_blank" rel="noopener">PanList</a> ,根据其Commit显示,这个仓库仅仅是两天前刚刚开辟的,但是本文写是就有61Star和21Fork 【当然我也有Star】，可见其热门程度。不过简单的翻看了一下我就明白其为何如此热门，第一，它是专门对付令人头疼的百度网盘，第二，它是构建于CloudFlareWorkers。</p><h1 id="起步"><a href="#起步" class="headerlink" title="起步"></a>起步</h1><p>电脑登录百度网盘：</p><p><img src="https://cdn.jsdelivr.net/npm/chenyfan-oss@1.1.5/101056.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="&quot;百度网盘&quot;"></p><p>按下F12进入开发者模式，选择<code>Application</code>模块，点击<code>Cookies</code>:</p><p><img src="https://cdn.jsdelivr.net/npm/chenyfan-oss@1.1.5/101101.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="&quot;Cookies&quot;"></p><p>在这里，我们需要获取两个Cookie：<code>BDUSS</code>和<code>STOKEN</code></p><h1 id="获取"><a href="#获取" class="headerlink" title="获取"></a>获取</h1><table><thead><tr><th>Github</th><th>JSDelivr</th></tr></thead><tbody><tr><td><a href="https://raw.githubusercontent.com/teardr0p/PanList/master/index.js" target="_blank" rel="noopener">原版Github下载地址</a></td><td><a href="https://cdn.jsdelivr.net/gh/teardr0p/PanList@master/index.js" target="_blank" rel="noopener">原版JSDelivr下载地址</a></td></tr></tbody></table><p>修改前面四行代码，分别为</p><div class="hljs"><pre><code class="hljs js"><span class="hljs-keyword">const</span> BDUSS = <span class="hljs-string">''</span><span class="hljs-keyword">const</span> STOKEN = <span class="hljs-string">''</span><span class="hljs-keyword">const</span> USERNAME = <span class="hljs-string">''</span><span class="hljs-keyword">const</span> PASSWORD = <span class="hljs-string">''</span></code></pre></div><p>将获取到的Cookie复制到第一行和第二行。第三、四行是登录后台所需的账号密码。</p><blockquote><p>AnyWay，你也可以将这些写入到后台变量</p></blockquote><p>新建一个Worker，将处理好的代码直接复制进去：</p><p><img src="https://cdn.jsdelivr.net/npm/chenyfan-oss@1.1.5/101307.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="复制代码"></p><p>保存并部署，确定。</p><h1 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h1><p><img src="https://cdn.jsdelivr.net/npm/chenyfan-oss@1.1.5/101107.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="绑定域名"></p><p>路由：<code>{待绑定的域名}/*</code> [后面*的原理是覆盖该路径下所有文件]<br>Worker：你新建的Worker名字</p><h1 id="评测"><a href="#评测" class="headerlink" title="评测"></a>评测</h1><p>登陆界面：</p><p><img src="https://cdn.jsdelivr.net/npm/chenyfan-oss@1.1.5/101115.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="login"></p><p>打开后：</p><p><img src="https://cdn.jsdelivr.net/npm/chenyfan-oss@1.1.5/101118.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><blockquote><p>挺讽刺的是，去除了百度网盘原始界面乱七八糟的东西，CloudFlareWorkers的国外服务器打开速度都比百度网盘快</p></blockquote><p>Chrome直接下载速度</p><p><img src="https://cdn.jsdelivr.net/npm/chenyfan-oss@1.1.5/101447.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>传递Cookie后IDM下载速度：</p><p><img src="https://cdn.jsdelivr.net/npm/chenyfan-oss@1.1.5/101120.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>注：单线程下载速率最终取决于百度网盘的限制，也就是说无论如何你也无法逃避百度网盘对源头的遏制，就在我下完<code>Soul</code>这部将近2GB的电影后，我的账号就被百度拉入黑名单，现在即使用IDM也只有80kb/s <span class="heimu">但是还是比原来的客户端快</span></p><h1 id="尾声"><a href="#尾声" class="headerlink" title="尾声"></a>尾声</h1><p>本质上panlist无非就是通过baidu没有公开的API通过Cookie鉴权来获取文件列表和下载，虽然依旧没有突破单线程下载限速，但至少实现了直链下载和多线程下载的功能，并且部署在CloudFlareWorkers上的方式确实大开眼界，无服务器应用的范围又扩展了一步，我十分看好这个项目。</p><p>另外，本人也在努力开发一款同样基于CloudFlareWorkers的评论系统，以下是截图：</p><p><img src="https://cdn.jsdelivr.net/npm/chenyfan-oss@1.1.5/101127.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>最后，来一句姗姗来迟的新年祝福：</p><p><img src="https://cdn.jsdelivr.net/npm/chenyfan-oss@1.1.5/happy.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;note note-success&quot;&gt;&lt;h3 id=&quot;警告&quot;&gt;&lt;a href=&quot;#警告&quot; class=&quot;headerlink&quot; title=&quot;警告&quot;&gt;&lt;/a&gt;警告&lt;/h3&gt;&lt;p&gt;本篇文章在panlist发布后两天内写成，panlist尚处于高速迭代状态，本</summary>
      
    
    
    
    <category term="好方法" scheme="https://blog.cyfan.top/categories/好方法/"/>
    
    
    <category term="CloudFlare" scheme="https://blog.cyfan.top/tags/CloudFlare/"/>
    
    <category term="网盘" scheme="https://blog.cyfan.top/tags/网盘/"/>
    
    <category term="百度网盘" scheme="https://blog.cyfan.top/tags/百度网盘/"/>
    
    <category term="CloudFlareWorkers" scheme="https://blog.cyfan.top/tags/CloudFlareWorkers/"/>
    
    <category term="薅羊毛" scheme="https://blog.cyfan.top/tags/薅羊毛/"/>
    
  </entry>
  
  <entry>
    <title>无服务器搭建Artalk评论系统后端</title>
    <link href="https://blog.cyfan.top/p/480ab6ed.html"/>
    <id>https://blog.cyfan.top/p/480ab6ed.html</id>
    <published>2020-10-01T08:57:09.000Z</published>
    <updated>2021-02-08T00:18:08.325Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这篇的无服务器部署Artalk，指的是NoServer而不是Serverless</p></blockquote><blockquote><p>这篇所写的是部署后端，关于前端部署十分简单，这里不多阐述</p></blockquote><p><a href="https://artalk.js.org/" target="_blank" rel="noopener">Artalk</a>，一款简洁有趣的自托管评论系统。此时，Valine作为老大哥就不得不跳出来了。但是，作为Valine的Leancloud作为第三方托管，数据放在别人那里总是不舒服的，譬如<a href="https://status.leancloud.cn/" target="_blank" rel="noopener">2020/9/24Leancloud华北节点云引擎被 DDoS 攻击</a><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/5c53d1e2ad89f.jpg?q=45" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/20201001071558.png?q=45" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="image-20201001071514956"></p><p>或者说LeanCloud将开发版限额一限在限，亦或者leancloud多次宕机,作为自由开放的我自然不舒服。加上leancloud开发版的SLA实在令人担忧【不包括休眠时间，一个月内宕机超过20次（不过leancloud开发版确实没有保证SLA）】，以及比较严重的管理员冒充。我一直再找一个能用自己服务器托管评论系统，真巧，我找到了Artalk。Artalk的优点：</p><ul><li><p>轻量简洁 (~23kB gzipped)</p></li><li><p>有趣有爱</p></li><li><p>自托管</p></li><li><p>Markdown</p></li><li><p>表情自定</p></li><li><p>滑稽表情包</p></li><li><p><strong>管理员密码，防冒名</strong></p></li><li><p>验证码，提交频率限制</p></li><li><p><strong>通知中心</strong>，邮件提醒</p></li><li><p>自定义某些页面<strong>仅管理员可评论</strong></p></li><li><p>无限层级回复</p></li><li><p>滚动加载更多</p></li><li><p><strong>评论折叠</strong></p></li><li><p>一页多个评论</p></li><li><p>TypeScript</p></li><li><p><strong>提交频繁验证码</strong></p></li><li><p><strong>无数据库</strong></p><p><span class="heimu">当然没有垃圾评论检测就很蛋疼</span></p></li></ul><p>有服务器部署起来相当简单，宝塔【虽然被炸0day，不过修修补补还能用】+Artalk能实现5分钟部署完毕<a href="https://blog.jalenchuh.cn/posts/artalk-api-php/" target="_blank" rel="noopener">【Jalen的Artalk 自托管评论系统的后端部署】</a>，但是，习惯Valine的群友一看到后端部署就立刻皱起了眉头：我没有服务器，怎么办？<img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/BnTMX35EPxleVmA.jpg?q=45" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>Artalk的后端是PHP的，虽然作者也承诺了会开发别的后端<code>Go API / Node API / Python API</code>，但迟迟没有写出来，考虑到<a href="https://github.com/qwqcode" target="_blank" rel="noopener">QWQCODE</a>是个学生【我也是】，那么咕咕咕就情有可原了。<img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/5c53d78c3f4a5.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>实际上，我用的是Euserv白嫖的，至少SLA还是过的去【&gt;=99%】，但是无论是申请还是部署都非常麻烦。此时，我就在想，既然有免费的php托管商，何苦不用呢？<img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/5896e9712a3c1.gif" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>目前找到两个：Gearhost和000webhost</p><blockquote><p>注意，heroku虽然也有免费容器部署php，但是heroku是沙盒制度，一个评论存储为文件后会删除，所以heroku并不适合作为artalk后端。</p></blockquote><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="设置Artalk"><a href="#设置Artalk" class="headerlink" title="设置Artalk"></a>设置Artalk</h2><p>与其它评论系统不同，artalk本身并没有做到开箱即用这一特点，所以，你还要做一些事先准备。</p><h3 id="GithubAction-Composer安装"><a href="#GithubAction-Composer安装" class="headerlink" title="GithubAction+Composer安装"></a>GithubAction+Composer安装</h3><p>Artalk为了缩小原文件大小，并没有安装好依赖，依赖需要你自己安装。</p><p>如果你本地有composer，那就直接克隆本地运行composer。但不论其便携性还是效率都不高【composer安装起来比较麻烦】，所以，我建议此处用GithubAction实现composer安装。当然你有composer环境就可以直接clone在本地安装。<img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/5896ece29d8a5.gif" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>进入<a href="https://github.com/qwqcode/Artalk-API-PHP" target="_blank" rel="noopener">原项目</a>，Fork到你自己的账户</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/20201001073813.png?a=45" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="image-20201001073812407"></p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/20201001073914.png?q=45" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="image-20201001073913581"></p><p>新建一个文件，文件名为：<code>.github/workflows/composer.yml</code></p><p>内容为：</p><div class="hljs"><pre><code class="hljs yml"><span class="hljs-attr">name:</span> <span class="hljs-string">composer</span><span class="hljs-attr">on:</span> <span class="hljs-attr">  push:</span><span class="hljs-attr">    branches:</span> <span class="hljs-bullet">      -</span> <span class="hljs-string">master</span> <span class="hljs-comment"># build master branch only</span><span class="hljs-attr">jobs:</span><span class="hljs-attr">  download:</span><span class="hljs-attr">    runs-on:</span> <span class="hljs-string">ubuntu-latest</span><span class="hljs-attr">    steps:</span><span class="hljs-attr">    - name:</span> <span class="hljs-string">Checkout</span><span class="hljs-attr">      uses:</span> <span class="hljs-string">actions/checkout@v2</span><span class="hljs-attr">      with:</span><span class="hljs-attr">        ref:</span> <span class="hljs-string">master</span><span class="hljs-attr">    - name:</span> <span class="hljs-string">Install</span><span class="hljs-attr">      run:</span> <span class="hljs-string">|        npm install composer        composer install                </span><span class="hljs-attr">    - name:</span> <span class="hljs-string">Deploy</span><span class="hljs-attr">      uses:</span> <span class="hljs-string">peaceiris/actions-gh-pages@v3</span><span class="hljs-attr">      with:</span><span class="hljs-attr">        github_token:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.TOKEN</span> <span class="hljs-string">&#125;&#125;</span><span class="hljs-attr">        publish_dir:</span> <span class="hljs-string">./</span></code></pre></div><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/20201001074024.png?q=45" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="image-20201001074023800"></p><p>设置Secret，NAME为<code>TOKEN</code>,内容为你的GithubTOKEN.【Token的获取与这篇文章关联不大】，请自行百度。</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/20201001081903.png?q=45" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="image-20201001081902077"></p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/20201001081942.png?q=45" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="image-20201001081941932"></p><p>回到仓库，<strong>新建一个空白的<code>.htaccess 文件夹，里面什么都不写</code></strong><sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="此处不写.htaccess，gearhost就会莫名其妙炸500错误">[1]</span></a></sup>，并删除根目录底下的<code>.gitignore</code>触发GithubAction<img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/%E6%83%B3%E4%B8%80%E6%83%B3.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><blockquote><p>此处必须删除<code>.gitignore</code>【或者你自行修改】，否则接下来出错一律不管</p></blockquote><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/20201001082247.png?q=45" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>稍后即部署完毕</p><h3 id="本地修改配置文件"><a href="#本地修改配置文件" class="headerlink" title="本地修改配置文件"></a>本地修改配置文件</h3><p>Clone你的仓库，指定为gh-pages分支</p><div class="hljs"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> -b gh-pages https://github.com/ChenYFan-Tester/Artalk-API-PHP.git</code></pre></div><blockquote><p>-b是强制指定分支的意思</p></blockquote><blockquote><p>速度慢试试github.com.cnpmjs.org，阿里github镜像</p></blockquote><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/20201001082654.png?q=45" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="image-20201001082653387"></p><p>打开并修改<code>Config.example.php</code> 具体参照<a href="https://github.com/qwqcode/Artalk-API-PHP" target="_blank" rel="noopener">官方文档</a></p><p>完毕后退出，将<code>Config.example.php</code>重命名为<code>Config.php</code></p><p>此时,你的artalk安装终于告一段落,但是,你还没有将他们部署上去.</p><h1 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h1><h2 id="Gearhost"><a href="#Gearhost" class="headerlink" title="Gearhost"></a>Gearhost</h2><p>Gearhost其实是一个小有名气的托管商，Free计划提供了最高一线程、每小时256MB内存、每小时5%CPU周期和每月1GB流量，作为评论托管是完全足够的。并且不需要信用卡。</p><p>进入<a href="https://www.gearhost.com/" target="_blank" rel="noopener">Gearhost</a>注册一个账号,新建一个免费的CloudSite。</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/20201001083231.png?q=45" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="image-20201001083231112"></p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/20201001083259.png?q=45" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="image-20201001083258674"></p><p>构建完毕后稍等片刻，进入面板设置：</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/20201001083743.png?q=45" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="image-20201001083743275"></p><p>PHP版本设置为7.1</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/20201001085603.png?q=45" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="image-20201001085602629"></p><p><code>Virtual Directories</code>网址设置为<code>/</code>路径设置为<code>site\wwwroot\public\</code></p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/20201001084000.png?q=45" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="image-20201001083959803"></p><p>进入<code>Publish</code>选项卡，勾选<code>Local Git</code>，<code>Activate</code>这个方式</p><blockquote><p>注意，我强烈不推荐你使用FTP上传，FTP看起来有图形化很方便，但是请注意，Composer后的文件将近<strong>300+</strong>，FTP最致命的上传方式是<strong>每上传一个文件就会握一次手</strong>，这样子会严重浪费你的时间。而是用Github链接的同学我就要考虑你的危险的想法了，如果<strong>没有</strong>将仓库设置为Private，那么用Github链接是一个非常<strong>不明智</strong>的选择</p></blockquote><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/20201001084334.png?q=45" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="image-20201001084334323"></p><p>绑定git，上传三步走，<code>git init &amp;&amp; git add . &amp;&amp; git commit -m &quot;OHH&quot; &amp;&amp; git push website master</code></p><p>绑定域名什么不多说了，建议套一层CloudFlare。</p><p>Gearhost所用的共享ip，来自美国 科罗拉多州 丹佛，三网优化都不好。当然回源CloudFlare还是不错的。</p><p>DEMO：<code>https://artalk-pub1.cyfan.top/</code></p><p>SLA：还在测试，大约95%，你可以前往<a href="https://status.cyfan.top" target="_blank" rel="noopener">https://status.cyfan.top</a>查看详情<img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/5c53d1904dcb2.gif" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>在页面id为12345有几个测试评论，你可以去测试一下，跨域均设置为’*‘。</p><p>管理员用户名：admin</p><p>管理员邮箱：<a href="mailto:admin@admin.admin" target="_blank" rel="noopener">admin@admin.admin</a></p><p>管理员密码：admin</p><h2 id="000webhost"><a href="#000webhost" class="headerlink" title="000webhost"></a>000webhost</h2><p><a href="https://www.000webhost.com/" target="_blank" rel="noopener">000webhost</a>也是个著名的免费php托管商，虽然早年的种种行为看着十分恶心，但是好歹也是个能白嫖的托管商。000webhost提供了每个账户一个免费的容器，每个容器每月3GB流量、300MB空间、1w个文件和每天25次邮箱发送。</p><p>000webhost的部署相对简单些，直接将所有文件拖拽上传【因为它不支持git上传】，稍等即可</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/20201001150747.png?q=45" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="image-20201001150747082"></p><p>上传至<code>public_html</code>子文件夹下：</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/20201001151010.png?q=45" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="image-20201001151009729"></p><p>000webhost不支持设置运行目录，这意味着data文件夹将会被曝光，但是我们可以设置000webhost的但目录密码保护：</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/20201001151720.png?q=45" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="image-20201001151719382"></p><p>这样，当有人试图访问<code>data/comments.data.json</code> 时，就会遭到密码拦截。</p><h4 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h4><p>由于000webhost域名验证需要一段时间，请先前往域名托管商设置记录。比如我的app名字是XXX.000webhostapp.com，我要绑定的是artalk-pub2.cyfan.top，就应该这样设置：</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/20201001152945.png?q=45" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="image-20201001152944348"></p><blockquote><p>请注意000webhost验证域名是通过dns记录来验证的，在验证完毕前请不要开启CDN！</p></blockquote><p>绑定域名，请鼠标移至卡片上，点击QuickActions，点击Details</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/20201001152258.png?q=45" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="image-20201001152257105"></p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/20201001152417.png?q=45" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="image-20201001152417027"></p><p>点击My Domains,进入设置界面：</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/20201001153113.png?q=45" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="image-20201001153112150"></p><p>点击Add domain</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/20201001153038.png?q=45" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="image-20201001153038499"></p><p>选择PointDomain【毕竟把ns改到000webhost是不可能的】</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/20201001153224.png?q=45" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="image-20201001153224077"></p><p>如实填写，稍等即可。</p><p>DEMO:<a href="https://artalk-pub2.cyfan.top/public/" target="_blank" rel="noopener">https://artalk-pub2.cyfan.top/public/</a></p><p>SLA：还在测试，大约90%，你可以前往<a href="https://status.cyfan.top" target="_blank" rel="noopener">https://status.cyfan.top</a>查看详情</p><p>000webhost默认线路烂的和shit一样，强烈建议套CloudFlare</p><p>和另一个demo一样在页面id为12345有几个测试评论，你可以去测试一下，跨域为’*‘。</p><p>管理员用户名：admin</p><p>管理员邮箱：<a href="mailto:admin@admin.admin" target="_blank" rel="noopener">admin@admin.admin</a></p><p>管理员密码：admin</p><p>000webhost对于这些不能展现他的广告徽标的账户可能会存在限制处理，请注意【老恶心了】。</p><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>国庆作业有点多，这篇要不是被我<del>亲爱</del>的群友催的要紧，我也不会水这一篇啊呜呜呜。<img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/5896ece2a019f.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>如果你的artalk卡在了转圈圈的问题上，你可以在html前面加上这一句</p><div class="hljs"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://XXX.XXX.XXX/index.php"</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"preconnect"</span> <span class="hljs-attr">crossorigin</span>&gt;</span></code></pre></div><p><code>preconnect</code>可以强制在渲染页面试并发一个请求，可以有效解决5s超时问题和并发过多不稳定导致cancel问题。</p><p>另外你也可以用我的artalk脚本：</p><div class="hljs"><pre><code class="hljs http">https://cdn.jsdelivr.net/gh/ChenYFan-Tester/Artalk@gh-pages/Artalk.jshttps://cdn.jsdelivr.net/gh/ChenYFan-Tester/Artalk@gh-pages/Artalk.css</code></pre></div><ul><li>修改超时时间为60s</li><li>掩盖artalk标识</li><li><strong>杰哥</strong>提示语</li></ul><p>如果你觉得不放心，你可以亲自检查<a href="https://github.com/ChenYFan-Tester/Artalk/commits/master" target="_blank" rel="noopener">我做了什么</a>，我会尽量保证与原仓库同步。</p><p><del>国庆快乐！</del>写作业去了<img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/5c53dbe510bcf.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>此处不写.htaccess，gearhost就会莫名其妙炸500错误<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;这篇的无服务器部署Artalk，指的是NoServer而不是Serverless&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;这篇所写的是部署后端，关于前端部署十分简单，这里不多阐述&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;a hr</summary>
      
    
    
    
    <category term="随心记" scheme="https://blog.cyfan.top/categories/随心记/"/>
    
    
    <category term="评论" scheme="https://blog.cyfan.top/tags/评论/"/>
    
    <category term="Artalk" scheme="https://blog.cyfan.top/tags/Artalk/"/>
    
    <category term="无服务器" scheme="https://blog.cyfan.top/tags/无服务器/"/>
    
  </entry>
  
  <entry>
    <title>图床的千层套路</title>
    <link href="https://blog.cyfan.top/p/eb490c73.html"/>
    <id>https://blog.cyfan.top/p/eb490c73.html</id>
    <published>2020-09-12T13:27:41.000Z</published>
    <updated>2021-02-08T00:18:08.325Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>博客最近在细心打磨终于上95分了，其中我认为图片功劳不可没。<img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/cUEQrVYGFiDjqhy.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p></blockquote><p>2020年8月9日<a href="https://github.com/jsdelivr/jsdelivr/pull/18247/files" target="_blank" rel="noopener">Jsdelivr发布了一次使用政策：Create Acceptable Use Policy</a>，其中第4条Prohibited Use引起了众多议论：</p><div class="hljs"><pre><code class="hljs markdown"><span class="hljs-bullet">4. </span>Prohibited UseThe following behavior is prohibited:<span class="hljs-bullet"> 1. </span>Hosting or accessing content that:<span class="hljs-bullet">     - </span>contains malware or harmful code in any form,<span class="hljs-bullet">     - </span>violates proprietary rights of others,<span class="hljs-bullet">     - </span>is sexually explicit,<span class="hljs-bullet">     - </span>is potentially illegal in the EU or the USA.<span class="hljs-bullet"> 2. </span>Abusing the service and its resources, or using jsDelivr as a general-purpose<span class="hljs-code">    file or media hosting service. This includes, for example:</span><span class="hljs-bullet">     - </span>running an image hosting website and using jsDelivr as a storage for all<span class="hljs-code">       uploaded images,</span><span class="hljs-bullet">     - </span>hosting videos, file backups, or other files in large quantities.<span class="hljs-code">    We recognize that there are legitimate projects that consist of a large number</span><span class="hljs-code">    of files, and these are not considered abuse. For example: icons packs, apps,</span><span class="hljs-code">    or games with a large number of assets.</span></code></pre></div><p>其中<code>running an image hosting website and using jsDelivr as a storage for all uploaded images</code> 这一句相当的有歧义，要多少的图片才能算是图站？博客里面图片放里面算吗？上传的图片怎样才不行？<img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/TlAGjm6IvJSMVpq.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>反观网上流传的白嫖Github做图床，基本点进去都是<code>https://cdn.jsdelivr.net/gh/</code> 这样子的图床，这种行为，我不敢妄加评论。但是，jsdelivr诞生的意义似乎并不是为了图床而生的，这种行为也很难判断成滥用。<img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/5896ece29a8e0.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>使用政策发布之后，一时间，QQ群、v2ex、知乎上立刻就炸了锅。很多人猜测jsdelivr是不是滥用过度而禁止将其作为图床？免费图床的白嫖日子要结束了吗？更多的人，是在哭诉和询问那里还有像jsd一样优秀的<strong>图床</strong>可以白嫖，微博炸了，那里还有免费图床啊？</p><p>实际上，我一般采用的是<code>BackBlaze+CloudFlare</code> 但是自从八月底移动开始改道，从原先优秀的CMI绕路LAX后，国内CloudFlare访问质量再次暴跌，这不得不使我将博客迁至Vercel。好在八月份我有幸申请到了<code>doegdoge图床</code>使用权限，获得了国内较高速的图床.</p><p>但是，对于哪些没有没有图床的人来说，免费图床真的这么难以获得吗？</p><p>不好意思，<strong>免费图床非常多</strong>，只是你不会用而已，这篇文章，就是拯救面前陷入图床危机的你【当然是面向小白，大佬也可以在底下给我提意见鸭】。<img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/stick_56.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><h1 id="公益图床"><a href="#公益图床" class="headerlink" title="公益图床"></a>公益图床</h1><h2 id="sm-ms"><a href="#sm-ms" class="headerlink" title="sm.ms"></a>sm.ms</h2><p><a href="https://sm.ms" target="_blank" rel="noopener">https://sm.ms</a></p><p>推荐程度：★</p><p>首先推荐的是这个图床，loli.net域名经典重现。三年前此图床域名还有备案采用的是国内CDN，可惜后来因为滥用吊销备案号而被迫迁移国外，用的是CloudFlare。实际使用效果面向国内确实不太好，建议备用。</p><p>你不需要注册，拖拽直接上传，只要不违反大陆和香港法律，他就能永久保留你的图片</p><p><img src="https://i.loli.net/2020/09/12/OxvnMBwd3VA8uyD.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>可搭配PicGo</p><h2 id="Imgur"><a href="#Imgur" class="headerlink" title="Imgur"></a>Imgur</h2><p><a href="https://imgur.com" target="_blank" rel="noopener">https://imgur.com</a></p><p>推荐程度：★★</p><p>国外一家牛逼的图片托管服务商，你可以选择注册或不注册，同样的，拖拽上传，永久保留，其SLA有着相当高的保证。</p><p>然而很可惜的是，这种网站很早就在国内被<strong>DNS域名污染</strong>，也就意味着访客无法正常加载你的图片。这也就是被打为两颗星的原因。<img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/%E4%B8%8D%E8%AF%B4%E8%AF%9D.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>当然，你也可以通过<a href="#图像缓存服务">#图像缓存服务</a> 从而实现国内访问。</p><p>可搭配PicGo【需注册】</p><h2 id="去不图床"><a href="#去不图床" class="headerlink" title="去不图床"></a>去不图床</h2><p><a href="https://7bu.top/" target="_blank" rel="noopener">https://7bu.top/</a></p><p>推荐程度：★★★★</p><p>由<a href="https://dusays.com/241/" target="_blank" rel="noopener">杜老师</a>提供的个人公益图床，存储于阿里和腾讯的COS，官方保证SLA&gt;=99%，是一个不错的选择，当然，7bu毕竟是个人维护的图床，能不能永久撑下去还是个问题，我也没有做过深度评测，无法表明其可用性。</p><p>可搭配PicGo。</p><div class="hljs"><pre><code class="hljs yml"><span class="hljs-string">接口地址：https://7bu.top/api/upload</span><span class="hljs-string">post参数：image</span><span class="hljs-string">回调json：data.url</span></code></pre></div><p><a href="https://7bu.top/index/api.html" target="_blank" rel="noopener">更准确的API文档</a></p><p><img src="https://7.dusays.com/2020/09/13/aa555748a9f38.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><blockquote><p><del>而且，就在我上传测试图片的时候，明明已经表明图片已经上传，打开却发现COS提示404，这一点我不得陷入思考，个人维持的公益项目真的能保证SLA吗？<img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/%E4%BE%BF%E4%BE%BF.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></del></p></blockquote><blockquote><p>昨天上传的时候撞上服务器维修了，很抱歉做出了不够恰当的评价.7bu采用的是全国腾讯云CDN加速，国内访问速度十分优良。然而请注意，7bu刚开始建立的目的并不是面向全球【仅面对中国大陆游客】，这导致其大陆以外基本解析至国内西藏腾讯，访问效果并不好。并且，这是通过腾讯云的鉴黄，可能会存在误杀行为。具体使用请个人斟酌【不过作为开发环境还是可行的】。</p></blockquote><h1 id="白嫖的"><a href="#白嫖的" class="headerlink" title="白嫖的"></a>白嫖的</h1><h2 id="阿里图床"><a href="#阿里图床" class="headerlink" title="阿里图床"></a>阿里图床</h2><p><del>推荐程度：★★★★</del></p><p><del>我个人搭建的API：<a href="https://picbed.cyfan.top" target="_blank" rel="noopener">https://picbed.cyfan.top</a> 不保证上传SLA<img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/5c53ce897ab55.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></del></p><p><del>由于小鸡联通国内网络不太好，很有可能无法正常上传，<a href="https://github.com/ChenYFan-Tester/Alibaba_pic" target="_blank" rel="noopener">原项目已经开源</a> ，你完全可以通过在国内的机子或者是本地搭建以获得更佳体验。</del></p><p><del>如果上传成功了，图片将会托管于阿里云的CDN，无论是速度还是延迟都相当的优秀。</del></p><p><del>官方大厂，下载SLA有保障。</del></p><p><del>可搭配PicGo。</del></p><div class="hljs"><pre><code class="hljs yml"><span class="hljs-string">接口地址：https://picbed.cyfan.top/update.php</span><span class="hljs-string">post参数：file</span><span class="hljs-string">回调json：data.url</span></code></pre></div><p><strong>已失效，切勿使用</strong></p><h2 id="DogeDoge图床"><a href="#DogeDoge图床" class="headerlink" title="DogeDoge图床"></a>DogeDoge图床</h2><p>推荐程度：★★★★★</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/20200912192303.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="TEST"></p><p>其实很早就看到<a href="https://v2ex.com/t/659652" target="_blank" rel="noopener">V2EX的那篇征文了</a>：</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/20200912190301.png?q=45" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>可是当时我不够优秀啊<span class="heimu">虽然现在同样不优秀</span>，博客也没满一年啊，于是白嫖的心态搁浅了。<img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/5896e8a408253.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>后来突然看到<a href="https://blog.jalenchuh.cn/" content="nofollow" target="_blank" rel="noopener">Jalen的博客</a>也用了DogeDoge图床，这才突然意识到原来我已经满一年了。于是抱着试试看的心态向doge官方邮箱发送了邮件，结果真过了。。。</p><p>dogedoge拥有着国内相当不错的CDN，国内访问飞快，但是国外的访问质量的确不如人意。【反正此博客面向中国大陆】</p><p>而且，DogeDoge拥有着很良心的处理参数：</p><div class="hljs"><pre><code class="hljs yml"><span class="hljs-string">w：宽</span><span class="hljs-string">h：高</span><span class="hljs-string">mode：模式</span> <span class="hljs-bullet">-</span> <span class="hljs-string">crop</span> <span class="hljs-string">裁剪、clip</span> <span class="hljs-string">缩略</span><span class="hljs-string">fmt：格式</span> <span class="hljs-bullet">-</span> <span class="hljs-string">jpg、png、webp（原图为</span> <span class="hljs-string">gif，且没有</span> <span class="hljs-string">frame</span> <span class="hljs-string">参数时，不做任何裁切、缩略处理）</span><span class="hljs-string">frame：1</span> <span class="hljs-bullet">-</span> <span class="hljs-string">EOF帧，默认为</span> <span class="hljs-number">1</span> <span class="hljs-string">（对动画有效）</span><span class="hljs-string">q：压缩质量</span> <span class="hljs-bullet">-</span> <span class="hljs-number">1</span> <span class="hljs-bullet">-</span> <span class="hljs-number">100</span><span class="hljs-string">（默认</span> <span class="hljs-number">90</span> <span class="hljs-string">）</span><span class="hljs-string">rect：指定位置裁剪</span> <span class="hljs-bullet">-</span> <span class="hljs-string">top,left,w,h（若与</span> <span class="hljs-string">w</span> <span class="hljs-string">/</span> <span class="hljs-string">h</span> <span class="hljs-string">参数同时存在，则</span> <span class="hljs-string">会在</span> <span class="hljs-string">rect</span> <span class="hljs-string">裁剪过后，继续按照</span> <span class="hljs-string">w</span> <span class="hljs-string">/</span> <span class="hljs-string">h</span> <span class="hljs-string">的要求缩略）</span><span class="hljs-string">pos：（配合</span> <span class="hljs-string">w</span> <span class="hljs-string">/</span> <span class="hljs-string">h</span> <span class="hljs-string">）裁剪位置</span> <span class="hljs-bullet">-</span> <span class="hljs-string">top-left、top、top-right、left、center、right、bottom-left、bottom、bottom-right，默认为center</span><span class="hljs-string">pos</span> <span class="hljs-string">还有一个特殊的值</span> <span class="hljs-string">auto，该值目前为</span> <span class="hljs-string">alpha</span> <span class="hljs-string">状态，可以根据图片重点来进行</span> <span class="hljs-string">pos</span> <span class="hljs-string">的位置取舍。</span></code></pre></div><p>话说回来，DogeDoge也可以搭配PicGo使用。</p><div class="hljs"><pre><code class="hljs yml"><span class="hljs-string">接口地址：https://www.dogedoge.com/tools/upload/&#123;Your_Token&#125;</span><span class="hljs-string">post参数：file</span><span class="hljs-string">回调json：data.o_url</span></code></pre></div><p>当然，现在的Doge图床还是处于免费的试用期【Creater】，不过好在试用期过后价格也比较合理，一般的tester也足够使用，目前看来SLA还是不错的。</p><p>不过，申请不到dogedoge图床也没关系，看下去你就会发现，白嫖的路千千万万，何必执着于一条。<img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/stick_34.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/20200912205753.png?q=45" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><h2 id="BackBlaze"><a href="#BackBlaze" class="headerlink" title="BackBlaze"></a>BackBlaze</h2><p>推荐程度：★★★</p><p>具体可以看看<a href="/p/ce240368.html">这篇文章</a></p><h2 id="千奇百怪的"><a href="#千奇百怪的" class="headerlink" title="千奇百怪的"></a>千奇百怪的</h2><h2 id="Github-JSDelivr"><a href="#Github-JSDelivr" class="headerlink" title="Github+JSDelivr"></a>Github+JSDelivr</h2><p>正如我所说的，这种组合已经被广大博主所采纳，并且网上教程已经泛滥了，在这里不再阐述。</p><h2 id="npm-JSDelivr-amp-amp-Zhimg-amp-amp-bdstatic-amp-amp-自定义镜像"><a href="#npm-JSDelivr-amp-amp-Zhimg-amp-amp-bdstatic-amp-amp-自定义镜像" class="headerlink" title="npm+JSDelivr&amp;&amp;Zhimg&amp;&amp;bdstatic&amp;&amp;自定义镜像"></a>npm+JSDelivr&amp;&amp;Zhimg&amp;&amp;bdstatic&amp;&amp;自定义镜像</h2><p>推荐程度：★★★★★</p><p>为什么很多文章都没有提到用npm做图床？我想其中很大的原因是，白嫖jsd做图床的，很多都是小白【或者不愿花时间在于此的大佬】，同样的，这些文章面向的都是这些人，毕竟，以拖拽方式上传的Github和命令行方式上传，我想，大都数人会选择前者吧。</p><p>可是，你们没有想到的是，github文件镜像【github.com.cnpmjs.org是站点镜像】只有jsd一个，npm镜像可远远不止这一个啊！</p><p>让我们看看分别镜像在jsd、zhimg、bdstatic的文件怎么样：</p><p><img src="https://cdn.jsdelivr.net/npm/chenyfan-oss@0.0.1/1.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@0.0.1/2.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p><img src="https://code.bdstatic.com/npm/chenyfan-oss@0.0.1/3.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>【unpkg镜像用的是CloudFlare，国内加速效果不好，暂时不写】</p><p>jsd就不必多说了，国内拥有强劲的网宿节点支撑【虽然以前出现过网宿下游投毒】，速度丝滑无比，国外也有强劲的CloudFlare上岗，可谓国内外两不误。而且，jsd对于npm的package单文件没有大小限制，也就是说泡个视频也不是问题。</p><p>zhimg是知乎的unpkg镜像，也是一个不错的选择【阿里CDN】，知乎官方也未对此做出限制，日常使用是可以的。</p><p>bdstatic是百度的内用npm镜像，速度也很好【百度CDN】，但是请注意，bdstatic作为内用cdn，其拉取频率较慢，经常出现无法及时更新。</p><p>啊哈？不会上传？<br><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/stick_31.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt>去<a href="https://npmjs.org" target="_blank" rel="noopener">npm</a><br>官网注册个账号去,然后先：</p><div class="hljs"><pre><code class="hljs bash">npm login</code></pre></div><p>接着：</p><div class="hljs"><pre><code class="hljs bash">npm initnpm publish</code></pre></div><p>请注意，如果你之前用过淘宝镜像，那么请先手动切回源：</p><div class="hljs"><pre><code class="hljs bash">npm config <span class="hljs-built_in">set</span> registry https://registry.npmjs.org</code></pre></div><p>每一次发布图片后，你可以将原来的图片删除，更改<code>package.json</code> 版本号【向上增加】,然后<code>npm publish</code>即可</p><p>这个似乎可以搭配picgo，不过好像没这个插件，写起来也麻烦。。。</p><p>unpkg的国内镜像其实远远不止这些，包括七牛、饿了么、腾讯都有，不过这个就要自己找了。<img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/7DgSoyqwtYBxchE.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>一些推荐的npm【or unpkg镜像】：</p><div class="hljs"><pre><code class="hljs markdown">【jsd出品，网宿国内节点】https://cdn.jsdelivr.net/npm/【知乎出品，网宿国内节点】https://unpkg.zhimg.com/【百度出品，网宿国内节点】https://code.bdstatic.com/npm/【饿了么出品，网宿国内节点】https://shadow.elemecdn.com/npm/【怎么都是网宿的】</code></pre></div><p>或者说，你还可以自建unpkg镜像。</p><p>啊，你说你没有服务器反向代理unpkg？</p><p>其实，七牛的对象存储，腾讯的COS和阿里的OSS都是支持镜像回源的鸭！</p><p>七牛http流量每月免费10GB，腾讯的国内免费60GB6个月，作为自用完全足够了！</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/L6LVJL_1ZUM2ISQ%5D10R%7B3HF.png?q=45" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><h2 id="ipfs"><a href="#ipfs" class="headerlink" title="ipfs"></a>ipfs</h2><p>我曾经<a href="/2020/04/07/IPFS-CloudFlare-ServerLessWebPage/">写过关于ipfs的讲解</a> ,作为一个去中心化的存储系统拿来做公开图床其实挺不错的。</p><p>我个人搭建的ipfs镜像【托管于CloudFlareWorkers】：<a href="https://ipfs.cyfan.top" target="_blank" rel="noopener">https://ipfs.cyfan.top</a> <img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/5c53d78c3f4a5.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>我个人搭建的ipfs上传API：<a href="https://ipfsupload.cyfan.top" target="_blank" rel="noopener">https://ipfsupload.cyfan.top</a></p><div class="hljs"><pre><code class="hljs yml"><span class="hljs-string">接口地址：https://ipfsupload.cyfan.top/api/v0/add?pin=true</span><span class="hljs-string">post参数：file</span><span class="hljs-string">回调json：Hash</span></code></pre></div><blockquote><p>此处Hash获得的是文件的Qmhash，你还要依托ipfs镜像，如<a href="https://ipfs.cyfan.top/ipfs/{QmHash}" target="_blank" rel="noopener">https://ipfs.cyfan.top/ipfs/{QmHash}</a></p></blockquote><p><img src="https://ipfs.cyfan.top/ipfs/QmctXmCyxkN72nzoHMAgw1geR7u9XvK7sLo72W4bDZsCm2" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>顺便收录一些ipfs网关【可访问】：</p><div class="hljs"><pre><code class="hljs html">【北京 阿里云】https://hashnews.k1ic.com/【香港 阿里云】https://ipfs.jbb.one/【美国 DigitalOcean】https://ipfs.telos.miami/【Amazon】https://ipfs.oceanprotocol.com/</code></pre></div><p>你可以在<a href="https://ipfs.github.io/public-gateway-checker/" target="_blank" rel="noopener">https://ipfs.github.io/public-gateway-checker/</a>找到更多</p><h1 id="图片缓存服务"><a href="#图片缓存服务" class="headerlink" title="图片缓存服务"></a>图片缓存服务</h1><p>正如<a href="##Imgur">##Imgur</a>所说的，imgur在国内已经无法访问了，但是，图片缓存服务可以啊！</p><p><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/Usdr0IT.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>收集了一些图片缓存服务：</p><div class="hljs"><pre><code class="hljs http">【国内网宿节点，只能加载特定图床图片如imgur】https://search.pstatic.net/common/?src=【Akamai节点，没有使用限制】https://imageproxy.pimg.tw/resize?url=【CloudFlare节点】https://images.weserv.nl/?url=【CloudFlare节点】https://pic1.xuehuaimg.com/proxy/</code></pre></div><h1 id="PicGo的搭配使用"><a href="#PicGo的搭配使用" class="headerlink" title="PicGo的搭配使用"></a>PicGo的搭配使用</h1><p>PicGo默认已经集成了部分图床，其拖拽上传、自动复制剪贴板实在赢得了无数人的心。但是，对于一些冷门的图床支持似乎就不太好，这时候你需要用自定义web图床实现这一切：</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/20200912205225.png?q=45" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>我在上方介绍的图床如果支持web端上传，基本上就会写一个post请求，你可以依葫芦画瓢填写进去</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/20200912205449.png?q=45" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>这样子你就可以实现较为丝滑的上传图片了：</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/20200912210009.jpg?q=45" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/20200912210420.gif?q=45" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>【为了压缩方便删除了部分帧】</p><h1 id="后言"><a href="#后言" class="headerlink" title="后言"></a>后言</h1><p>实际上最保险的莫过于使用各大厂商的对象存储，当然这笔钱不大好使。<br>你也可以用自己的VPS搭建Chevereto，当然前提是你有VPS<img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/5c53de1a4d14d.gif" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;博客最近在细心打磨终于上95分了，其中我认为图片功劳不可没。&lt;img src=&quot;https://rmt.dogedoge.com/fetch/hi-c-oss/storage/cUEQrVYGFiDjqhy.jpg&quot; srcset=&quot;https://</summary>
      
    
    
    
    <category term="随心记" scheme="https://blog.cyfan.top/categories/随心记/"/>
    
    
    <category term="图床" scheme="https://blog.cyfan.top/tags/图床/"/>
    
    <category term="白嫖" scheme="https://blog.cyfan.top/tags/白嫖/"/>
    
    <category term="PicGo" scheme="https://blog.cyfan.top/tags/PicGo/"/>
    
    <category term="JSDelivr" scheme="https://blog.cyfan.top/tags/JSDelivr/"/>
    
  </entry>
  
  <entry>
    <title>多域名线程并发与DNS预解析</title>
    <link href="https://blog.cyfan.top/p/6ce8a474.html"/>
    <id>https://blog.cyfan.top/p/6ce8a474.html</id>
    <published>2020-08-24T13:08:38.000Z</published>
    <updated>2021-02-08T00:18:08.325Z</updated>
    
    <content type="html"><![CDATA[<p>军训结束,感想不多,就一句话</p><blockquote><p>【这就是个无限循环，每天重复训练一套动作，直到结束为止，毫无意义】</p></blockquote><p>回家之后我帮父母看店,顺便点开了浏览器,浏览器卡死了30s,终于完全加载出了一个花花绿绿的主页,是大名鼎鼎的2345主页.</p><p>虽然我很反感这种杂七杂八的傻逼导航,我也试图将主页换成magi或dogedoge,但是父亲就很不习惯,原因很难以接受:</p><div class="hljs"><pre><code class="hljs undefined">儿子啊，这样我怎么看天气啊。</code></pre></div><p>。。。</p><p>于是我顺手右键点开了源代码，闲着无聊看看，结果却刚看看就找到了好<del>康</del>看的东西：</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-24%20175355.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><div class="hljs"><pre><code class="hljs undefined">&lt;link <span class="hljs-attribute">rel</span>=<span class="hljs-string">"dns-prefetch"</span> <span class="hljs-attribute">href</span>=<span class="hljs-string">"https://union2.50bang.org"</span>&gt;&lt;link <span class="hljs-attribute">rel</span>=<span class="hljs-string">"dns-prefetch"</span> <span class="hljs-attribute">href</span>=<span class="hljs-string">"//h.2345cdn.net"</span>&gt;&lt;link <span class="hljs-attribute">rel</span>=<span class="hljs-string">"dns-prefetch"</span> <span class="hljs-attribute">href</span>=<span class="hljs-string">"//image.2345.com"</span>&gt;&lt;link <span class="hljs-attribute">rel</span>=<span class="hljs-string">"dns-prefetch"</span> <span class="hljs-attribute">href</span>=<span class="hljs-string">"//00imgmini.eastday.com"</span>&gt;&lt;link <span class="hljs-attribute">rel</span>=<span class="hljs-string">"dns-prefetch"</span> <span class="hljs-attribute">href</span>=<span class="hljs-string">"//01imgmini.eastday.com"</span>&gt;&lt;link <span class="hljs-attribute">rel</span>=<span class="hljs-string">"dns-prefetch"</span> <span class="hljs-attribute">href</span>=<span class="hljs-string">"//02imgmini.eastday.com"</span>&gt;&lt;link <span class="hljs-attribute">rel</span>=<span class="hljs-string">"dns-prefetch"</span> <span class="hljs-attribute">href</span>=<span class="hljs-string">"//03imgmini.eastday.com"</span>&gt;&lt;link <span class="hljs-attribute">rel</span>=<span class="hljs-string">"dns-prefetch"</span> <span class="hljs-attribute">href</span>=<span class="hljs-string">"//04imgmini.eastday.com"</span>&gt;&lt;link <span class="hljs-attribute">rel</span>=<span class="hljs-string">"dns-prefetch"</span> <span class="hljs-attribute">href</span>=<span class="hljs-string">"//05imgmini.eastday.com"</span>&gt;&lt;link <span class="hljs-attribute">rel</span>=<span class="hljs-string">"dns-prefetch"</span> <span class="hljs-attribute">href</span>=<span class="hljs-string">"//pos.baidu.com"</span>&gt;&lt;link <span class="hljs-attribute">rel</span>=<span class="hljs-string">"dns-prefetch"</span> <span class="hljs-attribute">href</span>=<span class="hljs-string">"//p.tanx.com"</span>&gt;&lt;link <span class="hljs-attribute">rel</span>=<span class="hljs-string">"dns-prefetch"</span> <span class="hljs-attribute">href</span>=<span class="hljs-string">"//gma.alicdn.com"</span>&gt;</code></pre></div><p>欸，<code>dns-prefetch</code> 是什么?</p><p>好吧，看起来你我都不懂.</p><h2 id="多并发请求"><a href="#多并发请求" class="headerlink" title="多并发请求"></a>多并发请求</h2><p>请问，一号网页和二号网页哪个加载更快？</p><blockquote><p>假设每张图片的大小为无限小,传输速度为无限大,<code>exmple1.com</code>是 <code>exmple.com</code> 的镜像</p></blockquote><p>一号：</p><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-meta">&lt;!doctype html&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://exmple.com/1.jpg"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://exmple.com/2.jpg"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://exmple.com/3.jpg"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://exmple.com/4.jpg"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://exmple.com/5.jpg"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://exmple.com/6.jpg"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://exmple.com/7.jpg"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://exmple.com/8.jpg"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://exmple.com/9.jpg"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://exmple.com/10.jpg"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://exmple.com/11.jpg"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://exmple.com/12.jpg"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre></div><p>二号：</p><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-meta">&lt;!doctype html&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://exmple.com/1.jpg"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://exmple.com/2.jpg"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://exmple.com/3.jpg"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://exmple.com/4.jpg"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://exmple.com/5.jpg"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://exmple.com/6.jpg"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://exmple1.com/7.jpg"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://exmple1.com/8.jpg"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://exmple1.com/9.jpg"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://exmple1.com/10.jpg"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://exmple1.com/11.jpg"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://exmple1.com/12.jpg"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre></div><p>好了公布答案了,很显然<span class="heimu">二</span>号加载更快。</p><p>这时候有人就会问了，凭什么啊！不是说图片无限小吗？右边的反而会增加dns解析时间，难道不会更慢吗？</p><p>好吧好吧，实际上，你以为的加载时间是这样的</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-24%20180740.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>可是实际上是这样子的：</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-24%20200044.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>欸这就很有意思了同学们，为什么最后六张会出现Pending状态？</p><p>实际上，浏览器是有并发请求数目限制【通常是2-8个】，虽然这种比较坑人，但这也是为了避免同时大量并发导致资源占用过度，并且只针对同一个域名的（例如向cdn.jsdelivr.net发送请求）。即一时间针对同一域名下的请求有一定数量限制。超过限制数目的请求会被阻塞并进入Pending状态。</p><p>从用户的角度来说，浏览器不可能无限量的并发请求，因此衍生出来了并发限制和HTTP/1.1的Keep alive。 所以，IE6/7在HTTP/1.1下的并发才<strong>2</strong>，但HTTP/1.0却是<strong>4</strong>。 而随着技术的发展，负载均衡和各类NoSQL的大量应用，基本已经足以应对C10K的问题。 但却并不是每个网站都懂得利用domain hash也就是多域名来加速访问。因此，新的浏览器加大了并发数的限制，但却仍控制在8以内。</p><p>然而从服务器的角度来讲，我们也可以窥见，无限制的并发请求无异于一次小型CC，对于保护服务器和优化用户体验还是相当重要的。</p><p>从网站上入手，实际上这一点相当容易理解,2345一打开就是少则五十多张图片同时加载,甚至那些下拉箭头为了兼容ie都还是图片而非fontawesome,如果不绕过并发限制,岂不是一片空白.</p><p>那么问题来了，如何避免堵塞？</p><p>答案显然易见,多换几个域名不就行了??这样图片分别从两个域名获取，直接避免恼火的Pending，</p><p>2345主页中 <code>00imgmini.eastday.com</code> 至 <code>05imgmini.eastday.com</code> 五个域名均是拿来绕开并发限制的。</p><h2 id="Cookie-Free"><a href="#Cookie-Free" class="headerlink" title="Cookie Free"></a>Cookie Free</h2><p>每请求一次资源，就会生成一次新的Cookie。如果网站每个资源cookie有1 KB、网站首页共150个资源时，用户在请求过程中需要发送150 KB的cookie信息，在512 Kbps的常见上行带宽下，需要长达3秒左右才能全部发送完毕。 尽管这个过程可以和页面下载不同资源的时间并发，但毕竟对速度造成了影响。 而且这些信息在js/css/images/html等静态资源上，几乎是没有任何必要的。</p><p>解决方案是启用和主站不同的域名来放置静态资源，也就是cookie free。</p><blockquote><p>注意此处所指的是主域名而非子域名，子域名的Cookie会和主域名共存</p></blockquote><p>但是这样，就孪生出一个极其严重的问题，多个域名，必然会加重<strong>DNS解析时间</strong>和<strong>SSL的握手时间</strong></p><h2 id="避免DNS拥堵"><a href="#避免DNS拥堵" class="headerlink" title="避免DNS拥堵"></a>避免DNS拥堵</h2><p>一旦采用<strong>多域名的方式绕开并发量限制</strong>，就会导致浏览器在请求时必须一个一个解析过去，从<code>00imgmini.eastday.com</code>至<code>05imgmini.eastday.com</code>，然而DNS解析时间虽然短，但是多个解析必然导致严重拖慢速度，此时我们就需要进行预解析。</p><blockquote><p>请注意，预解析在部分主流浏览器中支持，但是并不是所有页面和条件下都支持。</p></blockquote><p>正常情况下打开一个网页，浏览器会做出以下动作：</p><ol><li><p>浏览器向请求网址发起DNS解析</p></li><li><p>浏览器向服务器一个GET请求，拉起进入Pending</p></li><li><p>浏览器解析html，完成初步CSS渲染【此时标题栏显示标题】</p></li><li><p>进行js解析，并请求额外的资源</p></li></ol><p>DNS解析时间的浪费主要阻塞在第四步，为避免解析时间的阻塞，我们采用<code>dns-prefetch</code>进行优化.</p><p>在html头添加</p><div class="hljs"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">"x-dns-prefetch-control"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"on"</span> /&gt;</span></code></pre></div><p>向浏览器表明我需要预解析。</p><p>接着【建议】在<code>&lt;meta charset=&quot;UTF-8&quot;&gt;</code> 后添加</p><div class="hljs"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"dns-prefetch"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"//exmple.com"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"dns-prefetch"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"//exmple1.com"</span>&gt;</span></code></pre></div><p>表明强制解析这些域名。并且以后会一直记住这个域名的解析结果直到关闭为止。</p><p>//开始是为了适配 <code>https</code> 和 <code>http</code> 。就是当前请求链接是https ，那么这个//前面自动补充https ，反则补充http 。</p><h1 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h1><p>切记 <code>dns-prefetch</code> 不能滥用，它虽然能一定提升网页打开速度，但也会对浏览器产生一定负担。</p><p>这边的建议是，作为个人，我并不推荐将此方法运用于个人博客。原因很简单，你博客一次能有几张图片？如果你是开图站的，那么这个方法刚好可以运用到你的网站里，只要进行多域名分开并dns欲解析就可以进一步提升网站体验了。</p><p>最后上生肉：</p><blockquote><p>DNS prefetching is an attempt to resolve domain names before a user tries to follow a link. This is done using the computer’s normal DNS resolution mechanism; no connection to Google is used. Once a domain name has been resolved, if the user does navigate to that domain, there will be no effective delay due to DNS resolution time. The most obvious example where DNS prefetching can help is when a user is looking at a page with many links to various domains, such as a search results page. When we encounter hyperlinks in pages, we extract the domain name from each one and resolving each domain to an IP address. All this work is done in parallel with the user’s reading of the page, using minimal CPU and network resources. When a user clicks on any of these pre-resolved names, they will on average save about 200 milliseconds in their navigation (assuming the user hadn’t already visited the domain recently). More importantly than the average savings, users won’t tend to experience the “worst case” delays for DNS resolution, which are regularly over 1 second.</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;军训结束,感想不多,就一句话&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;【这就是个无限循环，每天重复训练一套动作，直到结束为止，毫无意义】&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;回家之后我帮父母看店,顺便点开了浏览器,浏览器卡死了30s,终于完全加载出了一个花花绿绿的主页,是大名</summary>
      
    
    
    
    <category term="好方法" scheme="https://blog.cyfan.top/categories/好方法/"/>
    
    
    <category term="DNS" scheme="https://blog.cyfan.top/tags/DNS/"/>
    
    <category term="预解析" scheme="https://blog.cyfan.top/tags/预解析/"/>
    
    <category term="优化" scheme="https://blog.cyfan.top/tags/优化/"/>
    
  </entry>
  
  <entry>
    <title>CFWorker-ODIndex中文文档&amp;使用教程</title>
    <link href="https://blog.cyfan.top/p/4fb070ca.html"/>
    <id>https://blog.cyfan.top/p/4fb070ca.html</id>
    <published>2020-08-14T01:51:23.000Z</published>
    <updated>2021-02-08T00:18:08.325Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>写在最前面</strong><br>自从这篇博文发布后，OneIndex迎来了一次重大更新，去除了FireBase依赖，转用KV存储刷新令牌。本片教程已过时，具体会在春节前后更新最新版本。</p></blockquote><p>OneDrive，相信大家都不陌生，微软家的网盘，虽说有类似于OneManager一样的目录列表程序，但是直连海外总是会遭受严重的丢包，得到极其糟糕的体验。这时候CLoudFlare作为不那么好使的CDN就排上用场了，项目<a href="https://github.com/spencerwooo/onedrive-cf-index" target="_blank" rel="noopener">onedrive-cf-index</a> 解决了这个问题,但是据我观察,这个仓库作者应该是个中国人,但是readme文档可不是中文,这对一些使用者造成了一定的困扰,而且文档相当<strong>言简意赅</strong><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/%E4%B8%AD%E6%9E%AA.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt>,这一篇文章相当于文档的中文翻译和使用教程.</p><blockquote><p><strong>使用前言</strong><br>部署此项目较为麻烦,请确保你满足以下俩个及以上想法后,才继续往下读:</p><ol><li>我非常需要搭建于CloudFlare的OneDrive目录列表吗?<img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/%E5%B0%8F%E7%9C%BC%E7%9D%9B.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></li><li>我非常需要这个版本的目录列表吗?<img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/%E8%82%BF%E5%8C%85.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></li><li>我有这个耐心吗?<img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/%E6%83%B3%E4%B8%80%E6%83%B3.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt><br>如果没有,那么我们建议你可以使用另一个功能和UI稍差的cf目录列表<a href="https://github.com/heymind/OneDrive-Index-Cloudflare-Worker" target="_blank" rel="noopener">OneDrive-Index-Cloudflare-Worker</a> 这个版本有不是很详尽的中文文档,并且较为简单,或者试试一步生成的GDIndex,可以参考我之前写的<a href="https://blog.cyfan.top/2020/03/18/%E5%85%8D%C2%B7%E7%88%AC%C2%B7%E5%9F%8E%C2%B7%E5%9B%BD%E5%86%85%E7%AE%A1%E7%90%86%E5%88%86%E4%BA%ABGoogleDrive/">GDIndex部署参考</a></li></ol></blockquote><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p><strong>新功能</strong></p><ul><li>新设计： spencer.css。</li><li>根据文件类型呈现的文件图标。</li><li>使用“Font Awesome icons” 图标代替材料设计图标（以获得更好的设计一致性）。</li><li>使用github-markdown-css进行README.md渲染</li><li>添加Cookie以更好地进行目录导航。</li><li>支持文件预览：</li><li>图片：.png，.jpg，.gif</li><li>纯文本：.txt</li><li>文档：.md，.mdown，.markdown</li><li>代码：.js，.py，.c，.json。</li><li>PDF：延迟加载，加载进度和内置的PDF查看器</li><li>音乐/音频： .mp3，.aac，.wav，.oga</li><li>视频： .mp4，.flv，.webm，.m3u8</li></ul><p>…</p><ul><li>代码语法以GitHub样式突出显示。（使用PrismJS。）</li><li>图像预览支持中型缩放效果。</li><li>使用Google Firebase实时数据库缓存和刷新令牌。（对于那些负担不起Cloudflare Workers KV存储的人。 😢）</li><li>在Turbolinks®的帮助下进行延迟加载。（从folder转到时有些问题file preview，但不会降低用户体验。）<br>…</li></ul><p>在这表面下:</p><ul><li>一直以来都是CSS动画。</li><li>使用wrangler和webpack打包源代码。</li><li>转换所有CDN以使用jsDelivr加载。</li><li>没有外部JS脚本，所有脚本都已通过webpack加载！（除了某些库。）</li></ul><p>…<br>所有其他功能</p><p>请参阅：<a href="https://github.com/heymind/OneDrive-Index-Cloudflare-Worker#-%E6%96%B0%E7%89%B9%E6%80%A7-v11" target="_blank" rel="noopener">新功能| OneDrive-Index-Cloudflare-Worker</a>。</p><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><h2 id="导入此项目"><a href="#导入此项目" class="headerlink" title="导入此项目"></a>导入此项目</h2><blockquote><p><strong>请注意!</strong><br>请不要Fork此项目<img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/stick_4.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt>,<br>在这个过程中你将会获取到数串token,fork的仓库无法转为私有仓库,这将会对你的数据造成威胁.</p></blockquote><p>点击右上角的 <code>+</code> 号选择Import项目</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-14065738.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>原先仓库地址填写<a href="https://github.com/spencerwooo/onedrive-cf-index" target="_blank" rel="noopener">https://github.com/spencerwooo/onedrive-cf-index</a>,新仓库名称随意,仓库类型必须改为Private私人,最后导入</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-14065831.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>导入成功,进入repo:</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-14065940.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><h2 id="获取Token"><a href="#获取Token" class="headerlink" title="获取Token"></a>获取Token</h2><p>进入<a href="https://heymind.github.io/tools/microsoft-graph-api-auth" target="_blank" rel="noopener">https://heymind.github.io/tools/microsoft-graph-api-auth</a> 开始准备你所需要的东西：</p><p>进入<a href="https://portal.azure.com/#blade/Microsoft_AAD_RegisteredApps/ApplicationsListBlade" target="_blank" rel="noopener">https://portal.azure.com/#blade/Microsoft_AAD_RegisteredApps/ApplicationsListBlade</a>，注册一个新app【使用微软账号】</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-14070907.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>几番跳转后，来到这样的界面：</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-14071032.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><blockquote><p>注意，我们强烈建议用英文界面，中文界面可能存在翻译错误产生误导</p></blockquote><p>点击OneIndex，进入应用详情</p><p>点击 <code>Redirect URIs</code> 修改跳转链接:</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-14071305.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>将此处改为 <code>https://heymind.github.io/tools/microsoft-graph-api-auth</code></p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-14071416.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>设置API：</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-14091941.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>至少选择 <code>offline_access, Files.Read, Files.Read.All .</code></p><p>返回，获取 <code>Application (client) ID</code></p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-14071558.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>在这里填上复制的client id，并点击AUTHORIZE验证</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-14071904.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>你会发现跳转一段时间后又回到了拉取界面,不过多了一个提示框,上面写着已经获取到Code</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-14072357.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>接着我们获取Secrets,点击 <code>Certificates &amp; secrets</code>,进入该选项卡:</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-14080315.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>新增一个:</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-14080233.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>名字随意,期限为永久:</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-14080315.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>复制生成的密钥,请注意此处密钥仅<strong>出现一次</strong>,以后就不会再出现了</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-14080438.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>将获得密钥粘贴进第五步:</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-14080508.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>点击GetToken,将跳转至如下界面:</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-14080438.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><blockquote><p>此处若失败，请重试第四步</p></blockquote><p>将获得字段的refresh_token写入，重新制得token：</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-14082011.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>取得token：</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-14081337.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>妥善保管，接下来我们会用到。</p><p>OneDriveToken完毕，接下来进入FireBase教程：</p><blockquote><p>作为数据库存储，原本采用的是cloudFlareKV存储，但考虑到大部分用户没有这个钱去买KV，于是采用了第三方存储。</p></blockquote><p>进入<a href="https://firebase.google.com/" target="_blank" rel="noopener">https://firebase.google.com/</a></p><p>开始创建项目：</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-14082334.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>项目名字随意，下一步</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-14082421.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>一直下一步，稍后将进入管理界面</p><p>选择Database，将其设置为发布模式，禁用写入权限，在数据一栏中添加key，名字为<code>value</code>,值为 <code>https://项目名.firebaseio.com/auth.json</code> ，如我的：<br><code>https://oneindex-chenyfan.firebaseio.com/auth.json</code></p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-14082523.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>点击右上角的小齿轮-项目设置-服务账号-旧版凭据-数据库账号-显示密钥，复制密钥。</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-14082614.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>FireBase教学完毕。</p><h2 id="配置CloudFlare"><a href="#配置CloudFlare" class="headerlink" title="配置CloudFlare"></a>配置CloudFlare</h2><p>登录你的CloudFlare，点击右上角，账户设置：</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-14083511.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>选择API令牌选项卡，生成新的API：</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-14083707.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>选择自定义令牌：</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-14083741.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>配置至少如下，可以选择增加</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-14083836.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>点击获取API令牌</p><p>接着还要获取账户ID和区域ID</p><p>进入任意一域名，右侧拦里头会有俩ID，复制：</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-14083918.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>到这里，你获取了以下所有密钥：</p><ul><li>Azure-refresh_token</li><li>Azure-client_id</li><li>Azure-client_secret</li><li>GoogleFireBase-firebase_url</li><li>GoogleFireBase-firebase_token</li><li>CloudFlare-APIToken</li><li>CloudFlare-ZoneID</li><li>CloudFlare-AccountID</li></ul><p>八个Token，切勿丢失<img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/%E5%92%BD%E6%B0%94.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt> 累死我了</p><h2 id="配置OneDrive"><a href="#配置OneDrive" class="headerlink" title="配置OneDrive"></a>配置OneDrive</h2><p>用微软账户登录OneDrive，新建文件夹，名字为“Public”</p><h2 id="本地wrangler部署"><a href="#本地wrangler部署" class="headerlink" title="本地wrangler部署"></a>本地wrangler部署</h2><blockquote><p>由于此篇教程具体将GithubAction实现无服务器部署，本块内容一笔带过，请直接看到GithubAction部署一块</p></blockquote><p>本地安装依赖环境</p><div class="hljs"><pre><code class="hljs undefined">yarn <span class="hljs-keyword">global</span> <span class="hljs-keyword">add</span> <span class="hljs-title">@cloudflare</span>/wrangleryarn install</code></pre></div><p>用wrangler登录CloudFlare</p><div class="hljs"><pre><code class="hljs undefined">wrangler <span class="hljs-built_in">config</span></code></pre></div><p><code>wrangler.toml</code> 修改</p><div class="hljs"><pre><code class="hljs undefined">name: The draft worker<span class="hljs-comment">'s name, your worker will be published at <span class="hljs-doctag">&lt;name&gt;</span>.<span class="hljs-doctag">&lt;worker_subdomain&gt;</span>.workers.dev.</span>account_id: Your Cloudflare Account ID.zone_id: Your Cloudflare Zone ID.</code></pre></div><p><code>src/config/default.js</code> 修改:</p><div class="hljs"><pre><code class="hljs undefined">client_id: Your client_id <span class="hljs-keyword">from</span> <span class="hljs-keyword">above</span>.base: Your base path <span class="hljs-keyword">from</span> <span class="hljs-keyword">above</span>.firebase_url: Your firebase_url <span class="hljs-keyword">from</span> <span class="hljs-keyword">above</span>.</code></pre></div><p>添加环境变量:</p><div class="hljs"><pre><code class="hljs undefined">wrangler<span class="hljs-built_in"> secret </span>put REFRESH_TOKENwrangler<span class="hljs-built_in"> secret </span>put CLIENT_SECRETwrangler<span class="hljs-built_in"> secret </span>put FIREBASE_TOKEN</code></pre></div><p>部署命令:</p><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-attribute">wrangler publish</span></code></pre></div><h2 id="GithubAction部署"><a href="#GithubAction部署" class="headerlink" title="GithubAction部署"></a>GithubAction部署</h2><h3 id="GithubAction部署-1"><a href="#GithubAction部署-1" class="headerlink" title="GithubAction部署"></a>GithubAction部署</h3><p>进入你导入的仓库，点击 <code>wrangler.toml</code></p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-14084906.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><ul><li><code>name</code> ==&gt; 默认生成为&lt;#name&gt;.&lt;#User&gt;.workers.dev，随意</li><li><code>account_id</code> ==&gt; CloudFlare-AccountID</li><li><code>zone_id</code> ==&gt; CloudFlare-ZoneID</li></ul><p>进入<code>/src/config/default.js</code></p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-14085133.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><ul><li>refresh_token ==&gt; Azure-refresh_token</li><li>client_id ==&gt; Azure-client_id</li><li>client_secret ==&gt; Azure-client_secret</li><li>redirect_uri ==&gt; ‘<a href="https://heymind.github.io/tools/microsoft-graph-api-auth&#39;" target="_blank" rel="noopener">https://heymind.github.io/tools/microsoft-graph-api-auth&#39;</a></li><li>firebase_url ==&gt; GoogleFireBase-firebase_url</li></ul><h4 id="修改样式"><a href="#修改样式" class="headerlink" title="修改样式"></a>修改样式</h4><p><code>src/render/htmlWrapper.js</code> : 修改标题</p><p><code>src/folderView.js</code> : 修改介绍</p><h4 id="设置密钥"><a href="#设置密钥" class="headerlink" title="设置密钥"></a>设置密钥</h4><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-14092907.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>密钥名：<code>CF_API_TOKEN</code></p><p>内容: ==&gt; CloudFlare-APIToken</p><h4 id="激活Action："><a href="#激活Action：" class="headerlink" title="激活Action："></a>激活Action：</h4><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-14085647.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><h3 id="设置CloudFlare变量"><a href="#设置CloudFlare变量" class="headerlink" title="设置CloudFlare变量"></a>设置CloudFlare变量</h3><p>进入新创建的Worker：</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-14090207.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-14090302.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><ul><li>CLIENT_SECRET ==&gt; Azure-client_secret</li><li>FIREBASE_TOKEN ==&gt; GoogleFireBase-firebase_token</li><li>REFRESH_TOKEN ==&gt; Azure-refresh_token</li></ul><p>部署，发布，绑定域名【可选】：</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-14090933.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>成品：</p><p><img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/2020-08-14091129.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>Demo:<a href="https://onedrive.cyfan.top" target="_blank" rel="noopener">https://onedrive.cyfan.top</a> <img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/huaji.gif" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><h1 id="后言"><a href="#后言" class="headerlink" title="后言"></a>后言</h1><p>其实默认才5GB，还不如GoogleDrive香，但是据说白嫖E5开发者还不错。</p><p>OK就到这了，还不懂的欢迎评论区，或者去官方github地址发issues。<img src="https://rmt.dogedoge.com/fetch/hi-c-oss/storage/%E6%AC%A2%E5%91%BC.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;写在最前面&lt;/strong&gt;&lt;br&gt;自从这篇博文发布后，OneIndex迎来了一次重大更新，去除了FireBase依赖，转用KV存储刷新令牌。本片教程已过时，具体会在春节前后更新最新版本。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;One</summary>
      
    
    
    
    <category term="撸羊毛" scheme="https://blog.cyfan.top/categories/撸羊毛/"/>
    
    
    <category term="CloudFlare" scheme="https://blog.cyfan.top/tags/CloudFlare/"/>
    
    <category term="Workers" scheme="https://blog.cyfan.top/tags/Workers/"/>
    
    <category term="目录列表" scheme="https://blog.cyfan.top/tags/目录列表/"/>
    
  </entry>
  
  <entry>
    <title>打造一个可国内访问的Blogger（Blogspot）方法</title>
    <link href="https://blog.cyfan.top/p/620f3e8d.html"/>
    <id>https://blog.cyfan.top/p/620f3e8d.html</id>
    <published>2020-07-29T02:43:19.000Z</published>
    <updated>2021-02-08T00:18:08.325Z</updated>
    
    <content type="html"><![CDATA[<p>Blog‍‌‍‌​‌‌‌‌​‌​‍‌​‍‌‍‍​‌‌‍‌​‌‍​‍‌​​‍‌‌‌​‌‍‌‌​‍‍‍​‍‍‌​​‍‌‍‌​‍‌‍‍​‌‌‍‌​‌‍​‍‌​​‍​‍‍‍​‌‍‍‌ger,一个干爽、免费的博客发布平台，作为主流的发布，提供免费的托管，免去了Typecho&amp;Wordpress高昂的服务器费用，避免了Hexo&amp;Jekyll静态博客无后台的缺陷，与CSDN、简书相比，可以绑定域名，界面干净，无广告【当然可以自己放自己的广告】。</p><p>实际上，当今写博客的软件数不胜数，主要分为一下三类：</p><ul><li>服务器部署：典型代表：Wordpress\Typecho</li><li>无服务器托管：典型代表：Hexo\Jekyll\Gidea\Hugo\Hola等等</li><li>集成型网站：Blogger、简书、CSDN、cnblog、wodemo等等</li></ul><p>上面所有软件，优缺点都有，具体看个人选择</p><p>当然，个人认为Typecho适合做个人博客，Hexo可以作为要求不高的人。集成性网站最主要的是只要安安心心写文章，不用管后端乱七八糟的代码。当然，最有问题的是大多数都不支持绑定域名，而且经常往网站上塞广告，自定义范围也不够。</p><p>接下来，我们扯扯集成博客中的一股清流：Blogger</p><blockquote><p>Blogger.com是由Pyra Labs公司创立，是目前全球用户数量最多的个人网志服务提供商。Pyra Labs和Blogger.com均被Google公司收购，成为其旗下的一项服务内容。<br>Blogger提供免费主机Blogspot.com存放博客，用户不必写任何代码或者安装服务器软件或脚本，通过所见即所得界面轻松地创建、发布、维护和修改自己的网志。<br>Blogger允许有经验的用户自行设计博客界面，其模板支持使用HTML和CSS进行编辑</p></blockquote><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.1/2020-07-29%20084428.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>实际上，由于Blogger托管于谷歌，写作域名 <code>www.blogger.com</code> 和托管域名 <code>*.blogspot.com</code> 均被MainLand所Ban。但是接下来来，我会讲讲如何打造一个能在国内大陆访问的Blogger</p><h1 id="1-注册Blogger"><a href="#1-注册Blogger" class="headerlink" title="1. 注册Blogger"></a>1. 注册Blogger</h1><blockquote><p>众所周知，请科学上网。</p></blockquote><p>用谷歌账号登录 (<a href="https://www.blogger.com" target="_blank" rel="noopener">https://www.blogger.com</a>) ，没有？不是⑧不是吧不是扒，都0202年了，还不会去注册一个谷歌账号？</p><p>进入控制台，新建一个博客：</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.1/2020-07-29%20084652.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>绑定域名,这一步随意,因为我们还要绑定一个自定义域名.</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.1/2020-07-29%20084847.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>点击确定,一个博客就搭建好了!快吧?</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.1/2020-07-29%20085021.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>这时候,我们<strong>科学上网</strong>访问之前的域名,我这里是: <code>cyfblogger.blogspot.com</code>，打开：</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.1/2020-07-29%20085021.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>搞定！搞完之后才知道，Blogger真正做到了什么叫1分钟创建一个博客，但这还不够，中国访客实际上还是打不开这个网站<a href="大多被污染到莫名其妙的ip去了,例如Facebook和Twitter">1</a>。所以，接下来，我们要让这个网站能在中国访问。</p><p>目前我们有一下思路:</p><ul><li>选择一个未被官方屏蔽的Blogger节点,此方法几年前还是可用的,最近不大灵光了,被屏蔽的差不多了</li><li>使用服务器反向代理Blogger,不推荐,有这个闲工夫你还不如直接用Typecho呢</li><li>CloudFlareCDN反向代理,这似乎是唯一一个解决的办法.</li></ul><h1 id="2-绑定自定义域名"><a href="#2-绑定自定义域名" class="headerlink" title="2.绑定自定义域名"></a>2.绑定自定义域名</h1><p>由于 <code>*.blogspot.com</code> 泛域名被屏蔽,所以你必须要有一个自己的域名.</p><p>不推荐免费域名，因为免费域名无法自选CF节点，当然你也可以换别的方式。</p><p>这里推荐一个买域名的好网站：<code>https://namebeta.com/</code> namebeta并不是购买域名的地方,但是它可以帮你货比三家,让你跳出更优惠的方案,并且自带各种温馨提示,包括能不能备案,有没有被注册等等,比较适合刚入门想买域名的小白.</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.1/2020-07-29%20090113.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>购买绑定NS不在谈论范围内,有域名的看下去</p><p>以下演示方便在CloudFlare官网里进行,采用免费域名演示,实际用笨牛CNAME解析为好.</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.1/2020-07-29%20091514.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>点击【设置】-【正在发布】-【自定义域名】</p><p>接着会报错：</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.1/2020-07-29%20092548.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>提示没验证，没关系，去CloudFlare加上CNAME，注意验证过程中切记把橙色云朵点灰<a href="实际上下面那条记录是为了验证你有没有主域名控制权。">2</a>：</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.1/2020-07-29%20092736.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>回去，点击确定，勾选HTTPS可用性。</p><p>谷歌SSL验证和办法真的慢，没办法，喝杯茶，写点作业，过了10min，显示颁发成功：</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.1/2020-07-29%20093118.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>回到CloudFlare，把访客访问的那条记录点亮橙色云朵，作为验证的记录不点亮.</p><p>国内访问试试？</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.1/2020-07-29%20094026.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>这时候我们发现，虽然国内能直连了，但是背景图加载不出来，整个网页加载缓慢。控制台以下，我们就会发现，Blogspot请求了国外谷歌边缘节点的内容，包括背景图片和部分js。</p><p>所以，我们还要对博客主题进行加工。</p><h1 id="3-更改主题"><a href="#3-更改主题" class="headerlink" title="3.更改主题"></a>3.更改主题</h1><blockquote><p>演示方便，用Contempo Light主题<br>实际上用其它主题也差不多的，注意替换掉外链即可</p></blockquote><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.1/2020-07-29%20094333.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>点击备份，下载主题:</p><p>用Notepad++打开，方便处理</p><h2 id="屏蔽加载"><a href="#屏蔽加载" class="headerlink" title="屏蔽加载"></a>屏蔽加载</h2><p>将<code>&lt;head&gt;</code>替换为<code>&amp;lt;!--&lt;head&gt;--&amp;gt;&amp;lt;head&amp;gt;</code></p><p>将<code>&lt;/head&gt;</code>替换为<code>&amp;lt;/head&amp;gt;&amp;lt;!--&lt;/head&gt;--&amp;gt;</code></p><p>将<code>&lt;/body&gt;</code>替换为<code>&amp;lt;!--&lt;/body&gt;--&amp;gt;&amp;lt;/body&amp;gt;</code></p><h2 id="替换背景"><a href="#替换背景" class="headerlink" title="替换背景"></a>替换背景</h2><p>在49行左右，有这么一段代码：</p><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">Variable</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"body.background"</span> <span class="hljs-attr">description</span>=<span class="hljs-string">"Background"</span>      <span class="hljs-attr">color</span>=<span class="hljs-string">"$(body.background.color)"</span>      <span class="hljs-attr">type</span>=<span class="hljs-string">"background"</span>      <span class="hljs-attr">default</span>=<span class="hljs-string">"$(color) none repeat scroll top left"</span>  <span class="hljs-attr">value</span>=<span class="hljs-string">"$(color) url(https://themes.googleusercontent.com/image?id=L1lcAxxz0CLgsDzixEprHJ2F38TyEjCyE3RSAjynQDks0lT1BDc1OxXKaTEdLc89HPvdB11X9FDw) no-repeat scroll top center /* Credit: Michael Elkan (http://www.offset.com/photos/394244) */;"</span>/&gt;</span></code></pre></div><p>将其中的</p><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-symbol">https:</span><span class="hljs-comment">//themes.googleusercontent.com/image?id=L1lcAxxz0CLgsDzixEprHJ2F38TyEjCyE3RSAjynQDks0lT1BDc1OxXKaTEdLc89HPvdB11X9FDw</span></code></pre></div><p>替换为背景外链.</p><h2 id="必要的JS替换"><a href="#必要的JS替换" class="headerlink" title="必要的JS替换"></a>必要的JS替换</h2><p>打开F12,我们会发现,有一个资源阻塞了请求:</p><p><code>https://resources.blogblog.com/blogblog/data/res/2629068285-indie_compiled.js</code></p><p>但这个是必须的,我们要保留,搜索 <code>&lt;b:template-script async=&#39;true&#39; name=&#39;indie&#39; version=&#39;1.0.0&#39;/&gt;</code> 并删除,将其替换成:<br><code>&lt;script async=&#39;async&#39; src=&#39;https://cdn.jsdelivr.net/gh/chenyfan/chenyfan.github.io/1468123664-indie_compiled.js&#39;&gt;&lt;/script&gt;</code></p><blockquote><p>当然你也可以用自己的链接.</p></blockquote><h2 id="解决缩略图问题"><a href="#解决缩略图问题" class="headerlink" title="解决缩略图问题"></a>解决缩略图问题</h2><p>【感谢阿虚同学的博客解决此方法】</p><p>将 此JS 代码放置于<script src="https://cdn.jsdelivr.net/npm/live2d-widget@^3.1.3/lib/L2Dwidget.min.js"></script><script>L2Dwidget.init({pluginRootPath:"live2dw/",pluginJsPath:"lib/",pluginModelPath:"assets/",model:{jsonPath:"https://cdn.jsdelivr.net/gh/ChenYFan/CDN@master/js/live2d-widget-model-z16/assets/z16.model.json"},display:{position:"left",width:150,height:300},mobile:{show:!1},log:!1,tagMode:!1})</script>标签前：</p><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">b:if</span> <span class="hljs-attr">cond</span>=<span class="hljs-string">'data:blog.pageType in &#123;"index","searchQuery","searchLabel","archive"&#125;'</span>&gt;</span> <span class="hljs-comment">&lt;!--如果当前页是首页，搜索页，标签页，那么代码继续执行--&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">defer</span>=<span class="hljs-string">'defer'</span>&gt;</span><span class="javascript">        <span class="hljs-comment">//&lt;![CDATA[</span>        <span class="hljs-keyword">var</span> postThumbnails = <span class="hljs-built_in">document</span>.getElementsByClassName(<span class="hljs-string">"post-thumbnail"</span>);        <span class="hljs-keyword">var</span> postContents = <span class="hljs-built_in">document</span>.getElementsByClassName(<span class="hljs-string">"post-text"</span>);        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;postContents.length;i++)        &#123;            <span class="hljs-keyword">var</span> postContent = postContents[i].innerText;            <span class="hljs-keyword">var</span> imgReg = <span class="hljs-regexp">/&lt;img.*?(?:&gt;|\/&gt;)/gi</span>;            <span class="hljs-keyword">var</span> srcReg = <span class="hljs-regexp">/src=[\'\"]?([^\'\"]*)[\'\"]?/i</span>;            <span class="hljs-keyword">var</span> imgTags = postContent.match(imgReg);            imgSrcs = imgTags[<span class="hljs-number">0</span>].match(srcReg);            imgSrc = imgSrcs[<span class="hljs-number">1</span>];            postThumbnails[i].setAttribute(<span class="hljs-string">'src'</span>, imgSrc);        &#125;        <span class="hljs-comment">//]]&gt;</span>    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b:if</span>&gt;</span></code></pre></div><p>修改模板，搜索data:post.featuredImage，在缩略图处改成下代码：</p><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">b:if</span> <span class="hljs-attr">cond</span>=<span class="hljs-string">'data:post.featuredImage'</span>&gt;</span>  <span class="hljs-comment">&lt;!--判断文章内是否有图片，有则代码继续执行--&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">'snippet-thumbnail'</span>&gt;</span>  <span class="hljs-comment">&lt;!--创建一个 div 容器，缩略图放置在这里--&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">class</span>=<span class="hljs-string">'post-thumbnail'</span> <span class="hljs-attr">sizes</span>=<span class="hljs-string">'(max-width: 800px) 20vw, 128px'</span> <span class="hljs-attr">src</span>=<span class="hljs-string">'https://ae01.alicdn.com/kf/HTB1Gb7LUmzqK1RjSZFL5jcn2XXac.gif'</span>/&gt;</span>  <span class="hljs-comment">&lt;!--预先放置一个加载图片，增强用户体验--&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> <span class="hljs-attr">class</span>=<span class="hljs-string">'post-text'</span> <span class="hljs-attr">style</span>=<span class="hljs-string">'display:none;'</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">data:post.body.escaped</span>/&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span> <span class="hljs-comment">&lt;!--这里放置文章全文，图片从中提取，样式设置为不显示--&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b:if</span>&gt;</span></code></pre></div><h2 id="头像、icon设置"><a href="#头像、icon设置" class="headerlink" title="头像、icon设置"></a>头像、icon设置</h2><p>搜索 <code>profile-img</code> 约3899行：</p><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">class</span>=<span class="hljs-string">'profile-img'</span> <span class="hljs-attr">expr:alt</span>=<span class="hljs-string">'data:messages.myPhoto'</span> <span class="hljs-attr">expr:height</span>=<span class="hljs-string">'data:authorPhoto.height'</span> <span class="hljs-attr">expr:src</span>=<span class="hljs-string">'data:authorPhoto.image'</span> <span class="hljs-attr">expr:width</span>=<span class="hljs-string">'data:authorPhoto.width'</span>/&gt;</span></code></pre></div><p>将其直接改成</p><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">class</span>=<span class="hljs-string">'profile-img'</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"你的头像外链地址"</span>&gt;</span></code></pre></div><h2 id="字体问题"><a href="#字体问题" class="headerlink" title="字体问题"></a>字体问题</h2><p>我测试时没有发现字体相关问题，请求字体的网址gstatic.com在国内可以访问，虽然部分地区莫名其妙解析到澳大利亚facebook，但大多数都正确解析时国内谷翔。</p><h2 id="评论问题"><a href="#评论问题" class="headerlink" title="评论问题"></a>评论问题</h2><p>默认的Google评论肯定时不行的，留着还拖慢加载，推荐用DiqusJS或Valine.</p><p>修改主题，搜索 <code>&lt;b:includable id=&#39;comments&#39; var=&#39;post&#39;&gt;</code> 约3453行至 <code>&lt;/b:includable&gt;</code> 3511行,全部删除,将以下代码填写回原处</p><div class="hljs"><pre><code class="hljs undefined">&lt;<span class="hljs-selector-tag">b</span>:includable id=<span class="hljs-string">'comments'</span> var=<span class="hljs-string">'post'</span>&gt;                      &lt;<span class="hljs-selector-tag">div</span> id=<span class="hljs-string">'disqus_thread'</span>/&gt;                      &lt;/<span class="hljs-selector-tag">b</span>:includable&gt;</code></pre></div><p>在末端 <code>&amp;lt;!--&lt;/body&gt;--&amp;gt;&amp;lt;/body&amp;gt;</code> 前添加:</p><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="actionscript"><span class="hljs-keyword">var</span> dsqjs = <span class="hljs-keyword">new</span> DisqusJS(&#123;    shortname: <span class="hljs-string">''</span>,    siteName: <span class="hljs-string">''</span>,    identifier: <span class="hljs-string">''</span>,    url: <span class="hljs-string">''</span>,    title: <span class="hljs-string">''</span>,    api: <span class="hljs-string">''</span>,    apikey: <span class="hljs-string">''</span>,    admin: <span class="hljs-string">''</span>,    adminLabel: <span class="hljs-string">''</span>&#125;);</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre></div><p>以上代码具体配置前往 [<a href="https://github.com/SukkaW/DisqusJS#%E4%BD%BF%E7%94%A8" target="_blank" rel="noopener">https://github.com/SukkaW/DisqusJS#%E4%BD%BF%E7%94%A8</a> ] 配置</p><p>完</p><p>Demo&amp;&amp;以后的日记本:[<a href="https://moe.cyfan.top" target="_blank" rel="noopener">https://moe.cyfan.top</a> ]</p><hr><p>推荐自选CDN加速.</p><p>注意以后写文章图片必须是外链,可以试试sm.ms</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Blog‍‌‍‌​‌‌‌‌​‌​‍‌​‍‌‍‍​‌‌‍‌​‌‍​‍‌​​‍‌‌‌​‌‍‌‌​‍‍‍​‍‍‌​​‍‌‍‌​‍‌‍‍​‌‌‍‌​‌‍​‍‌​​‍​‍‍‍​‌‍‍‌ger,一个干爽、免费的博客发布平台，作为主流的发布，提供免费的托管，免去了Typecho&amp;amp;</summary>
      
    
    
    
    <category term="好方法" scheme="https://blog.cyfan.top/categories/好方法/"/>
    
    
    <category term="Blogger" scheme="https://blog.cyfan.top/tags/Blogger/"/>
    
    <category term="Blogspot" scheme="https://blog.cyfan.top/tags/Blogspot/"/>
    
    <category term="谷歌" scheme="https://blog.cyfan.top/tags/谷歌/"/>
    
    <category term="博客" scheme="https://blog.cyfan.top/tags/博客/"/>
    
  </entry>
  
  <entry>
    <title>白嫖！10GB免流海外BackBlaze对象存储【可套CDN】</title>
    <link href="https://blog.cyfan.top/p/ce240368.html"/>
    <id>https://blog.cyfan.top/p/ce240368.html</id>
    <published>2020-07-09T01:37:00.000Z</published>
    <updated>2021-02-08T00:18:08.325Z</updated>
    
    <content type="html"><![CDATA[<p>腾讯云的COS就是个暗坑，进去的时候大肆宣扬用户前六个月免费，但实际上免费仅针对于存储于国内的bucket，而存储于国外的阶梯定价又极不合理，我的COS在一个月走了流量1.6GB。按照官方定价</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/2020-07-09%20094557.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/2020-07-09%20094840.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>大概就是0.7左右。</p><p>但是，腾讯云从来就是不满1GB按1GB计算的jier，我瞟了一下账单：</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/2020-07-09%20095520.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>不是吧啊Sir，一个月一块多，那我为什么要用你的东西啊<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/%E5%90%90.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt>！</p><p>很难让人理解，我CDN设置为一个月的超长缓存，但腾讯还是给我计价1GB，和回源没什么区别。</p><p>后来F12看了一下，腾讯悄悄地在header里添加max-cache为43200s，12个小时强制清除缓存。Asir，赚钱不带这么玩吧。<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/%E4%B8%AD%E6%9E%AA.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>最让我憋屈的是，<code>cyfan.top</code> 是没有备案的，使用国内的bucket就不给绑定域名，害的我只能用香港，但是香港的绑定域名是不给SSL的，偏要套一层CDN才行。可***腾讯云默认CDN是亚马逊的，速度渣的很，用来用去还是用回CloudFlare。可是，既然有CloudFlare，那我为什么不用免费的Github服务啊！<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/%E5%93%AD%E6%B3%A3.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>这就是逼着我要换一个图床啊么<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/qgbf.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt>。</p><p>后来twitter上有人发推推荐 <code>backblaze</code> 的海外存储，使用了一下，发现完全满足需求。<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/stick_27.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><h1 id="Backblaze"><a href="#Backblaze" class="headerlink" title="Backblaze"></a>Backblaze</h1><p>2015年9月，Backblaze推出了新产品B2 Cloud Storage。作为基础架构即服务（IaaS），它的目标是软件集成（尽管也提供Web前端和API）。它直接与类似服务Amazon S3，Microsoft Azure和Google Cloud竞争。在2018年4月，Backblaze宣布了云计算合作伙伴关系，它将直接将Backblaze的数据中心与其合作伙伴Packet和ServerCentral连接起来，为存储在B2 Cloud Storage中的数据提供高性能的云计算，而无需支付任何费用。</p><p>B2 Cloud Storage非常客气，有以下优点：</p><ul><li>用户永久免费<strong>10GB</strong>直链存储</li><li>每天<strong>1GB</strong>下行流量</li><li>无限量的上传流量</li><li>每天下载请求<strong>2500</strong>次免费</li><li>每天上传请求<strong>2500</strong>次免费</li><li>基于CloudFlareCDN</li></ul><p>而且超出免费额度的价钱也十分合理【不过我不会往里头冲一分钱的！】 <img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/2020-07-09%20100931.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/2020-07-09%20100931.jpg"></p><p>然而我偶然得知，Backblaze加入了CloudFlare的 <a href="https://www.cloudflare.com/bandwidth-alliance/" target="_blank" rel="noopener">带宽联盟（ Bandwidth Alliance）</a> Backblaze与CloudFlare之间的流量直接免费，也就是每天<strong>无限量</strong>下行流量，配上CloudFlare超长缓存，每天下载请求无限次免费。<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/%E5%BE%97%E6%84%8F.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>而且这样与我用COS的速度是差不多的，那我何必用付费的COS呢？</p><h1 id="注册："><a href="#注册：" class="headerlink" title="注册："></a>注册：</h1><p>去<a href="https://www.backblaze.com/zh_CN/cloud-storage.html" target="_blank" rel="noopener">B2 云存储</a>注册，可以用Google快捷登录：</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/2020-07-09%20101845.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>注册之后可能会要求你绑定手机号，乖乖的绑定自己的中国手机号吧【可能会产生短信费用，大概0.1￥】，不要想什么歪门邪道<br>，毕竟很多公开的手机号是不能用的，而且GoogleVoice也被拒绝了。</p><p>新建一个桶，设置为公开：</p><p>上传一个文件，点击右边的信息按钮，我们要在这里获取一些信息：</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/2020-07-09%20102255.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/2020-07-09%20102940.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>看到那个友好链接吗，这就是CloudFlare加速的链接，但这个不是我们想要的链接，我们要自定义域名，毕竟默认的加速相当蛋疼。</p><h1 id="自定义域名"><a href="#自定义域名" class="headerlink" title="自定义域名"></a>自定义域名</h1><p>这一步需要你有个域名，开个子域给图床：</p><p>由于我是bnxb接入的CloudFlare，所以我首先要去 <code>cdn.bnxb.com</code> ，将 <code>assets.cyfan.top</code> 指向 <code>f000.backblazeb2.com</code> 【每个人都可能不一样，自己看情况】，并开启CDN，然后在DNSPOD里CNAME负载均衡一下，这里就不放图了。<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/%E6%9C%9F%E5%BE%85.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><h1 id="缩短链接"><a href="#缩短链接" class="headerlink" title="缩短链接"></a>缩短链接</h1><p>默认即使绑定域名后，链接大概是这样滴：</p><div class="hljs"><pre><code class="hljs undefined">https:<span class="hljs-regexp">//</span>assets.cyfan.top<span class="hljs-regexp">/file/</span>CYF-PicBed<span class="hljs-regexp">/pic/</span>postpic<span class="hljs-regexp">/2020-07-09%20102255.jpg</span></code></pre></div><p>可以看到,中间多了 <code>/file/CYF-PicBed/</code> ,这并不是我所需要的,所以我们要把它变成这样:</p><div class="hljs"><pre><code class="hljs undefined">https:<span class="hljs-regexp">//img</span>.cyfan.top<span class="hljs-regexp">/pic/</span>postpic<span class="hljs-regexp">/2020-07-09%20102255.jpg</span></code></pre></div><p>你要知道，我有一大堆图片都是直接以 <code>https://img.cyfan.top</code> 存在底下的，NotePad++可以批量改，但是我在外链也放了很多啊.所以只能改域名。<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/%E5%90%90%E8%A1%80%E5%80%92%E5%9C%B0.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>前往CloudFlare,设置页面规则,进行301转发:</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/2020-07-09%20103634.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>其中 <code>$1</code> 是CloudFlare的匹配符号，此规则意思是将所有的 <code>https://img.cyfan.top/*</code> 跳转向 <code>https://assets.cyfan.top/file/CYF-PicBed/*</code></p><p>去 <code>cdn.bnxb.com</code> ，将 <code>img.cyfan.top</code> 指向 任意一ip,比如 <code>1.0.0.1</code> 并开启CDN，然后在DNSPOD里CNAME。</p><p>此后,所有访问图片都会在里头跳转一下,外面基本看不出来有什么差别.</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/2020-07-09%20104238.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><h1 id="开启CORS-加长缓存时间"><a href="#开启CORS-加长缓存时间" class="headerlink" title="开启CORS|加长缓存时间"></a>开启CORS|加长缓存时间</h1><p>就这样结束了么？没有，你会发现访问的链接里所有的资源都是MISS，这是因为Backblaze默认不缓存<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/stick_65.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt>。</p><p>所以，自己设置呗！</p><p>点击桶，进入桶设定：</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/2020-07-09%20104802.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>里头写上:</p><div class="hljs"><pre><code class="hljs undefined">&#123;<span class="hljs-attr">"cache-control"</span>:<span class="hljs-string">"max-age=43200000"</span>&#125;</code></pre></div><p>这个意思是强制缓存 <code>43200000</code> ,大约是50天.然而这里注意一下，时间太长有个问题，你修改一张图片，外面可以能要50天才能更改，这样只能通过手动清除缓存做到了。</p><p>点击CORS设置,选择:</p><div class="hljs"><pre><code class="hljs undefined">与所有HTTPS来源共享此存储桶中的所有内容。</code></pre></div><p>即可.</p><h1 id="实测"><a href="#实测" class="headerlink" title="实测"></a>实测</h1><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/2020-07-09%20105402.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>免费额度基本用不完.</p><p>可惜PicGo没有支持Backblaze，我只能通过网页端上传<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/%E8%A3%85%E5%A4%A7%E6%AC%BE.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt>。</p><p>然而有一件事情非常蛋疼，你丫的根目录上传的时候是不会创建文件夹的，一次上传会把文件夹里的图片全部上传到根目录。所以，我只能手动创建文件夹，这个痛苦我真的是，<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/tx.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt>。</p><p>嗯，用了一个晚上，感觉还是挺香的，鹅厂的COS收费确实不合理，也要学学外面人家收费啊！</p><hr><p>溜了溜了，作业还没写完呢<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/%E9%82%AA%E9%AD%85%E4%B8%80%E7%AC%91.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;腾讯云的COS就是个暗坑，进去的时候大肆宣扬用户前六个月免费，但实际上免费仅针对于存储于国内的bucket，而存储于国外的阶梯定价又极不合理，我的COS在一个月走了流量1.6GB。按照官方定价&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://unpkg.zhimg.com/</summary>
      
    
    
    
    <category term="爱分享" scheme="https://blog.cyfan.top/categories/爱分享/"/>
    
    
    <category term="图床" scheme="https://blog.cyfan.top/tags/图床/"/>
    
    <category term="COS" scheme="https://blog.cyfan.top/tags/COS/"/>
    
    <category term="对象存储" scheme="https://blog.cyfan.top/tags/对象存储/"/>
    
    <category term="免流" scheme="https://blog.cyfan.top/tags/免流/"/>
    
  </entry>
  
  <entry>
    <title>怎么才能让GoogleAdsense不拖慢速度</title>
    <link href="https://blog.cyfan.top/p/3854592e.html"/>
    <id>https://blog.cyfan.top/p/3854592e.html</id>
    <published>2020-07-06T06:19:00.000Z</published>
    <updated>2021-02-08T00:18:08.325Z</updated>
    
    <content type="html"><![CDATA[<p>GoogleAdsense嘛，著名的赚钱大师，<span class="heimu">虽然只给我40美分，但毕竟我没有做很好的优化嘛，这也不怪谷歌</span>。由于以前用的是 <code>.ga</code> 的免费域名,在上一年将近4个月荒凉,基本日PV在没有和1之间徘徊.后来过年的时候买了一个 <code>.top</code> 总算撑起一层牌面,但是由于 <code>COVID19</code> ,嗯,所以每次提交2星期就给我来这么一出:</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/20200706143949.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>嗯,<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/%E5%8F%A3%E5%90%90%E8%8A%B3%E8%A8%80.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>后来呢,六月初提交了一次,结果显示,到第13天,百度统计才接收到来自台湾的Google流量,一天之后审核完毕.</p><p>真的懒啊， <img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/stick_60.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>然而呢，GoogleAdsense也是著名的拖慢加载速度的JS。一年前的GoogleAdsense的js获取是链接美国，谷歌嘛，连不上也是正常的，现在基本解析都是上海和北京的谷翔，速度还行，但是加载广告的速度依旧难以忍受【实际也就6s的速度】。</p><p>欸，博客快满一周年了，当时建站的时候根本不管速度如何，能加载就成，不像现在，为了几百毫秒的事情纠结。<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/%E5%B0%8F%E7%9C%BC%E7%9D%9B.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><h1 id="GoogleAdsense在后台偷偷加载的事情："><a href="#GoogleAdsense在后台偷偷加载的事情：" class="headerlink" title="GoogleAdsense在后台偷偷加载的事情："></a>GoogleAdsense在后台偷偷加载的事情：</h1><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/20200706154324.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>可以看到，一个1.1kb的网页（上面的文字是通过js自动生成的），谷歌广告加载，需要将近10s加载完毕，加载大小将近1.5MB。</p><p>最夸张的是，我是通过海外代理访问的，如果放在大陆打开，这甚至好几次加载失败。</p><p>虽然谷歌拥有所谓的【异步加载】，可仍然会严重拖慢速度,并且，当用户没有打算看广告时，广告仍然会加载：</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/20200706154831.gif" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>简单统计了一下，我打开网页用了1s，剩下9s我的浏览器上方一直在转【表示加载】，这种情况非常的讽刺，因为谷歌在PageSpeedLight中口口声声说需要降低js的渲染速度和外部链接加载。</p><p>实际上呢，刚刚的广告，谷歌向服务器发送了57次请求，其中26次js加载，总渲染达到3.87秒，接着是图片，总共将近9个，总大小1.4MB。</p><p>这种地步，已经让我无法忍耐了，可以想象，在打开博客，最开始跳出来的不是博文的内容，而是毫不相关的广告，这种情况，访客好感度能好才怪呢。<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/%E5%86%85%E4%BC%A4.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>那么，怎么解决？</p><h1 id="万物皆可懒加载！"><a href="#万物皆可懒加载！" class="headerlink" title="万物皆可懒加载！"></a>万物皆可懒加载！</h1><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/20200706155515.gif" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>访客在上方浏览时，广告不加载，直到划到最底下，广告才开始加载，这样大大提升好感【虽然总加载速度和时间还是这个样，但是在访客看来就很舒服】</p><p>应该给广告挑个好位置，那么在哪里最好呢？就我个人而言，我最希望看完博文和评论之后，在移动鼠标到下一篇的间隙稍微看看别的东西。就比如说那种3.3￥/月的主机广告我就忍不住想点一下【当然，发布者是不能点击自己的广告的】。那么，我就可以把广告代码扔在Valine评论框以下即可。</p><p>我们可以顺手拿一个谷歌广告实例开刀,我的博客广告单元是这样的;</p><div class="hljs"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">async</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">ins</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"adsbygoogle"</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"display:block"</span> <span class="hljs-attr">data-ad-client</span>=<span class="hljs-string">"ca-pub-1878991317600808"</span> <span class="hljs-attr">data-ad-slot</span>=<span class="hljs-string">"6517667779"</span> <span class="hljs-attr">data-ad-format</span>=<span class="hljs-string">"auto"</span> <span class="hljs-attr">data-full-width-responsive</span>=<span class="hljs-string">"true"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ins</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">     (adsbygoogle = <span class="hljs-built_in">window</span>.adsbygoogle || []).push(&#123;&#125;);</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre></div><p>可以看到 <code>https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js</code> 即核心js,那么我们只要把这个js压住懒加载,直到划到底下才显示即可</p><p>那么问题来了,怎么压?</p><p>答: <code>window.addEventListener</code></p><div class="hljs"><pre><code class="hljs undefined"> <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span>&gt;</span><span class="javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">downloadJSAtOnload</span>(<span class="hljs-params"></span>) </span>&#123;<span class="hljs-keyword">var</span> element = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">"script"</span>);element.src = <span class="hljs-string">"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"</span>;<span class="hljs-built_in">document</span>.body.appendChild(element);&#125;<span class="hljs-keyword">if</span> (<span class="hljs-built_in">window</span>.addEventListener)<span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">"load"</span>, downloadJSAtOnload, <span class="hljs-literal">false</span>);<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">window</span>.attachEvent)<span class="hljs-built_in">window</span>.attachEvent(<span class="hljs-string">"onload"</span>, downloadJSAtOnload);<span class="hljs-keyword">else</span> <span class="hljs-built_in">window</span>.onload = downloadJSAtOnload;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre></div><p>所以,简单的就这么做:</p><p>修改 <code>Valine.ejs</code> ，末端填上</p><div class="hljs"><pre><code class="hljs html"> <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span>&gt;</span><span class="javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">downloadJSAtOnload</span>(<span class="hljs-params"></span>) </span>&#123;<span class="hljs-keyword">var</span> element = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">"script"</span>);element.src = <span class="hljs-string">"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"</span>;<span class="hljs-built_in">document</span>.body.appendChild(element);&#125;<span class="hljs-keyword">if</span> (<span class="hljs-built_in">window</span>.addEventListener)<span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">"load"</span>, downloadJSAtOnload, <span class="hljs-literal">false</span>);<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">window</span>.attachEvent)<span class="hljs-built_in">window</span>.attachEvent(<span class="hljs-string">"onload"</span>, downloadJSAtOnload);<span class="hljs-keyword">else</span> <span class="hljs-built_in">window</span>.onload = downloadJSAtOnload;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-comment">&lt;!-- ADs-in-Blog-Under-Valine --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">ins</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"adsbygoogle"</span>     <span class="hljs-attr">style</span>=<span class="hljs-string">"display:block"</span>     <span class="hljs-attr">data-ad-client</span>=<span class="hljs-string">"ca-pub-1878991317600808"</span>     <span class="hljs-attr">data-ad-slot</span>=<span class="hljs-string">"6517667779"</span>     <span class="hljs-attr">data-ad-format</span>=<span class="hljs-string">"auto"</span>     <span class="hljs-attr">data-full-width-responsive</span>=<span class="hljs-string">"true"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ins</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">     (adsbygoogle = <span class="hljs-built_in">window</span>.adsbygoogle || []).push(&#123;&#125;);</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre></div><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/20200706163849.gif" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>就比如现在这样【诶呀，顺手捞一把嘛】</p><script type="text/javascript">function downloadJSAtOnload(){var d=document.createElement("script");d.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js",document.body.appendChild(d)}window.addEventListener?window.addEventListener("load",downloadJSAtOnload,!1):window.attachEvent?window.attachEvent("onload",downloadJSAtOnload):window.onload=downloadJSAtOnload</script><p><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-1878991317600808" data-ad-slot="6517667779" data-ad-format="auto" data-full-width-responsive="true"></ins></p><script>(adsbygoogle=window.adsbygoogle||[]).push({})</script><hr><blockquote><p>好了,我相信很多营销号【如果有】，绝对会把我上面的文章直接抄走。嗯，我非常讨厌营销号，对的，我在这里提前鄙视你们。以下是我关于这件事情的很多想法，如果你就是想简单优化，这就足够了，如果你有兴趣了解，你可以继续：</p></blockquote><h1 id="关于更多的优化"><a href="#关于更多的优化" class="headerlink" title="关于更多的优化"></a>关于更多的优化</h1><p>谷歌论坛上有人提到过，懒加载谷歌广告是否合规，标题是这样的：<strong>Lazy Load Adsense fine with the policies?</strong></p><p><a href="https://support.google.com/adsense/thread/31438569?hl=en" target="_blank" rel="noopener">原文</a>如下：</p><div class="hljs"><pre><code class="hljs undefined">Many have already been asked, but unfortunately they have <span class="hljs-keyword">not</span> received an answer. :-(I like <span class="hljs-keyword">to</span> optimize site speed <span class="hljs-keyword">in</span> the browser, <span class="hljs-keyword">not</span> AMP.My questions are:- <span class="hljs-keyword">Is</span> lazy load <span class="hljs-keyword">for</span> ads below the fold usefull?- <span class="hljs-keyword">Is</span> it fine <span class="hljs-keyword">with</span> the policies? I<span class="hljs-symbol">'ve</span> seen some pieces <span class="hljs-keyword">of</span> code <span class="hljs-keyword">to</span> implement it (https://css-tricks.com/lazy-loading-responsive-adsense-ads/, https://betterstudio.com/blog/lazy-load-google-adsense-wordpress/, https://gulshankumar.net/setup-lazy-loading-google-adsense-ad-<span class="hljs-keyword">units</span>/). Are such examples allowed code <span class="hljs-keyword">to</span> implement AdSense lazy loading?Thanks!</code></pre></div><p>噫,好,又是<del>生肉</del>.</p><p>简单的说,这位用户的担忧确实很值得思考,确实,AMP对于我来说就是个鸡肋，尤其是想我一样面向中国大陆访客，<strong>AMP需要你能访问国外谷歌</strong>。担忧的理由也写的很清楚，一是能不能起作用，二是违不违反政策。</p><p>可惜，所谓的QuickResponse依旧很答非所问，印证了用户的 <strong>Many have already been asked, but unfortunately they have not received an answer</strong></p><p>嗯， <strong>it makes sense NOT to have lazy loading on them</strong> 、 <strong>There is no “yes” or “no” answer to this in the policies</strong> ，用户问有没有违反，可你只能回答【没有确切答案？】、【不需要懒加载？】</p><p>这谷歌客服<span class="heimu">一事无成</span>，像极了我的人生</p><p>不过说回来，有一件事情确实意思：</p><div class="hljs"><pre><code class="hljs undefined">As such, it could be argued that behaviour draws attention <span class="hljs-keyword">to</span> those elements. Drawing attention <span class="hljs-keyword">to</span> ads is a<span class="hljs-built_in"> policy </span>violation.所以，这可以说这种行为吸引了人们对这些要素变化的关注。请注意这种吸引用户关注行为是违反政策。</code></pre></div><p>所以，这就解释了我为何不用 <code>onscroll</code> 和 <code>IntersectionObserver API</code> ,<br>而采用不那么灵敏的 <code>window.addEventListener</code> 。</p><p>实际上，在刚刚的论坛问答里，提到了很多的lazyload方法，以 [<a href="https://css-tricks.com/lazy-loading-responsive-adsense-ads/]" target="_blank" rel="noopener">https://css-tricks.com/lazy-loading-responsive-adsense-ads/]</a> 这篇文章为例子:</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/20200706163646.gif" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>这种方法在谷歌广告商增加一个遮罩层,加载网页时先加载遮罩,广告不加载;当滚动完成时,遮罩层消失,加载广告.可惜，此方法已失效，加载的时候谷歌检测到有遮罩层就会拒绝加载。</p><p>无论怎么说，懒加载广告，速度<del>咻</del>一下上去了，口袋里零花钱也多了。钱速双收，何为不乐乎？</p><p>最后，我瞟了一眼，看到了广告：</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/20200706164523.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>阿里支付宝什么时候沦落到要打广告了？</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;GoogleAdsense嘛，著名的赚钱大师，&lt;span class=&quot;heimu&quot;&gt;虽然只给我40美分，但毕竟我没有做很好的优化嘛，这也不怪谷歌&lt;/span&gt;。由于以前用的是 &lt;code&gt;.ga&lt;/code&gt; 的免费域名,在上一年将近4个月荒凉,基本日PV在没有和1之间徘</summary>
      
    
    
    
    <category term="好方法" scheme="https://blog.cyfan.top/categories/好方法/"/>
    
    
    <category term="LazyLoad" scheme="https://blog.cyfan.top/tags/LazyLoad/"/>
    
    <category term="Google" scheme="https://blog.cyfan.top/tags/Google/"/>
    
    <category term="Adsense" scheme="https://blog.cyfan.top/tags/Adsense/"/>
    
    <category term="赚钱" scheme="https://blog.cyfan.top/tags/赚钱/"/>
    
  </entry>
  
  <entry>
    <title>利用Travis-CI实现在线更新Hexo</title>
    <link href="https://blog.cyfan.top/p/e626cb30.html"/>
    <id>https://blog.cyfan.top/p/e626cb30.html</id>
    <published>2020-06-29T05:31:00.000Z</published>
    <updated>2021-02-08T00:18:08.325Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo作为静态博客，好处相当明显，开销少，并且对于那种DDosS和CC套上CDN毅然不动。当然，最蛋疼的莫过于更新了，每次在自己电脑上辛辛苦苦码好字，一个push，hexo绿色光芒在命令提示符上闪烁着光芒，突然发现把仓库名字 <code>ChenYFan</code> 打成 <code>CehnYFan</code> <span class="heimu">真实事件</span> ，异或着是用手机查看自己的博客，突然发现：</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/20200629135012.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/stick_7.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>由于hexo基于nodejs+git，手机无法更新；同时如果换了台电脑，hexo就要重装。这种事情hexo用户应该体会得到，我也就不多说了。<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/%E4%B8%AD%E5%88%80.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>那么，hexo用户如何进行在线更新呢？</p><p>正常来讲，<strong>服务器法</strong> 最直接，但也是最没用的。用服务器就意味着丧失了hexo的最优点-节省开支。当然，Hexo+Nginx+HexoAdmin确实可以实现很棒的书写环境，但是与其这么麻烦你还不如直接用Typecho&amp;Wordpress呢。<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/%E4%B8%8D%E9%AB%98%E5%85%B4.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>曾经在 <a href="https://hexo.io" target="_blank" rel="noopener">Hexo官方</a> 上看过 <a href="https://hexo.io/zh-cn/docs/github-pages" target="_blank" rel="noopener">利用Travis-ci自动部署GithubPages</a> 不过我一看到这么多步骤直接 <del><strong>萎缩</strong></del> <img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/%E6%8A%95%E9%99%8D.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/20200629140241.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>后来,促使我改变主意的,是我得知中考之后放假三天接着上课[高中],我***,然后突然想起来博客不方便更新,接着手一抖,把博客的Repo删掉了.</p><p>…</p><p>既然删了，那么就这么干吧。</p><p>其实后来发现这并不困难，只是我刚开始想多了而已。</p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><blockquote><p>Travis CI是在软件开发领域中的一个在线的，分布式的持续集成服务，用来构建及测试在GitHub托管的代码。这个软件的代码同时也是开源的，可以在GitHub上下载到，</p></blockquote><p>实际上你会发现，当你把博客Push到Github上时，你的计算机会在NodeJS环境下生成静态文件，然后push到Github。这些步骤其实完全可以用Travis CI做到。</p><p>最好在 <code>source</code> 下新建一个 <code>CNAME</code> 文件,并将绑定的域名写进去,不然直接在 <code>gh-page</code> 分支里弄Travis-ci会覆盖掉的.</p><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><h2 id="本地搭建环境"><a href="#本地搭建环境" class="headerlink" title="本地搭建环境"></a>本地搭建环境</h2><p>这一步必不可少，额具体方法网上一搜一大堆，这里就不说了。请注意，最好事先选好主题和插件，配置完成后自己测试一下。完毕后进入下一步。这里不在演示了【毕竟搭建环境与此博文几乎无关】</p><h2 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h2><p>默认情况下，直接在hexo博客根目录上链接repo上传，不会把 <code>node_modules/</code> 上传上去，因为 <code>.gitignore</code> 中包含这么一行：</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/20200629140732.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>但是当时以为我拓展是不能上传的，于是手一滑，删掉那一行，上传上去了。</p><p>结果后来发现这就是个错误的选择。</p><ol><li><p><code>node_modules/</code> 中，文件比较小</p></li><li><p><code>node_modules/</code> 中，文件比较多</p></li></ol><p>所以：</p><ol start="3"><li><code>node_modules/</code> 中，文件比较碎</li></ol><p>嗯，<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/stick_38.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/20200629141017.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>我 <code>git add .</code> 了一下,它运算了半小时, <code>git commit</code> 又花了半小时,幸好<code>git push</code> 是打包上去的,不然我估计又要花半个小时.</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/20200629141259.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>结果戏剧性的是,当我去看travis-ci部署记录时,我发现:</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/20200629141542.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/tx.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><blockquote><p>所以,还没用Travis-ci的同学,请不要手贱删掉 <code>.gitignore</code> 中的 <code>node_modules/</code></p></blockquote><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><blockquote><p>这里暂时不说私有怎么部署,这里讲的是PublicRepo.</p></blockquote><h3 id="1-注册travis-ci-org"><a href="#1-注册travis-ci-org" class="headerlink" title="1.注册travis-ci.org"></a>1.注册travis-ci.org</h3><p>前往 [<a href="https://travis-ci.org]" target="_blank" rel="noopener">https://travis-ci.org]</a> 用Github账号注册 <strong>注意了啊,注意了啊,</strong> 是 <code>.org</code> 而不是 <code>.com</code> ! 鬼知道我在这上面浪费了多少时间! <code>travis-ci.org</code> 是免费给公开repo部署的,<code>travis-ci.com</code> 是收费的,但是 <code>travis-ci.com</code> 却是可以绑定并免费部署公开Repo的.最有问题的是这两个网站其中一个绑定repo后,另一个就不能绑定了!! 害得我以为是缓存搞出来的事,搞了半天没解决,一看地址栏人都傻了.<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/tx.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><h3 id="2-绑定travis"><a href="#2-绑定travis" class="headerlink" title="2.绑定travis"></a>2.绑定travis</h3><p>前往 [<a href="https://github.com/marketplace/travis-ci]" target="_blank" rel="noopener">https://github.com/marketplace/travis-ci]</a> 绑定travis-ci到你的github后 继续前往 <a href="https://github.com/settings/installations" target="_blank" rel="noopener">GitHub 的 Applications settings</a> ,点击 <code>Travis CI</code>配置你的repo能被TravisCI访问</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/20200629142607.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><h3 id="3-新建Token"><a href="#3-新建Token" class="headerlink" title="3.新建Token"></a>3.新建Token</h3><p>前往 GitHub <a href="https://github.com/settings/tokens" target="_blank" rel="noopener">新建 Personal Access Token</a></p><p>新建一个Token:</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/20200629142812.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>然而请注意,官方文档里说只需勾选 <code>repo</code> 全部权限即可,但是据我测试,<strong>只勾选则会导致401验证错误</strong>.似乎还要勾选 <code>read:public_key</code> 和 <code>read:user</code> ,当然如果你足够懒,你也可以全勾上, <strong>但请不要把Token泄露出去</strong>,否则你的Github就不太好使了.</p><p>点击生成Token：</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/20200629143305.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>记得复制下来保存！不然下次你就看不到你的Token了！</p><h3 id="4-修改Repo"><a href="#4-修改Repo" class="headerlink" title="4.修改Repo"></a>4.修改Repo</h3><p>进入Repo的 <strong>Master</strong> 分支，新建一个 <code>.travis.yml</code> ，里面塞上：</p><div class="hljs"><pre><code class="hljs yml"><span class="hljs-attr">sudo:</span> <span class="hljs-literal">false</span><span class="hljs-attr">language:</span> <span class="hljs-string">node_js</span><span class="hljs-attr">node_js:</span><span class="hljs-bullet">  -</span> <span class="hljs-number">10</span> <span class="hljs-comment"># use nodejs v10 LTS</span><span class="hljs-attr">cache:</span> <span class="hljs-string">npm</span><span class="hljs-attr">branches:</span><span class="hljs-attr">  only:</span><span class="hljs-bullet">    -</span> <span class="hljs-string">master</span> <span class="hljs-comment"># build master branch only</span><span class="hljs-attr">script:</span><span class="hljs-bullet">  -</span> <span class="hljs-string">hexo</span> <span class="hljs-string">generate</span> <span class="hljs-comment"># generate static files</span><span class="hljs-attr">deploy:</span><span class="hljs-attr">  provider:</span> <span class="hljs-string">pages</span><span class="hljs-attr">  skip-cleanup:</span> <span class="hljs-literal">true</span><span class="hljs-attr">  github-token:</span> <span class="hljs-string">$GH_TOKEN</span><span class="hljs-attr">  keep-history:</span> <span class="hljs-literal">true</span><span class="hljs-attr">  on:</span><span class="hljs-attr">    branch:</span> <span class="hljs-string">master</span><span class="hljs-attr">  local-dir:</span> <span class="hljs-string">public</span></code></pre></div><p>对,改都不要改,就这么塞进去.</p><h3 id="5-Token导入Travis-ci"><a href="#5-Token导入Travis-ci" class="headerlink" title="5.Token导入Travis-ci"></a>5.Token导入Travis-ci</h3><p>Token很重要,你必须要告诉Travis-ci,因为它要获取对你的repo的写入权,但你也不能明文写在Repo里面,因为别人看得到.</p><p>所以,在 [### 4.修改Repo] 中,<code>github-token:</code> 后面跟着的不是明文,而是变量 <code>$GH_TOKEN</code>.</p><p>进入 [<a href="https://travis-ci.org/github/{用户名}/{仓库名}/settings]" target="_blank" rel="noopener">https://travis-ci.org/github/{用户名}/{仓库名}/settings]</a> 中,看到 <strong>Environment Variables</strong> ,Name选择 <code>GH_TOKEN</code> ,Value把[### 3.新建Token] 中的Token粘贴到里面去.BRANCH直接默认.</p><p><strong>特别注意!,将后面DISPLAY VALUE IN BUILD LOG弄成灰色,不然你的Token将会公开!</strong>,如果你不慎公开Token,请前往GithubPersonalToken删除并重新生成一个Token!</p><p>最终应该是这样子的:</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/20200629145235.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>在日志里面,搜索Token,应该是这样子的:</p><div class="hljs"><pre><code class="hljs undefined">$ <span class="hljs-builtin-name">export</span> GH_TOKEN=[secure]</code></pre></div><h3 id="6-打开触发器"><a href="#6-打开触发器" class="headerlink" title="6.打开触发器"></a>6.打开触发器</h3><p>前往 <a href="https://travis-ci.org/account/repositories" target="_blank" rel="noopener">https://travis-ci.org/account/repositories</a>,打开目标Repo后面的按钮:</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/20200629145630.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><h3 id="7-触发Travis-ci"><a href="#7-触发Travis-ci" class="headerlink" title="7.触发Travis-ci"></a>7.触发Travis-ci</h3><p>修改文件或新建Readme,让Travis-ci触发并开始工作.</p><p>比如说我更新 <code>留言板.md</code> ,Github上一更新,Travis-ci自动开始工作:</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/20200629150414.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/20200629150525.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/20200629150600.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="麻烦无视左上角的亮度调节"></p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/20200629152935.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>本次日志地址 <a href="https://api.travis-ci.org/v3/job/703061869/log.txt" target="_blank" rel="noopener">https://api.travis-ci.org/v3/job/703061869/log.txt</a></p><h3 id="8-以后"><a href="#8-以后" class="headerlink" title="8.以后"></a>8.以后</h3><p>更新博客直接在Github上更改，或者写好之后直接上传，或者pull到本地写好后push到Github，此后操作用户无需本地使用Hexo，也不用调整Travis-ci，安心写博客吧！</p><h1 id="草稿问题"><a href="#草稿问题" class="headerlink" title="草稿问题"></a>草稿问题</h1><p>其实这个比较简单，在修改时新建一个branch，名字叫 <code>drafts</code> ,由于 <code>.travis.yml</code> 规定只捕获 <code>master</code> ,草稿分支不会触发，修改的时候全部在drafts上修改，修改好了直接PullRequest，完事！</p><p>*<em>这么干以后,一定要注意,以后所有修改无论大小,都必须先在 <code>drafts</code> 里修改,然后发起PR,然后合并.不然直接在 <code>master</code> 里修改有可能会导致无法合并! *</em></p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>总之，这样就可以安心用手机或者在学校更新Blog了！</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/stick_54.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Hexo作为静态博客，好处相当明显，开销少，并且对于那种DDosS和CC套上CDN毅然不动。当然，最蛋疼的莫过于更新了，每次在自己电脑上辛辛苦苦码好字，一个push，hexo绿色光芒在命令提示符上闪烁着光芒，突然发现把仓库名字 &lt;code&gt;ChenYFan&lt;/code&gt; 打</summary>
      
    
    
    
    <category term="好方法" scheme="https://blog.cyfan.top/categories/好方法/"/>
    
    
    <category term="Hexo" scheme="https://blog.cyfan.top/tags/Hexo/"/>
    
    <category term="Travis-CI" scheme="https://blog.cyfan.top/tags/Travis-CI/"/>
    
    <category term="在线更新" scheme="https://blog.cyfan.top/tags/在线更新/"/>
    
    <category term="奇淫巧计" scheme="https://blog.cyfan.top/tags/奇淫巧计/"/>
    
  </entry>
  
  <entry>
    <title>通过CloudFlareAPI获取用户侧信息</title>
    <link href="https://blog.cyfan.top/p/a7d0d7f8.html"/>
    <id>https://blog.cyfan.top/p/a7d0d7f8.html</id>
    <published>2020-06-28T00:30:00.000Z</published>
    <updated>2021-02-08T00:18:08.325Z</updated>
    
    <content type="html"><![CDATA[<p>噫，中考结束了，心中一块大石头总算碎了。虽然说考上提前批中考考不考无所谓，但是回去一次模拟考直接把我考傻了，太烂了<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/%E8%82%BF%E5%8C%85.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt>,以前初一不学习的时候都没有这么烂。啊么学习两星期，中考一考，今年理科超级简单，欸，这样理科分数拉不开了，啧啧啧，理科生的末日。</p><p>因为人大多数时间在学校，不太方便用自带hexopush到Github，一是博客文件同步不方便，二是如果有个小错误就很抓狂，所以呢，以前的打算是部署到vps，通过hexo+nginx实现访问，不过可能是人比较傻，一直没搞好，而且这种免费小鸡说炸就炸，不保险，还是跟着<a href="https://hexo.io/zh-cn/docs/github-pages" target="_blank" rel="noopener">hexo官方文档</a> 用Travis-ci+Github实现在线自动部署,以后更新也方便点<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/%E5%9D%90%E7%AD%89.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>好了好了，不说了，今天简单讲一下如何用CloudFlare自带的API获取用户信息。</p><h1 id="cdn-cgi-trace"><a href="#cdn-cgi-trace" class="headerlink" title="/cdn-cgi/trace"></a>/cdn-cgi/trace</h1><p>刚开始建立博客的时候，也是想过显示用户ip地址的，但网上的教程大多都是用搜狐新浪的js，而且很早就过期了。所以也就搁着迟迟没有解决。</p><p>后来偶然间知道CloudFlare有个比较神奇的技术，在部署在CloudFlare上的网站，域名后面加上<code>/cdn-cgi/trace</code>就可以获得用户侧信息，例如<code>https://blog.cyfan.top/cdn-cgi/trace</code>：</p><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-attr">fl</span>=<span class="hljs-number">23</span>f2**<span class="hljs-attr">h</span>=blog.cyfan.top<span class="hljs-attr">ip</span>=<span class="hljs-number">39.182</span>.***.***<span class="hljs-attr">ts</span>=<span class="hljs-number">15933078</span>**.***<span class="hljs-attr">visit_scheme</span>=https<span class="hljs-attr">uag</span>=Mozilla/<span class="hljs-number">5.0</span> (Windows NT <span class="hljs-number">10.0</span><span class="hljs-comment">; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36</span><span class="hljs-attr">colo</span>=HKG<span class="hljs-attr">http</span>=http/<span class="hljs-number">2</span><span class="hljs-attr">loc</span>=CN<span class="hljs-attr">tls</span>=TLSv1.<span class="hljs-number">3</span><span class="hljs-attr">sni</span>=plaintext<span class="hljs-attr">warp</span>=<span class="hljs-literal">off</span></code></pre></div><p>[对于部分隐私替换掉，请见谅]</p><p>差不多都全了，<code>ip</code>、<code>uag</code>、<code>colo</code>、<code>loc</code>、<code>tls</code>这些数据都是我们所需要的，那么，怎么把这些数据迁移到网页上呢？</p><h1 id="答案是：JavaScript"><a href="#答案是：JavaScript" class="headerlink" title="答案是：JavaScript"></a>答案是：JavaScript</h1><p>首先要引入Jquery，如果你的网页上已经有Jquery，那么就不必再次引入：</p><div class="hljs"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://cdn.jsdelivr.net/npm/jquery@3.2.1/dist/jquery.min.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre></div><p>接着加入JS[需在Jquery以下,否则会报错]:</p><div class="hljs"><pre><code class="hljs js">&lt;script&gt;getCDNinfo = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;$.ajax(&#123;<span class="hljs-attr">url</span>: <span class="hljs-string">"https://cdn.cyfan.top/cdn-cgi/trace"</span>,<span class="hljs-attr">success</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">data, status</span>) </span>&#123;<span class="hljs-keyword">let</span> areas = <span class="hljs-string">"Antananarivo, Madagascar - (TNR);Cape Town, South Africa - (CPT);Casablanca, Morocco - (CMN);Dar Es Salaam, Tanzania - (DAR);Djibouti City, Djibouti - (JIB);Durban, South Africa - (DUR);Johannesburg, South Africa - (JNB);Kigali, Rwanda - (KGL);Lagos, Nigeria - (LOS);Luanda, Angola - (LAD);Maputo, MZ - (MPM);Mombasa, Kenya - (MBA);Port Louis, Mauritius - (MRU);Réunion, France - (RUN);Bangalore, India - (BLR);Bangkok, Thailand - (BKK);Bandar Seri Begawan, Brunei - (BWN);Cebu, Philippines - (CEB);Chengdu, China - (CTU);Chennai, India - (MAA);Chittagong, Bangladesh - (CGP);Chongqing, China - (CKG);Colombo, Sri Lanka - (CMB);Dhaka, Bangladesh - (DAC);Dongguan, China - (SZX);Foshan, China - (FUO);Fuzhou, China - (FOC);Guangzhou, China - (CAN);Hangzhou, China - (HGH);Hanoi, Vietnam - (HAN);Hengyang, China - (HNY);Ho Chi Minh City, Vietnam - (SGN);Hong Kong - (HKG);Hyderabad, India - (HYD);Islamabad, Pakistan - (ISB);Jakarta, Indonesia - (CGK);Jinan, China - (TNA);Karachi, Pakistan - (KHI);Kathmandu, Nepal - (KTM);Kolkata, India - (CCU);Kuala Lumpur, Malaysia - (KUL);Lahore, Pakistan - (LHE);Langfang, China - (NAY);Luoyang, China - (LYA);Macau - (MFM);Malé, Maldives - (MLE);Manila, Philippines - (MNL);Mumbai, India - (BOM);Nagpur, India - (NAG);Nanning, China - (NNG);New Delhi, India - (DEL);Osaka, Japan - (KIX);Phnom Penh, Cambodia - (PNH);Qingdao, China - (TAO);Seoul, South Korea - (ICN);Shanghai, China - (SHA);Shenyang, China - (SHE);Shijiazhuang, China - (SJW);Singapore, Singapore - (SIN);Suzhou, China - (SZV);Taipei - (TPE);Thimphu, Bhutan - (PBH);Tianjin, China - (TSN);Tokyo, Japan - (NRT);Ulaanbaatar, Mongolia - (ULN);Vientiane, Laos - (VTE);Wuhan, China - (WUH);Wuxi, China - (WUX);Xi'an, China - (XIY);Yerevan, Armenia - (EVN);Zhengzhou, China - (CGO);Zuzhou, China - (CSX);Amsterdam, Netherlands - (AMS);Athens, Greece - (ATH);Barcelona, Spain - (BCN);Belgrade, Serbia - (BEG);Berlin, Germany - (TXL);Brussels, Belgium - (BRU);Bucharest, Romania - (OTP);Budapest, Hungary - (BUD);Chișinău, Moldova - (KIV);Copenhagen, Denmark - (CPH);Cork, Ireland -  (ORK);Dublin, Ireland - (DUB);Düsseldorf, Germany - (DUS);Edinburgh, United Kingdom - (EDI);Frankfurt, Germany - (FRA);Geneva, Switzerland - (GVA);Gothenburg, Sweden - (GOT);Hamburg, Germany - (HAM);Helsinki, Finland - (HEL);Istanbul, Turkey - (IST);Kyiv, Ukraine - (KBP);Lisbon, Portugal - (LIS);London, United Kingdom - (LHR);Luxembourg City, Luxembourg - (LUX);Madrid, Spain - (MAD);Manchester, United Kingdom - (MAN);Marseille, France - (MRS);Milan, Italy - (MXP);Moscow, Russia - (DME);Munich, Germany - (MUC);Nicosia, Cyprus - (LCA);Oslo, Norway - (OSL);Paris, France - (CDG);Prague, Czech Republic - (PRG);Reykjavík, Iceland - (KEF);Riga, Latvia - (RIX);Rome, Italy - (FCO);Saint Petersburg, Russia - (LED);Sofia, Bulgaria - (SOF);Stockholm, Sweden - (ARN);Tallinn, Estonia - (TLL);Thessaloniki, Greece - (SKG);Vienna, Austria - (VIE);Vilnius, Lithuania - (VNO);Warsaw, Poland - (WAW);Zagreb, Croatia - (ZAG);Zürich, Switzerland - (ZRH);Arica, Chile - (ARI);Asunción, Paraguay - (ASU);Bogotá, Colombia - (BOG);Buenos Aires, Argentina - (EZE);Curitiba, Brazil - (CWB);Fortaleza, Brazil - (FOR);Guatemala City, Guatemala - (GUA);Lima, Peru - (LIM);Medellín, Colombia - (MDE);Panama City, Panama - (PTY);Porto Alegre, Brazil - (POA);Quito, Ecuador - (UIO);Rio de Janeiro, Brazil - (GIG);São Paulo, Brazil - (GRU);Santiago, Chile - (SCL);Willemstad, Curaçao - (CUR);St. George's, Grenada - (GND);Amman, Jordan - (AMM);Baghdad, Iraq - (BGW);Baku, Azerbaijan - (GYD);Beirut, Lebanon - (BEY);Doha, Qatar - (DOH);Dubai, United Arab Emirates - (DXB);Kuwait City, Kuwait - (KWI);Manama, Bahrain - (BAH);Muscat, Oman - (MCT);Ramallah - (ZDM);Riyadh, Saudi Arabia - (RUH);Tel Aviv, Israel - (TLV);Ashburn, VA, United States - (IAD);Atlanta, GA, United States - (ATL);Boston, MA, United States - (BOS);Buffalo, NY, United States - (BUF);Calgary, AB, Canada - (YYC);Charlotte, NC, United States - (CLT);Chicago, IL, United States - (ORD);Columbus, OH, United States - (CMH);Dallas, TX, United States - (DFW);Denver, CO, United States - (DEN);Detroit, MI, United States - (DTW);Honolulu, HI, United States - (HNL);Houston, TX, United States - (IAH);Indianapolis, IN, United States - (IND);Jacksonville, FL, United States - (JAX);Kansas City, MO, United States - (MCI);Las Vegas, NV, United States - (LAS);Los Angeles, CA, United States - (LAX);McAllen, TX, United States - (MFE);Memphis, TN, United States - (MEM);Mexico City, Mexico - (MEX);Miami, FL, United States - (MIA);Minneapolis, MN, United States - (MSP);Montgomery, AL, United States - (MGM);Montréal, QC, Canada - (YUL);Nashville, TN, United States - (BNA);Newark, NJ, United States - (EWR);Norfolk, VA, United States - (ORF);Omaha, NE, United States - (OMA);Philadelphia, United States - (PHL);Phoenix, AZ, United States - (PHX);Pittsburgh, PA, United States - (PIT);Port-Au-Prince, Haiti - (PAP);Portland, OR, United States - (PDX);Queretaro, MX, Mexico - (QRO);Richmond, Virginia - (RIC);Sacramento, CA, United States - (SMF);Salt Lake City, UT, United States - (SLC);San Diego, CA, United States - (SAN);San Jose, CA, United States - (SJC);Saskatoon, SK, Canada - (YXE);Seattle, WA, United States - (SEA);St. Louis, MO, United States - (STL);Tampa, FL, United States - (TPA);Toronto, ON, Canada - (YYZ);Vancouver, BC, Canada - (YVR);Tallahassee, FL, United States - (TLH);Winnipeg, MB, Canada - (YWG);Adelaide, SA, Australia - (ADL);Auckland, New Zealand - (AKL);Brisbane, QLD, Australia - (BNE);Melbourne, VIC, Australia - (MEL);Noumea, New caledonia - (NOU);Perth, WA, Australia - (PER);Sydney, NSW, Australia - (SYD)"</span>.split(<span class="hljs-string">";"</span>);<span class="hljs-keyword">let</span> area = data.split(<span class="hljs-string">"colo="</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">"\n"</span>)[<span class="hljs-number">0</span>];<span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; areas.length; i++) &#123;<span class="hljs-keyword">if</span> (areas[i].indexOf(area) != <span class="hljs-number">-1</span>) &#123;<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"cdn"</span>).innerHTML = areas[i];<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"ip"</span>).innerHTML = data.split(<span class="hljs-string">"ip="</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">"\n"</span>)[<span class="hljs-number">0</span>];<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"httpos"</span>).innerHTML = data.split(<span class="hljs-string">"visit_scheme="</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">"\n"</span>)[<span class="hljs-number">0</span>];<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"uag"</span>).innerHTML = data.split(<span class="hljs-string">"uag="</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">"\n"</span>)[<span class="hljs-number">0</span>];<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"http"</span>).innerHTML = data.split(<span class="hljs-string">"http="</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">"\n"</span>)[<span class="hljs-number">0</span>];<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"loc"</span>).innerHTML = data.split(<span class="hljs-string">"loc="</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">"\n"</span>)[<span class="hljs-number">0</span>];<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"tls"</span>).innerHTML = data.split(<span class="hljs-string">"tls="</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">"\n"</span>)[<span class="hljs-number">0</span>];<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"warp"</span>).innerHTML = data.split(<span class="hljs-string">"warp="</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">"\n"</span>)[<span class="hljs-number">0</span>];<span class="hljs-keyword">break</span>;&#125;&#125;&#125;&#125;)&#125;$(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;getCDNinfo();    <span class="hljs-comment">//页面加载完毕就获取CDN信息</span>&#125;);<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span></code></pre></div><p>这个脚本会获取大部分用户信息并解析所链接节点位置,默认链接到<code>cdn.cyfan.top</code>，已通过<code>CORS</code>,接着在网页需要添加的地方增加html代码:</p><div class="hljs"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>当前CDN节点: <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"cdn"</span>&gt;</span>【未知】<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">br</span>&gt;</span>你的ip: <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"ip"</span>&gt;</span>【未知】<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">br</span>&gt;</span>你当前以: <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"httpos"</span>&gt;</span>【未知】<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>形式访问我们的网站<span class="hljs-tag">&lt;/<span class="hljs-name">br</span>&gt;</span>你的User-Agent: <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"uag"</span>&gt;</span>【未知】<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">br</span>&gt;</span>你以: <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"http"</span>&gt;</span>【未知】<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>形式访问本网站<span class="hljs-tag">&lt;/<span class="hljs-name">br</span>&gt;</span>你的所在国家/地区: <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"loc"</span>&gt;</span>【未知】<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">br</span>&gt;</span>你以: <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"tls"</span>&gt;</span>【未知】<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">br</span>&gt;</span>你是否以Warp访问我们: <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"warp"</span>&gt;</span>【未知】<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></code></pre></div><p>[可以根据需要增减]，一般情况下简单获取写成这样：</p><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>当前CDN节点: <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"cdn"</span>&gt;</span>【未知】<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> |你的ip: <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"ip"</span>&gt;</span>【未知】<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> |你的所在国家/地区: <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"loc"</span>&gt;</span>【未知】 <span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></code></pre></div><p>结果应该类似这样:</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/20200628094419.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>划到页底即可看到。</p><h1 id="End"><a href="#End" class="headerlink" title="End"></a>End</h1><p>OHHH，又水了一篇，下次讲讲如何部署博客到Travis-ci上。溜了溜了 <img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/yhuaji.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt>。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;噫，中考结束了，心中一块大石头总算碎了。虽然说考上提前批中考考不考无所谓，但是回去一次模拟考直接把我考傻了，太烂了&lt;img src=&quot;https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/%E8%82%BF%E5%8C%85</summary>
      
    
    
    
    <category term="屌代码" scheme="https://blog.cyfan.top/categories/屌代码/"/>
    
    
    <category term="CloudFlare" scheme="https://blog.cyfan.top/tags/CloudFlare/"/>
    
    <category term="API" scheme="https://blog.cyfan.top/tags/API/"/>
    
    <category term="IP" scheme="https://blog.cyfan.top/tags/IP/"/>
    
    <category term="用户信息" scheme="https://blog.cyfan.top/tags/用户信息/"/>
    
  </entry>
  
  <entry>
    <title>博客DNS解析是不是发生了亿点点变化</title>
    <link href="https://blog.cyfan.top/p/e3d48308.html"/>
    <id>https://blog.cyfan.top/p/e3d48308.html</id>
    <published>2020-06-07T03:54:00.000Z</published>
    <updated>2021-02-08T00:18:08.321Z</updated>
    
    <content type="html"><![CDATA[<p>啊,还有三星期就要中考了,中考完就休息两天是想灭了我吗?博客感觉要永久性拖更了，大概也就一两个月更一篇吧。累了累了（╯︿╰）.<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/%E6%8A%BD%E7%83%9F.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>这个星期回来呢，博客从内部发生了一些小变化，来来来，说说这些变化:</p><p>原先接入CloudFlare的时候呢,是通过NS官方接入的,当然了,官方默认的CDN直接给我绕道大洋彼岸去了,什么CN2都没有,速度只有几十KB,后来<a href="/2020/03/11/如何不出CloudFlare随便搞一搞将托管在其上的网站速度提升20倍/">也有了自创NS官方接入加速方法</a>.走香港日本确实好了很多.</p><p>然而问题很多,比如说没有负载均衡,联通走1.0.0.*直接绕道加拿大,卡的一批,延迟甚至达到<code>300ms</code>.</p><p>或者说比较头疼的并发数限制,一分钟1000次直接抛异常[后来图片迁出解决了这个问题].而且反代两次流量很大。</p><p>再比如说网站域名问题也很大，我是在万网购买的，但是万网的DNS很差，后来就放在CloudFlare上，但是万网续费嫁给比腾讯贵一块钱，所以我就悄悄地迁移到腾讯上，正好赶上6|4，将近10天才迁移完毕。</p><p>所以趁迁移的机会，接入了bnxb，实现了真正的加速 <img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/%E6%97%A0%E6%89%80%E8%B0%93.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt>.</p><p>当然，负载均衡还是做得很好的，移动直接走香港，相当的快，延迟&lt;50ms :</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/20200607133744.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/20200607134252.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>电信走美国CN2线路和日本大阪线路,延迟压在200ms还是可以的:</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/20200607134104.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p><del>就NM联通离谱,就没有什么好线路链接,走香港都给我绕道新加坡.延迟高的吓人：</del></p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/20200607134345.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p><del>这里就对联通用户说声对不起了</del></p><p>抱歉啊，这个星期刚发现 <code>104.16.246.*</code> 和 <code>104.16.245.*</code> 对联通相当好，速度500kb/s都没问题<span class="heimu">【虽然延迟还是很大】</span><br><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/20200628090939.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt><br><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/20200628095806.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p><del>真香。</del></p><p>Google评分也高了不少,电脑端评分上90了。<br><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/20200628091136.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt><br>当然，本站基本上都是托管于CloudFlare的，我也没这个闲工夫把每一个域名负载均衡，最简单的就是设置一个已经负载均衡的域名，然后直接CNAME，本站加速域名为 <code>cdn.cyfan.top</code> ,如果你不想自己设置10个ip负载均衡也可以选择我的,配置如下</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/20200607134808.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>当然CDN我会时不时调整一下,以实现访问加速</p><p>关于图床呢,现在直接用PicGo了,上传图片粘贴复制即可,快了不少,剪贴板直接上传,可为神器一枚:</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/20200607134957.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/postpic/20200607135057.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>以及这里再问候一下腾讯云海外加速总管的祖宗，出口怎么就是Amazon了？连日本CDN海外加速节点都是200ms，你玩我呢？CDN一天收费0.5元，干哈？？现在图床CDN换成CloudFlare了，速度还可以。</p><p>6|4那一天我ping了一下我的博客,延迟虽然很严重200ms,但至少还能连上???下次懒得在那一天闭站保护了.</p><p>溜了溜了,应该是中考前最后一篇水文章.</p><img src="https://cdn.jsdelivr.net/npm/chenyfan-oss@1.1.10/12311678.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;啊,还有三星期就要中考了,中考完就休息两天是想灭了我吗?博客感觉要永久性拖更了，大概也就一两个月更一篇吧。累了累了（╯︿╰）.&lt;img src=&quot;https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/%E6%8A%BD%E7</summary>
      
    
    
    
    <category term="又双叒叕是水文" scheme="https://blog.cyfan.top/categories/又双叒叕是水文/"/>
    
    
    <category term="CloudFlare" scheme="https://blog.cyfan.top/tags/CloudFlare/"/>
    
    <category term="DNS" scheme="https://blog.cyfan.top/tags/DNS/"/>
    
    <category term="CDN" scheme="https://blog.cyfan.top/tags/CDN/"/>
    
  </entry>
  
  <entry>
    <title>这一个半月，我干了什么</title>
    <link href="https://blog.cyfan.top/p/cc675020.html"/>
    <id>https://blog.cyfan.top/p/cc675020.html</id>
    <published>2020-05-30T08:06:00.000Z</published>
    <updated>2021-02-08T00:18:08.325Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/wjlkdhxs.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>啊，期中考试终于考完了，现在心里想的都是司马脸，<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/huaji.gif" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>距离上一次更新已经将近1个半月了，赶在5月小尾巴发一篇博文。当然，这个月维护还是做到了，只不过太忙没更新而已。</p><p>过来扯扯这个月发生了什么。</p><h1 id="计算机方面"><a href="#计算机方面" class="headerlink" title="计算机方面"></a>计算机方面</h1><h2 id="网站方面"><a href="#网站方面" class="headerlink" title="网站方面"></a>网站方面</h2><h3 id="VPS"><a href="#VPS" class="headerlink" title="VPS"></a>VPS</h3><p>入手了一台德国VPS，还得感谢这位老兄：</p><p><a href="https://blog.qwqdanchun.cn/archives/1001" target="_blank" rel="noopener">簞純-EUserv 德国永久免费VPS申请</a></p><p>试了一下，性能略差，连IPV4都没有，就当是学习吧，现在就是拿来玩玩的，毕竟我大多数情况下基本是ServerLess。</p><p>以后打算全站迁移到一台VPS上，当然习惯用Hexo了，毕竟Hexo-Admin还是很给力的。</p><h3 id="图床："><a href="#图床：" class="headerlink" title="图床："></a>图床：</h3><p>我当场裂开。</p><p>之前全放在Github上，但是，但是这会导致多线程并发是Worker抛出异常，速度还很慢。而且很大，Github那么恐怖的大小：<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/206.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>三个星期前开始迁移，刚开始采用了GoogleDrive+<br>GDIndex，上学去的时候，加载速度还不错，结果一到学校，自己打开，爆一大堆404.</p><p>Workers自然也出大问题<br><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-205.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>后来了解到，谷歌网盘在每每输出一个文件，都会来一次销魂的杀毒，一张10kb的图片，杀毒将近10s，Worker超时30s直接返回404！！！？？？，我当时心里就开始表演天皇meta的showtime了。<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/%E5%96%B7%E8%A1%80.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>所以后来又采用腾讯云免费SCF额度+OneDrive那可怜的5GB制作图床，好歹也能正常加载，但是OMp的工作原理和GI不一样，GoogleDrive在国内那是不可访问的，所以最终还是采用了反向代理，但是OneDrive是可以滴，所以OMp采用的是301跳转。燃鹅，直连速度和延迟相当的感人，在多线程并发时经常超时。<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/tx.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>当时整个人都裂开了。</p><p>所以，最终解决办法就是，氪金！！！！！！</p><p>腾讯云COS（相当于阿里云OSS）+CDN，当然因为没备案所以放在Hongkong，但是腾讯云有个暗坑，COS绑定自定义域名<del>md</del>居然不给直接开SSL，非得要套层CDN才行，这不是明摆着坑钱么。计算下来，每天平均支出0.03￥.</p><p>肉疼。<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/s.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>好在腾讯COS也有客户端，上传文件至少没那么麻烦。</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/207.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>不过话说回来，最近香港局势确实很不稳定，我现在根本无法直连Hongkong的COSBucket，CDN套就套吧，只不过神奇地绕道美国都是什么奇葩玩意，害得我只能A到日本，出口居然是Amazon。</p><h3 id="评论系统"><a href="#评论系统" class="headerlink" title="评论系统"></a>评论系统</h3><p>又是一个当场炸裂的东西。</p><p>Gitalk本身链接api.github.com就是一个相当蛋疼的事情。</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/205.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>我也尝试着做过类似于DiqusJS的反向代理的尝试，可是到最后一步Github回调地址又给我强制跳到api.github.com，我当时人都傻了。最后实在头疼，换成了Valine。当然找了个魔改版本，看起来还不错。<del>【这一次再也不会造成30天无访问自动归档这种奇异的事情了】</del></p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/208.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>两个魔改后的JS地址</p><div class="hljs"><pre><code class="hljs html">https://unpkg.zhimg.com/chenyfan-oss@1.0.0/js/av-min.jshttps://unpkg.zhimg.com/chenyfan-oss@1.0.0/js/valine.min.js</code></pre></div><h2 id="编程方面"><a href="#编程方面" class="headerlink" title="编程方面"></a>编程方面</h2><p>艹，VB轮到我这一届居然不考，<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/qgbf.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt>，害得我只能硬啃C++。考试还行，就那附加题做不出来，一道高精乘法，居然忘记了<code>strlen()</code>这个函数，当时想撞墙的心态都有了。</p><h1 id="学习方面"><a href="#学习方面" class="headerlink" title="学习方面"></a>学习方面</h1><p>考完了，我完了。</p><p>数学150分扣46分是什么鬼？？？？？？？语文五道选择题错三道又是什么鬼？？？？？？？？</p><p><span class="heimu">还好物理只扣10分，化学一分没扣，计算机也只是附加题最后一道不会写而已</span></p><p>欸欸欸欸欸欸欸，感觉我要垫底。</p><h1 id="后言"><a href="#后言" class="headerlink" title="后言"></a>后言</h1><p>好好学习，天天向上！</p><p>好了好了，继续潜水<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/%E6%97%A0%E5%A5%88.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>滑稽</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/wjlkdhxs.jpg&quot; srcset=&quot;https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/them</summary>
      
    
    
    
    <category term="随心记" scheme="https://blog.cyfan.top/categories/随心记/"/>
    
    
    <category term="日常" scheme="https://blog.cyfan.top/tags/日常/"/>
    
    <category term="总结" scheme="https://blog.cyfan.top/tags/总结/"/>
    
  </entry>
  
  <entry>
    <title>Pandownload:愿你归来仍是英雄</title>
    <link href="https://blog.cyfan.top/p/1b33467f.html"/>
    <id>https://blog.cyfan.top/p/1b33467f.html</id>
    <published>2020-04-17T09:19:00.000Z</published>
    <updated>2021-02-08T00:18:08.325Z</updated>
    
    <content type="html"><![CDATA[<p>PanDownload 21世纪的英雄，在几天前，死了。</p><p>4月15日下午，扬州网警巡查执法官方微博发布通报称：“Pandownload软件开发嫌疑人已经被捕。”</p><p>刘某：PanDownload有窃取用户隐私行为。</p><p>嗯，来，你的证据呢？</p><h1 id="人性的毁灭"><a href="#人性的毁灭" class="headerlink" title="人性的毁灭"></a>人性的毁灭</h1><p>百度网盘迟迟不对PanDownload限制，之前很奇怪，现在明白了，原来是等到“盈利”到30万，有了个证据，才死死咬住不放。百度阴险，由此可见。</p><p>百度网盘限速，我就只能说呵呵了，如果你杠百度网盘硬盘资源有限，那么开始你可以调小硬盘大小，尽量不限速，那还行。自己拼命张开嘴说自己吃的多，到头来发现吃不了又悄悄闭嘴，什么意思？</p><p>刘某，一个人就可以把一个开发者抓到牢里，呵，我现在相当有理由怀疑这是个幌子，百度人性，可见一斑。哦不，百度没有人性。</p><p>想当年，550KB的运用程序硬是给我弄成大文件。我？？？</p><h1 id="要推车出去的停车场"><a href="#要推车出去的停车场" class="headerlink" title="要推车出去的停车场"></a>要推车出去的停车场</h1><p>百度网盘就好比停车场吧，刚开始假惺惺说这里空间比谁都大，好吧这确实赢得了我的好感，于是我也存了很多东西上去，就好比我把很多车开进来。直到垄断了整个停车场事业。百度终于展现自己的吃相了。</p><p>开车进来？没问题！2T空间，随便你！对啊，2T空间，谁不想要呢？我也停了。附近的停车场用户太多没能力，倒闭了。</p><p>现在，当我要开车出去的时候，你突然告诉我，不能开车出去，要用手推出去，理由是出去的通道很窄？要开车要付费，几十块一个月？</p><p>PanDownload，形象点，就是把你分身成几个，一起推，现在，总算能正常出去了吧。</p><p>PanDownload窃取用户隐私？你可能没搞懂，PanDownload，作用就是把你分身（Aria2多线程下载），窃取用户隐私，我可以肯定地说，就是个幌子。幕后百度，我只能说呵呵了。</p><h1 id="漏洞百出的被捕声明"><a href="#漏洞百出的被捕声明" class="headerlink" title="漏洞百出的被捕声明"></a>漏洞百出的被捕声明</h1><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-195.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>首先，PanDownload核心就是获取个直链，你需要反编译解剖软件结构，一盯几个小时？民警办案效率挺高的嘛。</p><p>黑客攻击计算机系统，哦，获取直链就算是黑客啦？我觉得我好屌哦。</p><p>隐私照片和文件泄露：证据呢？</p><p>以非会员权限突破百度网盘设定：你还是没脸说自己限速是吧，百度？</p><p>侵入？非法控制？：PanDownload唯一的作用就是获取直接链接（百度网盘客户端的正常操作）以及多线程下载（官方客户端没有），我用多线程就算是违法咯？</p><p>欸，行了行了，我都不想说了；</p><h1 id="未来，何去何从"><a href="#未来，何去何从" class="headerlink" title="未来，何去何从"></a>未来，何去何从</h1><p>互联网上分享个文件真的很难吗？我想，对于众多小白来说，真的，互联网分享文件确实很难。</p><p>百度一家，我已经彻底失去最后一点希望了，</p><p>贴吧的风控我也是服了，认认真真敲好的字被删除，我还不如用知乎；</p><p>搜索引擎？呵呵，营销号的风格，一目了然，国内我现在用<a href="https://magi.com" target="_blank" rel="noopener">magi</a> 一个人工智能搜索引擎，自动从网上拉取文章研究，AI把营销号和同类文章精准度真的高，而且搜索一些学习单词也很正常；或者使用DogeDoge（感觉颇似DuckDuckGo），精准的不误导不追踪；Bing，说实话不太习惯；国外的我就不必多说了；</p><p>网盘？OneDrive15GB储存个人资料不香么？普通大文件分享像我这样的穷B Workers+GoogleDrive用户体验完爆百度，为什么要百度资本？Mega还行，实际上Mega15GB也就刚好吧（那个50GB中35GB是新用户临时体验，一个月后失效）。再不济，iCloud！苹果有国内加速节点，虽然5GB真的够呛，不过同步一些个人资料还行吧？开源项目直接扔Github，反正也没多大。</p><p>所有百度，我只有用百度统计需求，原因么，Google统计国内加载真的很拖速度，迫不得已使用百度统计，虽然功能差很多，不过勉强吧；</p><p><strong>PanDownload能死而复生么？我不清楚，但是，我衷心祈愿！</strong></p><style>html{filter:grayscale(100%);-webkit-filter:grayscale(100%);-moz-filter:grayscale(100%);-ms-filter:grayscale(100%);-o-filter:grayscale(100%)}</style>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;PanDownload 21世纪的英雄，在几天前，死了。&lt;/p&gt;&lt;p&gt;4月15日下午，扬州网警巡查执法官方微博发布通报称：“Pandownload软件开发嫌疑人已经被捕。”&lt;/p&gt;&lt;p&gt;刘某：PanDownload有窃取用户隐私行为。&lt;/p&gt;&lt;p&gt;嗯，来，你的证据呢？&lt;/p</summary>
      
    
    
    
    <category term="随心记" scheme="https://blog.cyfan.top/categories/随心记/"/>
    
    
    <category term="百度" scheme="https://blog.cyfan.top/tags/百度/"/>
    
    <category term="网盘" scheme="https://blog.cyfan.top/tags/网盘/"/>
    
    <category term="PanDownload" scheme="https://blog.cyfan.top/tags/PanDownload/"/>
    
    <category term="悼文" scheme="https://blog.cyfan.top/tags/悼文/"/>
    
  </entry>
  
  <entry>
    <title>IPFS+CloudFlare=ServerLessWebPage</title>
    <link href="https://blog.cyfan.top/p/7fe9d99f.html"/>
    <id>https://blog.cyfan.top/p/7fe9d99f.html</id>
    <published>2020-04-07T08:29:02.000Z</published>
    <updated>2021-02-08T00:18:08.325Z</updated>
    
    <content type="html"><![CDATA[<p>IPFS，这个2018年诞生出来的小东西，似乎掀起了一阵热潮，然后被忘性极大的互联网吃瓜群众所抛弃，但不得不说这个东西可玩度非常高。</p><h1 id="IPFS是什么"><a href="#IPFS是什么" class="headerlink" title="IPFS是什么"></a>IPFS是什么</h1><p>网上一大堆文绉绉气昂昂极富学术气息的营销号整天吹嘘着ipfs是跨时代下一时代的比特币，我只能说呵呵，真的想要了解ipfs是什么的，建议左转维基百科或百度百科。</p><p>抄一下wikipedia上的介绍：</p><blockquote><p>（InterPlanetary File System，缩写IPFS）是一个旨在创建持久且分布式存储和共享文件的网络传输协议。它是一种内容可寻址的对等超媒体分发协议。在IPFS网络中的节点将构成一个分布式文件系统。</p></blockquote><p>其实按我的话来说,ipfs就是一个神奇的东西,你放上去一个文件,就会立刻被瓜分成数个文件碎片,每一台运行着ipfs的电脑和矿机就会争先恐后来抢夺你的碎片,并且抢到的人就会获得系统的奖励,而你却一分钱也不用付出.</p><p>是不是听起来很神奇?对的,你没有付出任何东西,别人却能获得奖励,而且你既满足储存文件的需求,储存你文件的人也能得到金钱.这种机制,叫做FileCoin.</p><p>你可以把它想象成Bittorrent+BitCoin的结合物,实际上他就是这样的<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/huaji.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif">.当然不完全是,但核心理念就是这样的.只不过,BitCoin付出的是算力,而FileCoin付出的是硬盘.</p><p>IPFS的主要目标是取代HTTP,说是取代,那刚开始就必须兼容,所以目前ipfs可以通过官网ipfs.io获取.</p><h1 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h1><p>与bt下载类似,我们需要先介绍BT.</p><h2 id="Bittorrent：分布式哈希表技术"><a href="#Bittorrent：分布式哈希表技术" class="headerlink" title="Bittorrent：分布式哈希表技术"></a>Bittorrent：分布式哈希表技术</h2><h3 id="先来一个故事"><a href="#先来一个故事" class="headerlink" title="先来一个故事"></a>先来一个故事</h3><p>很久很久以前，有一位老头，叫做刘XX。</p><p>他是一位很有资格的老师，为了顽固学生们的学习效果，他发送给所有学生一部视频：</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/BT/%E8%A7%86%E9%A2%91.bmp" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="图片" title="大视频"></p><p>（注：老刘的带宽是8Mbps，即最大带宽1MB/s，每一个学生的带宽也是8Mbps）</p><p>我们假设有5位学生需要这部视频，则可以画这样一幅图：</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/BT/down1.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="图片" title="组团下载ing..."></p><p>这只视频是<code>88.8MB</code>大小,按照这样的速度,同学需要花费<code>1024*88.8MB/(204.8kb/s)=444s</code>即<code>7分钟24秒</code></p><p>这还往往只是最理想状况.现在,我们来假设一下现象的出现:</p><ol><li>由于视频过于好看,引起广泛关注.现在有200个同学要求下载.则单个人下载完需要17760s即296min也就是约5h!</li><li>刘老师觉得单个视频教学质量不够好,决定上传一个8880GB的超大视频.(下载时间大于一天)</li><li>几个同学与刘老师搞好了关系,刘老师给他们较高的下载速度,导致带宽分配不均匀,没有关系的学生下载速度更慢了.(百度网盘既视感)</li></ol><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/BT/down-VIP.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="图片" title="A1拥有VIP专线"></p><ol start="4"><li>由于刘老师给的视频过于激烈,在下载了一段时间后,FBI<code>open the door!</code>敲上门来带走了刘老师,视频被查封了!!!(下载速度0)</li></ol><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/BT/FBI.jpeg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="图片" title="FBI！Open the door！"></p><p>可是，学习是必须的，这可怎么办呢？？？</p><p>这时….</p><p>刘老师突然想起来，为什么不让每一个学生互相连接，贡献自己已经下好的部分，以来获得最大的下载速度呢？？</p><p>请注意，在上述下载中，每一个人都没有充分利用自己的最大带宽，对不对？</p><p>那，解决办法就来了:</p><h3 id="P2P："><a href="#P2P：" class="headerlink" title="P2P："></a>P2P：</h3><p>以256KB为一包，我们就可获得356块文件</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/BT/file.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="图片" title="分包"></p><p>回到下载界面，我们看到，所有人都与其他人获得连接，那么，连接完成后：</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/BT/down-each.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="图片" title="连接"></p><p>（为了方便观察，我们将不必要的连接全部去掉）</p><p>现在，我们重新开始下载：</p><p>我们假设，A1下载了第一块，A2下载了第二块…</p><p>两秒后，所有人手上都拥有了一块文件：</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/BT/down-part1.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="图片" title="下载"></p><p>接下来，在不影响下载的情况下，A1与A2交换下载好的部分，同时与A3、A4、A5交换</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/BT/down-part2.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="图片" title="贡献&amp;下载"></p><p>看到了吗，所有人都得到了更高的速度，所有人的带宽都得到了最充分的利用，包括原先看起来毫无用处的上传带宽。</p><p>接着4秒后，所有的贡献分块都下载好了，而每一个人都从文件发布者身上又得到新的文件碎片。</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/BT/down-part3.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="图片" title="下载！"></p><p>所以，这种情况回一直持续下去，直到每一个人都下载完成，每一个人都只需下载149秒即2分29秒！相对于单点时间大大减少！</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/BT/down-finish.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="图片" title="完整！"></p><h3 id="人数多-amp-文件大-问题"><a href="#人数多-amp-文件大-问题" class="headerlink" title="人数多&amp;文件大 问题"></a>人数多&amp;文件大 问题</h3><p>现在，我们来假设第一个问题，200人下载怎么办？</p><p>我们可以明白，人数越多，文件交换越密集，对不对？</p><p>显然会见的，这个问题显得异常白痴，可以体会的是，在最佳条件下，每个人的带宽都达到了最大，如果每个人都下载了不同的分块，同时每个人都在贡献。</p><p>那么，每个人的下载速度，根本不会受到很大影响。</p><p>这对于传统下载（http/https/ftp）不同，传统下载仅仅由一台服务器贡献，人数多对于这台服务器压力极大。</p><p>但是，在这个环境里，服务器不仅仅是一台，而且，每当加入一个人，每一个人都可以当作服务器，这样，下载速度反而会大大提升。</p><p>反而文件很大是个硬梗，不过相对于传统下载，这种下载方式还是有一定能力解决这个问题的。</p><p><strong>回到这里</strong></p><h2 id="IPFS的原理"><a href="#IPFS的原理" class="headerlink" title="IPFS的原理"></a>IPFS的原理</h2><p>ipfs的世界有个东西叫做cid,大概类似于这样一串: <code>QmZCvMHrE56VqsejmG53xd9bW4RZjtFpLz46QMQjA81orL</code> ,前面的 <code>Qm</code> 是固定的,后面是SHA256密钥.cid又分为用户密钥和文件密钥,这个暂时不讨论.SHA256强度目前看来基本不会碰撞,毕竟64位十六进制的字符串,能实现16^64个文件的存储,也就是1.1579208923731619542357098500869e+77个id,有生之年能看到它碰撞也不是一件容易的事情</p><h3 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h3><p>如同BT,在短短几秒内,需要分享的文件被分块完毕,但此时,文件还是乖乖的窝在硬盘里,没有分享出去.</p><p>当有任何一个人试图获取资源时，你的ipfs会联系距离最近的节点,询问他们有没有意愿存东西.请注意此处的 <code>距离</code> ,这可不是物理距离,而是逻辑距离.</p><p>节点大都都会很高兴的同意,当然有些节点可能就是混口饭吃不想存,于是这些节点就会帮你联系离他最近的节点要不要,直到所有碎片瓜分完毕.这种算法,像极了DHT.</p><p>几分钟内,全球数个硬盘里就会出现你的文件的碎片,只要一声令下,这些文件就会调出.</p><p>此时,纵使文件发布者下线,文件照样流传.重复上传的文件,拆碎后被校验到与存在的文件相同则不会被上传.</p><p>上传完毕,文件就会拥有自己的id,也称为指纹,取回这些文件则需要id.</p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>你可以通过客户端下载,这个下载方式和btDHT其实原理是一样的;当然IPFS为了向下兼容http,自己也有网关,不过网关由于是公开的,一方面是速度,另一方面是已经引起了G||F||\/\/の注意，目前并不推荐使用网关下载，当然对于一些小文件比如网页和图片，这些都是随意的。</p><h1 id="IPFS的作用"><a href="#IPFS的作用" class="headerlink" title="IPFS的作用"></a>IPFS的作用</h1><p>与一些网盘相反，ipfs反而非常鼓励你往里面塞东西，越多越好，但是作为个人网盘并不适合，一方面ipfs的资源会随着下载的人越多，缓存的机器也会越多，速度更快，私人文件反而速度不佳；另一方面ipfs一旦上传，任何人包括你自己永远无法彻底删除这些文件，即使你在ipfs客户端删除了你分享的文件，这些文件仍然会得到传播。所以ipfs其实可以作为公开下载，甚至是图床，网页托管等等。</p><p>在中国，ipfs实际上并没有得到很大的限制，分享文件和下载文件其实很容易做到，麻烦的只是不能从ipfs网关获取罢了。</p><p>下面是我放在ipfs上的一张图片，即使我下线，这个文件依旧流传于网络之间。</p><p><img src="https://ipfs.cyfan.top/ipfs/QmU4Eh586TBCBP5KwKF3zvcXCKcnkw9wD9nKCqxTi15f4n" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><p>但是，ipfs反感在网关下载大文件，因为这样会造成不必要的带宽浪费，下载大文件请使用ipfs客户端+ipfs伴侣</p><h1 id="搭建无服务器网页"><a href="#搭建无服务器网页" class="headerlink" title="搭建无服务器网页"></a>搭建无服务器网页</h1><p>很多人网页放在Github+CloudFlare，其实换个思路，为什么不用IPFS+CloudFlare呢？</p><p>开始吧！</p><h2 id="下载ipfs"><a href="#下载ipfs" class="headerlink" title="下载ipfs"></a>下载ipfs</h2><p>官网因为自带网关已经封锁了，请自带梯子访问。</p><h2 id="写html"><a href="#写html" class="headerlink" title="写html"></a>写html</h2><p>请注意，在ipfs上写网页时，请尽量不要使用外链，对于js和css请直接写在网页中，图片请使用base64或上传至ipfs后使用相对链接。</p><h2 id="上传-1"><a href="#上传-1" class="headerlink" title="上传"></a>上传</h2><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-189.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>点击添加按钮，上传</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-190.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>接下来，重点来了！</p><p>ipfs分享文件有两种方式，是ipfs和ipns，前者采用文件hash辨别文件，文件内容一旦改变，原来的链接无法更新，链接格式为 <code>https://ipfs.io/ipfs/QmZCvMHrE56VqsejmG53xd9bW4RZjtFpLz46QMQjA81orL</code> ；后者采用用户id辨别,内容允许更新，但是用户在线时间过短会导致无法同步，并且有可能暴露用户信息，后者格式为： <code>https://ipfs.io/ipfs/QmQQKZphgJdEGhTp18NRvVdSJ3RJArRst2keKk3tZvmfPz?filename=index.html</code> .</p><p>如果你只是单个文件网页，此处比较建议使用ipfs，ipns可能离线时间过长导致无法下载。具体看个人所好。</p><p>ipfs链接获取：点击 <code>···</code> ,选择复制哈希，在前面加上网关域名即可。</p><p>ipns连接获取：点击 <code>···</code> ,选择分享，复制链接即可。</p><p>在科学上网的前提下访问 <code>https://ipfs.io/ipfs/QmZCvMHrE56VqsejmG53xd9bW4RZjtFpLz46QMQjA81orL</code> 显示目标界面</p><p><img src="https://ipfs.cyfan.top/ipfs/QmSGR6p5PxFJqQdEbDySG9QUpBx4WnQcVfxDPohgQ4pDoL" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt></p><blockquote><p>请注意，每次上传后一定要先访问一遍资源，否则文件是不会上传到ipfs服务器的！</p></blockquote><h2 id="CloudFlare设置"><a href="#CloudFlare设置" class="headerlink" title="CloudFlare设置"></a>CloudFlare设置</h2><p><del>不知道为什么CloudFlare的ipfs服务器有点问题，使用官方说明一直爆404 page not found，官方地址在这里<a href="https://www.cloudflare.com/distributed-web-gateway/" target="_blank" rel="noopener">https://www.cloudflare.com/distributed-web-gateway/</a> 反正我是折腾失败了。<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/lh.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif"></del></p><p>↑以上为放屁，现在来讲一下怎么正确绑定：</p><h3 id="dnslink绑定"><a href="#dnslink绑定" class="headerlink" title="dnslink绑定"></a>dnslink绑定</h3><p>这个方法无论你的dns服务商在哪都能绑定，只不过不在CloudFlare托管的用户要多一步。</p><p>1.将需要绑定的域名,以CNAME形式指向 <code>www.cloudflare-ipfs.com</code> ,比如我需要让 <code>showtime.cyfan.top</code> 成为ipfs出口，则这么设置。</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-191.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>2.使用txt记录绑定ipfs hash，新建txt记录，名字是 <code>_dnslink.yourwebsite</code> 一定要加上yourwebsite！比如我绑定的是 <code>showtime.cyfan.top</code> ，则名称一行填上 <code>_dnslink.showtime</code> !接着内容是 <code>dnslink=/ipfs/</code> 后面接上hash，比如showtimehtml的hash是： <code>QmWAvNck7QBhUAYAEgBFvbvvsMxDC9s55NXVJXeJTjTM1Y</code> 则大概这么填:</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-192.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>3.如果你本来就是托管在CloudFlare上的,到此为止就可以了,如果不是托管在Cloudflare上,类似dnspod\alicdn之类的,那还要获取证书,进入<a href="https://www.cloudflare.com/distributed-web-gateway/" target="_blank" rel="noopener">https://www.cloudflare.com/distributed-web-gateway/</a> 拉到最底下</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-193.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>输入域名，获取证书即可。</p><p><strong>但问题是，<code>www.cloudflare-ipfs.com</code> 已经被dns污染了，你用cname绑定是无法正常访问的啦！所以只能用Workers绕路啦！</strong></p><h3 id="JSProxy反代ipfs-io"><a href="#JSProxy反代ipfs-io" class="headerlink" title="JSProxy反代ipfs.io"></a>JSProxy反代ipfs.io</h3><p>老办法，Workersjsproxy反向代理ipfs网关，解决<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/wc.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif"></p><p>网址：<a href="https://showtime.cyfan.top" target="_blank" rel="noopener">https://showtime.cyfan.top</a></p><h1 id="其他的用处"><a href="#其他的用处" class="headerlink" title="其他的用处"></a>其他的用处</h1><p>我在Github上看了很多奇奇怪怪的用法，有的拿来做博客，有的拿来做网盘，有的拿来做图床，欸，真的是脑洞大开，幸好ipfs经得起折腾，越折腾他们赚的越多<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/huaji.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;IPFS，这个2018年诞生出来的小东西，似乎掀起了一阵热潮，然后被忘性极大的互联网吃瓜群众所抛弃，但不得不说这个东西可玩度非常高。&lt;/p&gt;&lt;h1 id=&quot;IPFS是什么&quot;&gt;&lt;a href=&quot;#IPFS是什么&quot; class=&quot;headerlink&quot; title=&quot;IPFS是</summary>
      
    
    
    
    <category term="爱学习" scheme="https://blog.cyfan.top/categories/爱学习/"/>
    
    
    <category term="CloudFlare" scheme="https://blog.cyfan.top/tags/CloudFlare/"/>
    
    <category term="撸羊毛" scheme="https://blog.cyfan.top/tags/撸羊毛/"/>
    
    <category term="IPFS" scheme="https://blog.cyfan.top/tags/IPFS/"/>
    
  </entry>
  
  <entry>
    <title>在不支持ipv6的路由器下使用ipv6</title>
    <link href="https://blog.cyfan.top/p/536a1a2d.html"/>
    <id>https://blog.cyfan.top/p/536a1a2d.html</id>
    <published>2020-04-05T07:34:00.000Z</published>
    <updated>2021-02-08T00:18:08.325Z</updated>
    
    <content type="html"><![CDATA[<p>从奶奶家回到城里，立刻有个问题困扰着我，我将处于没有ipv6的环境下。</p><p>拜托，都0202年了，你怎么连ipv6都没有？</p><p>因为家里情况有点小特殊，有三个路由器：</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-127.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>移动路由器网关：楼下。100Mbps。通常使用LAN口直接网线插进去，一般不用无线功能，实际上老早支持ipv6了。</p><p>小米路由器：楼下。有线连接移动网关，因为支持5GHz的WiFi，所以在楼下一般手机都是接入小米路由器。</p><p>水星路由器：楼上。有线链接移动网关，不支持5GHzWiFi，不过2.4GHz一般满足日常使用，峰值可达44Mbps，对等网速4MB/s保持的住，也就不计较速度慢了。扯淡的是由于生产日期过早，居然不支持ipv6！！！</p><p>我在楼上，身边有个2008年买来的水星路由器，这个路由器通过百兆网线链接楼下的移动网关，也就是套了两层路由器。</p><p>恼火的是，由于是2008年的产物，这破玩意是不支持ipv6的。</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-128.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>问题是，没有公网ipv6就意味着我的BTSYNC将处于疯狂的中继服务器，欸，不可忍耐。</p><p>以至于百度的ipv6都上不去。</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-129.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>甚至连自己ipv6站点都上不去。<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/huaji.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif"></p><p>这谁忍得住啊。</p><h1 id="坐下来好好想想"><a href="#坐下来好好想想" class="headerlink" title="坐下来好好想想"></a>坐下来好好想想</h1><p>之前去问过姨父，姨父是个非常屌的男人。</p><p>我问：“阿姨丈（方言称呼），怎样在不支持ipv6的路由器下使用ipv6啊，把局域网下电脑做代理可以吗？”</p><p>姨父：（一脸鄙夷地瞟了我一眼）“硬件解决不了的的事情还想用软件解决？”</p><p>好，那我就用软件解决硬件解决不了的事情！</p><p>刷固件？我不知道这种行不行的通，刚才问了一下 <a href="https://winkiller.jamjams.xyz" target="_blank" rel="noopener">winkiller</a> 刷硬件的大佬,回答是应该不行.</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-130.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>不行就不行吧,反正我也没指望刷硬件.</p><p>想一想,对了,父母那台电脑不是挺适合拿来做代理服务器吗?</p><p>思考一下:</p><ul><li><input checked disabled type="checkbox"> 我是笔记本,他们是台式电脑,他们电脑每天开机,早6:00到网上11:00一直开着,也就是我开机的时间他们绝对开着.</li><li><input checked disabled type="checkbox"> 父母根本就没有ipv6这个需求,他们最多上爱奇艺央视看视频,ipv4和ipv6是啥都不知道,不过那台机子ipv6常开.</li><li><input checked disabled type="checkbox"> 父母网速需求不大,我因为路由器一层限制速度最多4MB/s,而家里带宽是12.5MB/s,基本不会影响.</li><li><input checked disabled type="checkbox"> 楼下那台绝大多数情况是空闲的╮(╯▽╰)╭</li><li><input checked disabled type="checkbox"> 楼下那台为了方便我把它设置成静态ip了</li></ul><p>那就把父母那台机子做代理吧!</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>首先要思考拿什么做代理.</p><p>VPN?算了吧,配置太麻烦,还是SS好.</p><p>欸你没看错,没错,把父母电脑作为SS服务端.</p><p>查了查,有一个东西叫做<a href="https://github.com/shadowsocks/libQtShadowsocks/releases" target="_blank" rel="noopener">libQtShadowsocks</a></p><p>不过最新版本有点问题,于是我下载了1.10.0版</p><p>那就下载吧,为了防止楼下Github连不上去,我打包好了</p><p><a class="btn" href="https://drive.cyfan.top/shadowsocks-libqss-v1.10.0-win64.zip" target="_blank" rel="noopener">&gt;&gt;去网盘下载<br></a></p><p>解压,我的版本里已经预置了一下内容,可以修改,如果是用原版的同学请继续.</p><p>在 <code>shadowsocks-libqss.exe</code> 同目录的文件夹下新建 <code>config.json</code> ,里面填上:</p><div class="hljs"><pre><code class="hljs json">&#123;      <span class="hljs-attr">"server"</span>:<span class="hljs-string">"0.0.0.0"</span>,      <span class="hljs-attr">"server_port"</span>:<span class="hljs-number">8023</span>,      <span class="hljs-attr">"local_address"</span>:<span class="hljs-string">"127.0.0.1"</span>,      <span class="hljs-attr">"local_port"</span>:<span class="hljs-number">1080</span>,      <span class="hljs-attr">"password"</span>:<span class="hljs-string">"password"</span>,      <span class="hljs-attr">"timeout"</span>:<span class="hljs-number">600</span>,      <span class="hljs-attr">"method"</span>:<span class="hljs-string">"aes-256-cfb"</span>,      <span class="hljs-attr">"http_proxy"</span>: <span class="hljs-literal">false</span>,      <span class="hljs-attr">"auth"</span>: <span class="hljs-literal">false</span>  &#125;</code></pre></div><ul><li><code>server</code> 表示监听的ip, <code>0.0.0.0</code> 表示监听来自局域网的ip,保持默认即可</li><li><code>server_port</code> 表示监听的端口,随意,只要不被占用即可</li><li><code>password</code> 密码</li><li><code>method</code> 加密方式.</li></ul><p>上面的配置看情况修改,我这里就这样.</p><p>运行,出现个黑色框框碍眼,还报错?</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-132.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>不要紧,因为没有指定配置,在底下新建 <code>Start.vbs</code> 里面填上：</p><div class="hljs"><pre><code class="hljs vbs"><span class="hljs-keyword">Set</span> ws = <span class="hljs-built_in">CreateObject</span>(<span class="hljs-string">"Wscript.Shell"</span>)ws.run <span class="hljs-string">"shadowsocks-libqss.exe  -c config.json -S"</span>,vbhide</code></pre></div><p>双击解决,隐藏运行.</p><h2 id="开机自启"><a href="#开机自启" class="headerlink" title="开机自启"></a>开机自启</h2><p>难道每天早上我都要手动去运行?</p><p>不可能.</p><p>所以要设置开机自启动.</p><p>注册表 <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run</code>,里头新建一个字符串值,名字随意,值为vbs的绝对路径.</p><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-133.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>添加浏览器代理.</p><p>于是出现封面如此不可思议的景象.</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-134.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-188.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>完成!</p><h1 id="后言"><a href="#后言" class="headerlink" title="后言"></a>后言</h1><p>实际上原理是这样的:</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-135.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>另外,不知道是不是楼下360杀毒的锅,http链接经常不能跳转成https,导致一些网页没办法好好运行,emmm,加个HTTPSEverywhere解决问题。</p><p><a class="btn" href="https://pan.cyfan.top/%E6%8F%92%E4%BB%B6/crx/HTTPS_Everywhere.7z" target="_blank" rel="noopener">&gt;&gt;去私有云下载HTTPSEverywhere<br></a></p><p>因为代理在局域网内，速度损耗和延迟基本不计入在内，也就是全天挂在这里都没问题，想要全局笼罩建议加个Proxifier</p><p><a class="btn" href="https://drive.cyfan.top/PHPnow-1.5.6.zip" target="_blank" rel="noopener">&gt;&gt;去网盘下载Proxifier<br></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;从奶奶家回到城里，立刻有个问题困扰着我，我将处于没有ipv6的环境下。&lt;/p&gt;&lt;p&gt;拜托，都0202年了，你怎么连ipv6都没有？&lt;/p&gt;&lt;p&gt;因为家里情况有点小特殊，有三个路由器：&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://unpkg.zhimg.com/cheny</summary>
      
    
    
    
    <category term="好方法" scheme="https://blog.cyfan.top/categories/好方法/"/>
    
    
    <category term="奇淫巧技" scheme="https://blog.cyfan.top/tags/奇淫巧技/"/>
    
    <category term="网络" scheme="https://blog.cyfan.top/tags/网络/"/>
    
    <category term="ipv6" scheme="https://blog.cyfan.top/tags/ipv6/"/>
    
    <category term="代理" scheme="https://blog.cyfan.top/tags/代理/"/>
    
    <category term="SS" scheme="https://blog.cyfan.top/tags/SS/"/>
    
  </entry>
  
  <entry>
    <title>愿逝者安息，愿生者坚强</title>
    <link href="https://blog.cyfan.top/p/63180028.html"/>
    <id>https://blog.cyfan.top/p/63180028.html</id>
    <published>2020-04-04T01:00:00.000Z</published>
    <updated>2021-02-08T00:18:08.321Z</updated>
    
    <content type="html"><![CDATA[<p class="note note-primary">博客首页、项目首页将在2020年4月4日10：00至2020年4月5日10：00保持灰化界面，此篇博文永久保持灰化。</p><p>2020年的清明，与众不同，在我的记忆里，清明，永远是伴随着那蒙蒙小雨和四处弥漫的寒意。今天，2020年地清明，却意外的是晴天，这很令人意外，但也似乎表达了什么。</p><p>可能，老天的眼泪，早已哭干吧…</p><p>今年的清明比往年更添一抹特殊的意义:</p><p>一个不明源头的病毒使本应蒙上喜庆色彩的华夏大地变得毫无生机</p><p>一群可敬可爱的人儿用自己的血肉之躯筑起了护我们平安的防线</p><p>是他们日夜坚守勇敢逆行</p><p>是他们治病救人坚守一线</p><p>的确，没有什么岁月静好，只是有人在替我们负重前行罢了。</p><p>花开疫散并非一瞬间</p><p>日夜奋战才换来一座座城市恢复脉搏</p><p>为表达全国各族人民对抗击新冠肺炎疫情斗争牺牲烈士和逝世同胞的深切哀悼，国务院昨天（4月3日）发布公告，决定2020年4月4日举行全国性哀悼活动。在此期间，全国和驻外使领馆下半旗志哀，全国停止公共娱乐活动。4月4日10时起，全国人民默哀3分钟，汽车、火车、舰船鸣笛，防空警报鸣响。</p><p>下半旗….恍惚间除了2019年7月29日就是2015年,这已经很早以前了,下半旗本是领导人死后的待遇;这些疫情战士,用生命给我们换来了一片净土,自己却没能躺回去享受,毫不客气地说,他们就是这个新时代最开始的领导人,带领我们拼过最艰难的时期,下半旗,毫不为过!</p><p>可能没有他们,中国早已生灵涂炭.</p><p>感谢你们，替我们守住了这个春天</p><p>愿逝者安息，愿生者坚强</p><p>静默,悼念.</p><style>html{filter:grayscale(100%);-webkit-filter:grayscale(100%);-moz-filter:grayscale(100%);-ms-filter:grayscale(100%);-o-filter:grayscale(100%)}</style>]]></content>
    
    
      
      
    <summary type="html">&lt;p class=&quot;note note-primary&quot;&gt;博客首页、项目首页将在2020年4月4日10：00至2020年4月5日10：00保持灰化界面，此篇博文永久保持灰化。&lt;/p&gt;&lt;p&gt;2020年的清明，与众不同，在我的记忆里，清明，永远是伴随着那蒙蒙小雨和四处弥漫的寒意。今天</summary>
      
    
    
    
    <category term="随心记" scheme="https://blog.cyfan.top/categories/随心记/"/>
    
    
    <category term="悼念" scheme="https://blog.cyfan.top/tags/悼念/"/>
    
    <category term="疫情" scheme="https://blog.cyfan.top/tags/疫情/"/>
    
  </entry>
  
  <entry>
    <title>AV?BV!</title>
    <link href="https://blog.cyfan.top/p/b94b19d4.html"/>
    <id>https://blog.cyfan.top/p/b94b19d4.html</id>
    <published>2020-04-02T04:54:00.000Z</published>
    <updated>2021-02-08T00:18:08.321Z</updated>
    
    <content type="html"><![CDATA[<h1><a href="#" class="headerlink" title=":("></a>:(</h1><p>Bilibili在2020/3/23公布要将av号全面换成BV号：<a href="https://www.bilibili.com/read/cv5167957" target="_blank" rel="noopener">公告地址</a></p><blockquote><p>尊敬的各位用户：<br>一直以来，AV号都是B站视频稿件的重要标识，在视频的传播和分享中起到了关键作用。<br>为了保护稿件信息安全，容纳更多投稿，维护UP主的权益，自2020年3月23日起，AV号将全面升级为BV号。与纯数字的AV号不同，BV号是一段由数字和大小写字母组成的字符串，经过算法自动生成。未来将统一使用BV号作为稿件标识。<br>同时，2020年3月23日前生成AV号的相关功能保持不变。例如，已分享的稿件链接，AV号搜索，以及动态、评论、私信中的高亮跳转。<br>此外，用户在复制BV号或者包含BV号的链接后，打开B站APP的同时会自动跳转至该视频。<br>更多详细规则说明请见链接FAQ：<a href="https://www.bilibili.com/blackboard/activity-BV-PC.html" target="_blank" rel="noopener">https://www.bilibili.com/blackboard/activity-BV-PC.html</a><br>BV号将继续见证UP主们在这个舞台上创造无限的可能。陪伴大家的每一次灵感迸发，为每一个创意而干杯喝彩！</p></blockquote><p>这就意味着AV号将永远没落于网络世界的角落,50年后b站的AV号将成为这个年代所有人的回忆.</p><p>我当时就觉得这是扯淡,本来AV号弄的好好的为什么又要换成BV号??</p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><h2 id="AV号"><a href="#AV号" class="headerlink" title="AV号"></a>AV号</h2><p><code>AV</code> 指的是AcgVideo（动漫视频）<span class="heimu">而不是AdultVideo</span> ，目的是为了和niconico的 <code>sm</code> 号（SmileVideo）相对应。</p><p>通常AV号是按顺序的，比如前一个视频是AV10491，下一个视频如果审核通过了那一定是AV10492，绝对不可能是AV10493或AV17001，即使被删了那也是永远占了这个坑，想填都填不了， <del>排除后台操作可能性</del></p><p>AV号已经持续了将近12年的时间，具有了非常悠久的历史，b站老用户永远都不会忘记的数字。</p><h2 id="BV号"><a href="#BV号" class="headerlink" title="BV号"></a>BV号</h2><p>BV：“BilibiliVideo”，感觉和油管接轨了一样，也是一堆看似乱码的玩意</p><p>反人类设计：10位固定设计，字母数字混合，最难受的是还要<strong>区分大小写</strong>，这让线下传播视频就变得异常难受啊！！！</p><p>区分大小写意味着如果你忘记按<kbd>CapsLock</kbd>打bv,那么你就会进入一个全新世界<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/huaji.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif"></p><h1 id="坏处"><a href="#坏处" class="headerlink" title="坏处"></a>坏处</h1><h2 id="难记难打"><a href="#难记难打" class="headerlink" title="难记难打"></a>难记难打</h2><p>AV号很简洁,稿件是 <code>av</code> 前缀 加 若干位数字，一般人大都是八到十位，当然一些陈年老梗： <code>av17001</code> <img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/huaji.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif">、<code>av10492</code> <img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/yhuaji.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif">、<code>av10388</code> <img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/zhuaji.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif"> 往往就更加简洁了。</p><h4 id="以前"><a href="#以前" class="headerlink" title="以前"></a>以前</h4><p>A: 看看这个沙雕视频，香蕉哥，哈哈哈哈哈哈哈，AV号10198539</p><p>B: 1…噼里啪啦…9…噼里啪啦…3…噼里啪啦</p><p>B: 噗，哈哈哈哈哈哈哈，笑死我了</p><p>A&amp;B： 哈哈哈哈哈哈</p><h4 id="结果现在"><a href="#结果现在" class="headerlink" title="结果现在"></a>结果现在</h4><p>A: 看看这个沙雕视频，香蕉哥，哈哈哈哈哈哈哈，BV号是17小写x411大写S7小写d大写Y</p><p>B: 什么沙雕玩意，那么难打，懒得看。</p><h2 id="老是有关键字"><a href="#老是有关键字" class="headerlink" title="老是有关键字"></a>老是有关键字</h2><p>比如说av57336629（这个是虚拟的），转成BV是BV17x411R18Y，然后因为有个R18被禁了….</p><p>[当时心情真的无语了]</p><h2 id="换汤不换药"><a href="#换汤不换药" class="headerlink" title="换汤不换药"></a>换汤不换药</h2><p>AV与BV其实是<strong>互通的</strong>,只是算法极其nb,base58(这辈子就听说过base64)加一堆高大上算法,结果还是可逆的,也就是说AV号实际上永远保留下来,但是永远从外部转向内部了.</p><h2 id="分享视频必须进入b站复制bv号或者直接告知标题。"><a href="#分享视频必须进入b站复制bv号或者直接告知标题。" class="headerlink" title="分享视频必须进入b站复制bv号或者直接告知标题。"></a>分享视频必须进入b站复制bv号或者直接告知标题。</h2><p>因为记不住。</p><h2 id="著名的视频早晚会淡出视野。"><a href="#著名的视频早晚会淡出视野。" class="headerlink" title="著名的视频早晚会淡出视野。"></a>著名的视频早晚会淡出视野。</h2><p>因为记不住。</p><h2 id="新用户则会对一些老视频的梗一头雾水。"><a href="#新用户则会对一些老视频的梗一头雾水。" class="headerlink" title="新用户则会对一些老视频的梗一头雾水。"></a>新用户则会对一些老视频的梗一头雾水。</h2><p>因为他们不知道,AV已经成为历史。</p><h2 id="邻居问题"><a href="#邻居问题" class="headerlink" title="邻居问题"></a>邻居问题</h2><p>很多up主都有这样的经历,将自己视频的av号加个1或减个1,看看邻居的视频怎么样.对于自己稿件通过审核的时间也把握的清楚</p><h2 id="搞颜色"><a href="#搞颜色" class="headerlink" title="搞颜色"></a>搞颜色</h2><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-184.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-185.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>注：BlueVideo是美国黄片的俚语</p><h1 id="当然也有唯一好处"><a href="#当然也有唯一好处" class="headerlink" title="当然也有唯一好处"></a>当然也有唯一好处</h1><p>孩子:妈妈过来看看B站上的AV!</p><p><strong>啪!</strong></p><p>妈妈:小小年纪不学好, <del>和隔壁老王一样</del> 看AV!</p><hr><p>孩子:妈妈过来看看B站上的BV!</p><p>妈妈:欸,宝贝,来了~~~~</p><h1 id="究竟是为什么-让B站决定要换BV呢"><a href="#究竟是为什么-让B站决定要换BV呢" class="headerlink" title="究竟是为什么,让B站决定要换BV呢?"></a>究竟是为什么,让B站决定要换BV呢?</h1><p>网上众说纷纭,不外乎关于这几点:</p><h2 id="AV号有限-装不下了"><a href="#AV号有限-装不下了" class="headerlink" title="AV号有限,装不下了"></a>AV号有限,装不下了</h2><p>目前我觉得可能性不大,一般性int值能达到2147483647,全中国一人发个视频也勉强装得下,而且最主要的AV号和BV号是互通的,以BV1874111715为例</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-168.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>换成av号av99307985</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-169.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>这说明,av只是从明面转向暗面,实际还是存在的.</p><p>当然,我也不清楚av什么时候会永远被清除,不过我可以肯定,av在最近10年估计都不会消失,因为B站也不想让以前网上流传的b站av链接点进去变成404.</p><h2 id="反爬虫"><a href="#反爬虫" class="headerlink" title="反爬虫"></a>反爬虫</h2><p>反百度爬虫这种沙雕问题不在讨论范围内,b站估计反的是从av1到av100000000获取所有标题简介之类的爬虫.</p><p>可问题是,谁会那么蛋疼去遍历10万个视频的简介,大多数爬虫也就是遍历热搜榜的视频,这些换不换都是一样的啊.</p><h2 id="保护安全和利益"><a href="#保护安全和利益" class="headerlink" title="保护安全和利益"></a>保护安全和利益</h2><p>?????我觉得我语文阅读理解有点小问题,没读懂,有大神在评论区指导一下吗?</p><h2 id="宣扬品牌文化"><a href="#宣扬品牌文化" class="headerlink" title="宣扬品牌文化"></a>宣扬品牌文化</h2><p>其实这个解释有一定道理,但我觉得有点不必要,毕竟av号一贴别人就屁颠屁颠去b站粘贴了,换成bv还导致复制的位数更大了</p><h2 id="模仿油管"><a href="#模仿油管" class="headerlink" title="模仿油管"></a>模仿油管</h2><p>虽然经常上油管鬼混,但我非常厌恶这种行为,av号是b站独有的文化之一,说难听点,现在随意跟youtube屁股,我觉得b站有点变了味.</p><p>常用油管的朋友应该能看到，油管内部链接都是直接复制的链接，而不是一串神秘代码，这使传播视频的同时，强制向所有观众传播了油管的品牌。同样常用/s/xxx神秘代码+密码的朋友，也知道百度网盘、百度盘、百度云是一个多么不清晰的品牌概念。</p><p>以前是AV加一串数字，很是没牌面。</p><p>现在是BV加一串字母数字，看起来像一串密码，不容易记住，跟国际接轨，很有牌面。</p><h2 id="故意避免线下传播"><a href="#故意避免线下传播" class="headerlink" title="故意避免线下传播"></a>故意避免线下传播</h2><p>没什么,五星好评,这个结论我能送上天</p><h2 id="名字难听"><a href="#名字难听" class="headerlink" title="名字难听"></a>名字难听</h2><p>…好像确实是这样的</p><h1 id="转换"><a href="#转换" class="headerlink" title="转换"></a>转换</h1><p>之前提了很多次,av与bv是互通的,接下来随便说几个avbv互相转换的方法,估计有效期能很长.</p><h2 id="原生自带转换"><a href="#原生自带转换" class="headerlink" title="原生自带转换"></a>原生自带转换</h2><p>以BV1874111715</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-168.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>ChromeF12直接开挂开发者调试,选择 <code>Console</code> 控制台,输入aid</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-170.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>返回一串数字,就是av号</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-171.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>同理,对于AV视频,可以输入bvid获取那 <del>F**king</del> BV</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-172.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><ol><li>手机无法使用,当然vConsole那就不再是原生浏览器原汁原味了.</li><li>对于一些已删除和不存在(这两个是有区别的)的视频无法正常返回.</li></ol><h2 id="官方接口"><a href="#官方接口" class="headerlink" title="官方接口"></a>官方接口</h2><h3 id="AV-to-BV"><a href="#AV-to-BV" class="headerlink" title="AV to BV"></a>AV to BV</h3><p>接口: <code>https://api.bilibili.com/x/web-interface/archive/stat?aid=</code></p><p>后面跟av号码,比如99307985,输入</p><div class="hljs"><pre><code class="hljs undefined">https:<span class="hljs-regexp">//</span>api.bilibili.com<span class="hljs-regexp">/x/</span>web-interface<span class="hljs-regexp">/archive/</span>stat?aid=<span class="hljs-number">99307985</span></code></pre></div><p>返回json格式:</p><div class="hljs"><pre><code class="hljs json">&#123;<span class="hljs-attr">"code"</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">"message"</span>:<span class="hljs-string">"0"</span>,<span class="hljs-attr">"ttl"</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">"data"</span>:&#123;<span class="hljs-attr">"aid"</span>:<span class="hljs-number">99307985</span>,<span class="hljs-attr">"bvid"</span>:<span class="hljs-string">"BV1874111715"</span>,<span class="hljs-attr">"view"</span>:<span class="hljs-number">59702</span>,<span class="hljs-attr">"danmaku"</span>:<span class="hljs-number">524</span>,<span class="hljs-attr">"reply"</span>:<span class="hljs-number">1291</span>,<span class="hljs-attr">"favorite"</span>:<span class="hljs-number">1550</span>,<span class="hljs-attr">"coin"</span>:<span class="hljs-number">649</span>,<span class="hljs-attr">"share"</span>:<span class="hljs-number">134</span>,<span class="hljs-attr">"like"</span>:<span class="hljs-number">5068</span>,<span class="hljs-attr">"now_rank"</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">"his_rank"</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">"no_reprint"</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">"copyright"</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">"argue_msg"</span>:<span class="hljs-string">""</span>,<span class="hljs-attr">"evaluation"</span>:<span class="hljs-string">""</span>&#125;&#125;</code></pre></div><p>其中bvid即为bv号.</p><h3 id="BV-to-AV"><a href="#BV-to-AV" class="headerlink" title="BV to AV"></a>BV to AV</h3><p>接口: <code>https://api.bilibili.com/x/web-interface/archive/stat?bvid=</code></p><p>后面跟bv号码,比如1874111715,输入</p><div class="hljs"><pre><code class="hljs undefined">https:<span class="hljs-regexp">//</span>api.bilibili.com<span class="hljs-regexp">/x/</span>web-interface<span class="hljs-regexp">/archive/</span>stat?bvid=<span class="hljs-number">1874111715</span></code></pre></div><p>返回json格式</p><div class="hljs"><pre><code class="hljs undefined">&#123;<span class="hljs-attr">"code"</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">"message"</span>:<span class="hljs-string">"0"</span>,<span class="hljs-attr">"ttl"</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">"data"</span>:&#123;<span class="hljs-attr">"aid"</span>:<span class="hljs-number">99307985</span>,<span class="hljs-attr">"bvid"</span>:<span class="hljs-string">"BV1874111715"</span>,<span class="hljs-attr">"view"</span>:<span class="hljs-number">59704</span>,<span class="hljs-attr">"danmaku"</span>:<span class="hljs-number">524</span>,<span class="hljs-attr">"reply"</span>:<span class="hljs-number">1291</span>,<span class="hljs-attr">"favorite"</span>:<span class="hljs-number">1551</span>,<span class="hljs-attr">"coin"</span>:<span class="hljs-number">649</span>,<span class="hljs-attr">"share"</span>:<span class="hljs-number">134</span>,<span class="hljs-attr">"like"</span>:<span class="hljs-number">5068</span>,<span class="hljs-attr">"now_rank"</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">"his_rank"</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">"no_reprint"</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">"copyright"</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">"argue_msg"</span>:<span class="hljs-string">""</span>,<span class="hljs-attr">"evaluation"</span>:<span class="hljs-string">""</span>&#125;&#125;</code></pre></div><p>其中aid即为av号</p><h3 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a>缺点</h3><p>对于一些特♂殊♂の♀视♂频,av10492,则返回</p><div class="hljs"><pre><code class="hljs json">&#123;<span class="hljs-attr">"code"</span>:<span class="hljs-number">-403</span>,<span class="hljs-attr">"message"</span>:<span class="hljs-string">"访问权限不足"</span>,<span class="hljs-attr">"ttl"</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">"data"</span>:<span class="hljs-literal">null</span>&#125;</code></pre></div><h2 id="直接数据库"><a href="#直接数据库" class="headerlink" title="直接数据库"></a>直接数据库</h2><p>这个，我真的服了，方法有点傻，但我还是佩服，大家可以去知乎上看看这位大仙，在这里就不贴链接了。</p><h2 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h2><p>知乎<a href="https://www.zhihu.com/question/381784377/answer/1099055405" target="_blank" rel="noopener">mcfx的回答</a>,欸我是真的服了,下面直接照搬.</p><div class="hljs"><pre><code class="hljs python">table=<span class="hljs-string">'fZodR9XQDSUm21yCkr6zBqiveYah8bt4xsWpHnJE7jL5VG3guMTKNPAwcF'</span>tr=&#123;&#125;<span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(<span class="hljs-number">58</span>):tr[table[i]]=is=[<span class="hljs-number">11</span>,<span class="hljs-number">10</span>,<span class="hljs-number">3</span>,<span class="hljs-number">8</span>,<span class="hljs-number">4</span>,<span class="hljs-number">6</span>]xor=<span class="hljs-number">177451812</span>add=<span class="hljs-number">8728348608</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">dec</span><span class="hljs-params">(x)</span>:</span>r=<span class="hljs-number">0</span><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(<span class="hljs-number">6</span>):r+=tr[x[s[i]]]*<span class="hljs-number">58</span>**i<span class="hljs-keyword">return</span> (r-add)^xor<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">enc</span><span class="hljs-params">(x)</span>:</span>x=(x^xor)+addr=list(<span class="hljs-string">'BV1  4 1 7  '</span>)<span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(<span class="hljs-number">6</span>):r[s[i]]=table[x//<span class="hljs-number">58</span>**i%<span class="hljs-number">58</span>]<span class="hljs-keyword">return</span> <span class="hljs-string">''</span>.join(r)print(dec(<span class="hljs-string">'BV17x411w7KC'</span>))print(dec(<span class="hljs-string">'BV1Q541167Qg'</span>))print(dec(<span class="hljs-string">'BV1mK4y1C7Bz'</span>))print(enc(<span class="hljs-number">170001</span>))print(enc(<span class="hljs-number">455017605</span>))print(enc(<span class="hljs-number">882584971</span>))</code></pre></div><p>互相转换脚本，如果算法没猜错，可以保证在 av 号 <img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-183.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"> 时正确，同时应该在<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-174.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"> 时也是正确的。</p><p>此代码以 WTFPL 开源。<br>UPD：之前的代码中，所有数位都被用到是乱凑的，实际上并不需要，目前只要低 6 位就足够了。<br>（更大的 av 号需要 64 位整数存储，但是 b 站现在使用的应该还是 32 位整数，所以应该还要很久）<br>发现的方法：首先从各种渠道的信息来看，应该是 base58 编码的。设 x 是一个钦定的 av 号，查询<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-175.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful">这些 av 号对应的 bv 号，发现 bv 号的第 12、11、4、9、5 位分别会变化。所以猜测这些是 58 进制下的相应位。但是直接 base58 是不行的，所以猜测异或了一个大数，并且 base58 的字符表可能打乱了。经过实验，bv 号最低位相同的数，av 号的奇偶性相同，这一定程度上印证了之前的猜想。接下来找了一些 av 号 x，满足 x 和 x+1 对应 bv 号的第 11 位不同。设异或的数为 X，那么<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-176.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful">（<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-177.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful">表示异或）。由于 av 号（除了最新的少量视频）最多只有 27 bits，所以可以设<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-178.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful">。然后可以发现X只和<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-179.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful">和b有关，那么可以枚举这两个值（一共<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-180.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful">种情况）然后使用上面的式子检查，就能得到若干可能的<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-179.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful">和b。这里我得到的可能值如下：（左边是<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-179.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful">，右边是b）</p><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-symbol">22 </span><span class="hljs-number">90983642</span><span class="hljs-symbol">22 </span><span class="hljs-number">90983643</span><span class="hljs-symbol">50 </span><span class="hljs-number">43234084</span><span class="hljs-symbol">50 </span><span class="hljs-number">43234085</span></code></pre></div><p>有奇有偶是因为异或 1 之后也能找到轮换表。而<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-181.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful">则使得模 58 的余数刚好变成<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-182.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful">减它。我取了 b=43234084，然后处理最低位，可以得到一个字符表，即 fZodR9XQDSUm21yCkr6zBqiveYah8bt4xsWpHnJE7jL5VG3guMTKNPAwcF。对于更高位，实际上还需要知道<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-179.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful">^2,<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-179.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful">^3这些值也可以 枚举 58 次得到，最后我得到的值是<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-179.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful">^4=1749968。这时我发现，每一位的字符表是相同的（实际上只对 b=43234084 是这样的），然后再微调一下参数（上面代码中的两个 magic number 就相当于这里的a,b），最后处理了一下<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-183.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful">的情况就得到了这份代码。</p><p>讲句大实话,我根本没看懂,不过看起来好牛逼的样子.</p><h2 id="在线工具转换"><a href="#在线工具转换" class="headerlink" title="在线工具转换"></a>在线工具转换</h2><p>既然python能做到,那么js也能做到!</p><p>工具很多,知乎上一搜一大把,这里懒得贴了.</p><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><p><a href="https://greasyfork.org/zh-CN/scripts/398526-give-me-av-not-bv" target="_blank" rel="noopener">Give me AV not BV</a></p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-186.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-187.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>作者估计是个暴躁老哥,骂人骂的挺顺口的,不过脚本不错,脚本检测到地址栏的BV号会自动无刷新替换为AV号，同时会在稿件页标题下方显示原始av号。.</p><p>安装前前请安装Tampermonkey或暴力猴脚本宿主.</p><h1 id="后言"><a href="#后言" class="headerlink" title="后言"></a>后言</h1><p>也许很多人认为这没什么大不了的,不要小题大做,没意思,那你还不是照样要看b站吗?</p><p><span class="heimu">我王境泽就是饿死，死外边，从这里跳下去，不会吃你们一点东西!</span><span class="heimu"> <del>欸,真香</del></span></p><p>对啊,可是这样就给我们b站的老用户一种错觉(其实我是2017入坑的),认为b站没有重视过老用户的感受,似乎就没了这种情怀.</p><p>AV转BV,似乎暗示着B站已经逐渐去ACG化了,这很难令人不落泪,还记得当时b站发的公告吗,大用户与普通用户无异,b站可能会倒闭,但不会变味,b站永远不会添加广告.</p><p>这几条与其它氪金为主的中短视频平台的差异广告,成为了绝大多数用户入坑的原因.</p><p>现在转头看来,大用户似乎有点越权,b站可能会在我们这辈子人的孙子的孙子的孙子死后倒闭,b站的味道依旧真香,但是以前和现在总感觉多了一些孜然味,原来的味道还有,但没有那么重了.唯一不变的是没有添加添加广告,这是我依旧占坑不爬出来的原因.</p><p>AV号历史很悠久,成为b站用户必不可缺的玩意,av梗也很多,很多up辛辛苦苦等在电脑前排个号av号,如今已成为泡影;像av10492,av10388,av17001这些老梗在未来就变成无人能理解的事物,有趣而神秘.</p><p>如果BV是高管随随便便提出来没有考虑过用户的体验而是盲目跟油管风的产物,那我可以毫不犹豫骂这个东西垃圾反人类,甚至很担心从前的niconico将成为b站的翻版,希望这是也只是担心.</p><p>从此,AV号将成为我们这辈子的纪念,50年后提起AV号就变得像如今提起抗日战争,听起来刺激又有意思,但不亲身体会永远没有这种失落感.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;:(&quot;&gt;&lt;/a&gt;:(&lt;/h1&gt;&lt;p&gt;Bilibili在2020/3/23公布要将av号全面换成BV号：&lt;a href=&quot;https://www.bilibili.com/read/cv516795</summary>
      
    
    
    
    <category term="随心记" scheme="https://blog.cyfan.top/categories/随心记/"/>
    
    
    <category term="Bilibili" scheme="https://blog.cyfan.top/tags/Bilibili/"/>
    
    <category term="AV" scheme="https://blog.cyfan.top/tags/AV/"/>
    
    <category term="BV" scheme="https://blog.cyfan.top/tags/BV/"/>
    
  </entry>
  
  <entry>
    <title>PHPnow-Windows下最轻巧的PHP运行软件，没有之一</title>
    <link href="https://blog.cyfan.top/p/fb03447c.html"/>
    <id>https://blog.cyfan.top/p/fb03447c.html</id>
    <published>2020-03-29T00:20:00.000Z</published>
    <updated>2021-02-08T00:18:08.325Z</updated>
    
    <content type="html"><![CDATA[<p>虽然作为一个静态博客的博主，但是还是有调试PHP的需求，<span class="heimu">（搭建静态是因为静态博客省钱）</span>，之前用过PHPStudy，不得不说功能真的非常强大，<del>但我很多功能都不需要</del> ，而且相当吃内存，我一个笔记本主要是追求轻巧，PHPStudy一个安装包将近50MB。最头疼的是，我的80端口已经被系统监听了，无法终结，PHPStudy即使改了端口也没用，导致MySQL服务刚启动就停止的奇葩现象，害的我一年都没有好好调试过PHP。</p><p>至于这个安装包哪里来的，讲个笑话，在植物大战僵尸贴吧个人网址flash试玩版里提到：</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-143.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>然后我就把PHPnow提取出来了，一个只有20MB的PHP运行包。</p><p><a class="btn" href="https://drive.cyfan.top/PHPnow-1.5.6.zip" target="_blank" rel="noopener">&gt;&gt;去网盘下载<br></a></p><p><strong>请注意，PHPnow已经终止开发，最后一版的更新时间是2012-02-03</strong> ，默认官网是<a href="http://phpnow.org" target="_blank" rel="noopener">http://phpnow.org</a>,现在已经重定向至<a href="http://servkit.org/?from=phpnow.org" target="_blank" rel="noopener">http://servkit.org/?from=phpnow.org</a>,最高PHP是5.2.14,最高MySQL是5.1.50,框架只有Apache,最高2.2.16,并且与Windows10存在一定的bug,请仔细阅读下面的文档!</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-152.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>解压：</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-153.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>有个7z.exe说明这是个解压Package.7z包，</p><p>Win10因为有UAC，直接双击Setup.cmd有问题，右键管理员也不行，要手动启动管理员命令行，cd到相应文件夹，输入 <code>Setup</code> 安装！否则会安装失败！</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-154.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-155.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>输入22</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-156.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>输入51</p><p>接着是一番解压，不要管。</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-157.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>输入y</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-158.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-159.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>Windows10家庭版不知道为什么80端口被禁用了，所以只能选1，我这里端口为4001</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-160.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>安装，设置root密码</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-161.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>任意键后，出现以下</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-162.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>安装完成！</p><h1 id="控制面板"><a href="#控制面板" class="headerlink" title="控制面板"></a>控制面板</h1><p>安装完成后输入 <code>pncp</code> ,进入管理界面</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-163.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>下次启动输入20,关闭输入30,其它的具体看情况</p><h1 id="放入"><a href="#放入" class="headerlink" title="放入"></a>放入</h1><p>将php放入 <code>htdocs</code> 即可!</p><h1 id="测试Typecho"><a href="#测试Typecho" class="headerlink" title="测试Typecho"></a>测试Typecho</h1><p>由于版本真的很古老,安装Typecho之类的请安装0.9,安装最新版1.*会导致错误!</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-164.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-165.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>一路确认，数据库填写test，安装完成</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-166.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-167.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>毕竟是古老的php,至少笔记本跑起来真的毫无压力,作为测试环境也完全足够了.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;虽然作为一个静态博客的博主，但是还是有调试PHP的需求，&lt;span class=&quot;heimu&quot;&gt;（搭建静态是因为静态博客省钱）&lt;/span&gt;，之前用过PHPStudy，不得不说功能真的非常强大，&lt;del&gt;但我很多功能都不需要&lt;/del&gt; ，而且相当吃内存，我一个笔记本主要是</summary>
      
    
    
    
    <category term="繡软件" scheme="https://blog.cyfan.top/categories/繡软件/"/>
    
    
    <category term="PHP" scheme="https://blog.cyfan.top/tags/PHP/"/>
    
    <category term="Windows" scheme="https://blog.cyfan.top/tags/Windows/"/>
    
    <category term="精简" scheme="https://blog.cyfan.top/tags/精简/"/>
    
  </entry>
  
  <entry>
    <title>讲讲2020/3/26Github遭中间人攻击事件</title>
    <link href="https://blog.cyfan.top/p/63c84fc7.html"/>
    <id>https://blog.cyfan.top/p/63c84fc7.html</id>
    <published>2020-03-28T00:29:00.000Z</published>
    <updated>2021-02-08T00:18:08.325Z</updated>
    
    <content type="html"><![CDATA[<p><del><strong>原标题：世界上最大的男同性恋GayHub遭到443端口劫持，是人性的毁灭还是道德的扭曲？</strong></del></p><p>本博文上半篇转载【 <a href="https://blog.qwqdanchun.cn/archives/807" target="_blank" rel="noopener">https://blog.qwqdanchun.cn/archives/807</a> 】的博文，转载如下：</p><hr><hr><h1 id="转载"><a href="#转载" class="headerlink" title="转载"></a>转载</h1><h2 id="GitHub今晨遭遇大规模中间人攻击"><a href="#GitHub今晨遭遇大规模中间人攻击" class="headerlink" title="GitHub今晨遭遇大规模中间人攻击"></a>GitHub今晨遭遇大规模中间人攻击</h2><p>昨晚6，7点左右，国内访问所有的 github pages 页面开启 HTTPS 的话证书都变成下面这个</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-136.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>今晨，github.com也遭受了相同的中间人攻击</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-137.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>谷歌浏览器提示不安全</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-138.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>证书与昨晚的相同<br>疑似GitHub等网站遭到了大规模中间人攻击 。</p><p>中间人攻击（英语：Man-in-the-middle attack，缩写：MITM）在密码学和计算机安全领域中是指攻击者与通讯的两端分别创建独立的联系，并交换其所收到的数据，使通讯的两端认为他们正在通过一个私密的连接与对方直接对话，但事实上整个会话都被攻击者完全控制。在中间人攻击中，攻击者可以拦截通讯双方的通话并插入新的内容。在许多情况下这是很简单的（例如，在一个未加密的Wi-Fi 无线接入点的接受范围内的中间人攻击者，可以将自己作为一个中间人插入这个网络）。</p><p>一个中间人攻击能成功的前提条件是攻击者能将自己伪装成每一个参与会话的终端，并且不被其他终端识破。中间人攻击是一个（缺乏）相互认证的攻击。大多数的加密协议都专门加入了一些特殊的认证方法以阻止中间人攻击。例如，SSL协议可以验证参与通讯的一方或双方使用的证书是否是由权威的受信任的数字证书认证机构颁发，并且能执行双向身份认证。</p><p>简而言之，所谓的中间人攻击就是通过拦截正常的网络通信数据，并进行数据篡改和嗅探，而通信的双方却毫不知情。</p><p>奇特的是，可以实现此攻击需要劫持运营商或者dns才有可能实现，但是这种公然留qq邮箱的做法就十分迷惑</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-139.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>本账号疑似真实姓名：张勇 ，黑龙江人？？？<br>经搜索，该用户曾在 <a href="https://blog.csdn.net/yhyhyhy/article/details/51248497#comments" target="_blank" rel="noopener">https://blog.csdn.net/yhyhyhy/article/details/51248497#comments</a> 帖子下评论，csdn账户： <a href="https://me.csdn.net/blog/qq_29158525" target="_blank" rel="noopener">https://me.csdn.net/blog/qq_29158525</a> ；引出qq： 29158525</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-140.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>本账号疑似真实姓名：周言諭 ，台北人？？？</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-141.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>本账号疑似真实姓名： 谢邵 ，河南人？？？<br>据不可靠消息来源： <a href="https://www.hottg.com/liyuans/p31809.html" target="_blank" rel="noopener">https://www.hottg.com/liyuans/p31809.html</a> 此邮箱可能归属于某三位数公司？？？</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-142.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>另有v2ex老哥声称之前就看到过这个邮箱劫持其他域名</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-144.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>证书生成疑似参照此文章：<a href="https://www.lagou.com/lgeduarticle/52972.html" target="_blank" rel="noopener">https://www.lagou.com/lgeduarticle/52972.html</a>（是否参照存疑，不过原理确实相同，仅加密算法有所更改）</p><p>曾在贴吧提问： <a href="https://tieba.baidu.com/p/400626957?red_tag=3454236974" target="_blank" rel="noopener">https://tieba.baidu.com/p/400626957?red_tag=3454236974</a></p><p>从论坛其他人评论可以得到其qq群关系：</p><div class="hljs"><pre><code class="hljs undefined"><span class="hljs-section">群号:4823518 昵称:张勇</span><span class="hljs-section">群名:建三江一中同学</span><span class="hljs-section">群介绍:三江一中89级92届同学,,本届的加入,加入必须写名字!谢</span><span class="hljs-section">群号:66136842 昵称:张勇</span><span class="hljs-section">群名:亲友群</span><span class="hljs-section">群介绍:沟通</span><span class="hljs-section">群号:69386774 昵称:帅哥5号  张勇</span><span class="hljs-section">群名:帅哥靓女对对碰</span><span class="hljs-section">群介绍:命运负责洗牌，但是玩牌的是我们自己！</span><span class="hljs-section">群号:72876767 昵称:张勇</span><span class="hljs-section">群号:10456040 昵称:张勇</span><span class="hljs-section">群名:synjones</span><span class="hljs-section">群介绍:http://www.synjones.com</span><span class="hljs-section">群号:13602636 昵称:灵山-D3</span><span class="hljs-section">群名:★城东新居—D区★</span><span class="hljs-section">群介绍:哈尔滨城东新居，群策群力，共建美好家园。（有好的主张，可以发到群论坛）</span><span class="hljs-section">群号:15116517 昵称:灵山-D3</span><span class="hljs-section">群名:城东新居</span><span class="hljs-section">群介绍:小区业主维权的专家，溪畔家园业主委员会的李主任，联系电话是13069708074。大家回家</span><span class="hljs-section">群号:15376336 昵称:心即灵山</span><span class="hljs-section">群名:金龙卡服务群</span><span class="hljs-section">群介绍:内部专用</span><span class="hljs-section">群号:32068923 昵称:心即灵山</span><span class="hljs-section">群名:城东新居高级群</span><span class="hljs-section">群介绍:希望大家都能为本群和小区做一些贡献。都想一想办法，怎样能解决我们小区现存的问题。</span><span class="hljs-section">群号:19466772 昵称:我想回到以前</span><span class="hljs-section">群名:张兴庄吧</span><span class="hljs-section">群号:52260534 昵称:我想回到以前</span><span class="hljs-section">群名:巧</span><span class="hljs-section">群号:1363550 昵称:(り Remote、</span><span class="hljs-section">群名:都四班的</span><span class="hljs-section">群号:4250637 昵称:(り Remote、</span><span class="hljs-section">群名:QQ群</span><span class="hljs-section">群介绍:http://www.167cq.com/</span><span class="hljs-section">群号:70152084 昵称:谢绍。</span><span class="hljs-section">群名:国专08三班</span><span class="hljs-section">群介绍:国际经济与贸易专科0803班</span><span class="hljs-section">群号:84351791 昵称:帅气G★Remote</span><span class="hljs-section">群名:荣华09汽三</span><span class="hljs-section">群介绍:-</span><span class="hljs-section">群号:92050039 昵称:(り Remote、</span><span class="hljs-section">群名:ｖ1p&#123;會員&#125;倲.总群</span><span class="hljs-section">群号:92118193 昵称:(り Remote、</span><span class="hljs-section">群名:高楼庄⒐⑥界黄金一班</span><span class="hljs-section">群号:92637291 昵称:(り Remote、</span><span class="hljs-section">群名:小伙伴</span><span class="hljs-section">群号:95128769 昵称:(り Remote、</span><span class="hljs-section">群名:藝术学院体育部</span><span class="hljs-section">群介绍:发掘、培养体育特长学生；做好对班级的考核工作；协助其他部门开展工作。</span><span class="hljs-section">群号:6888129 昵称:(り Remote、</span><span class="hljs-section">群号:9496270 昵称:(り Remote、</span><span class="hljs-section">群名:21中</span><span class="hljs-section">群号:11604443 昵称:収惢養鮏.┊</span><span class="hljs-section">群名:安阳铁路中学高06</span><span class="hljs-section">群介绍:班级群外人勿进</span><span class="hljs-section">群号:22739863 昵称:(り Remote、</span><span class="hljs-section">群名:华□豫□学□院。</span><span class="hljs-section">群号:29121641 昵称:(り Remote、</span><span class="hljs-section">群名:乀闭丄眼﹋⒑指紧筘</span><span class="hljs-section">群号:30215035 昵称:(り Remote、</span><span class="hljs-section">群名:看群公告！好消息！</span><span class="hljs-section">群介绍:免费拿話費兩百块!群里的朋友们用手机拨打1259064212参加侣友在线答题就可以了，我今</span><span class="hljs-section">群号:32591681 昵称:(り Remote、</span><span class="hljs-section">群名:高三一班群</span><span class="hljs-section">群介绍:创建此群的目的：仅仅是为了提供朋友之间的交流。在此群里，拒绝一切色情粗俗</span><span class="hljs-section">群号:34421223 昵称:(り Remote、</span><span class="hljs-section">群名:魭滴系鲥緔</span><span class="hljs-section">群介绍:IC，IP．IQ卡，通通告诉我密码！！</span><span class="hljs-section">群号:38607494 昵称:(り Remote、</span><span class="hljs-section">群名:ωǒ錯了？</span><span class="hljs-section">群介绍:莪們都昰好孩孓。异想’兲開徳孩孒︶￣~°</span><span class="hljs-section">群号:56483925 昵称:谢邵。</span><span class="hljs-section">群名:国专0803班</span><span class="hljs-section">群介绍:国专0803</span></code></pre></div><p>总结：其人曾用qq：346608453，29158525，23853637；地址等不明，有代码基础，有能力实现本次攻击，疑似qq都是盗来的，无法确定本人身份</p><h2 id="最后提醒："><a href="#最后提醒：" class="headerlink" title="最后提醒："></a>最后提醒：</h2><p>《中华人民共和国刑法》第二百八十六条 违反国家规定，对计算机信息系统功能进行删除、修改、增加、干扰，造成计算机信息系统不能正常运行，后果严重的，处五年以下有期徒刑或者拘役；后果特别严重的，处五年以上有期徒刑。</p><p>违反国家规定，对计算机信息系统中存储、处理或者传输的数据和应用程序进行删除、修改、增加的操作，后果严重的，依照前款的规定处罚。</p><p>千万要知法守法，技术无罪，但是拿来做坏事可是要被抓进去的哦</p><h2 id="11：03前来更新"><a href="#11：03前来更新" class="headerlink" title="11：03前来更新"></a>11：03前来更新</h2><p>攻击者换了一个证书，新的邮箱为 <a href="mailto:1396060845037@mymail.com" target="_blank" rel="noopener">1396060845037@mymail.com</a> ，截图如下</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-145.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>第一个qq里的网址可能是因为这个qq是盗的，如果这样的话，几个qq之间没有联系也就正常了</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-146.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><h2 id="可能是最后的更新（2020-3-28-9：38）"><a href="#可能是最后的更新（2020-3-28-9：38）" class="headerlink" title="可能是最后的更新（2020/3/28 9：38）"></a>可能是最后的更新（2020/3/28 9：38）</h2><p>昨天文章写的有些急，也受了一些言论的误导，出现了一处错误，csdn的昵称后缀是随机生成的，因此推出来的后两个qq号与此无关。而在昨晚，该用户修改签名为：“QQ号码被盗，现已恢复”，并在随后关闭空间（确实很多老哥前去轰炸），这一波貌似洗白的操作却是疑点重重。</p><p>首先，大家基本已经认为这个号是被盗的了，但是号主现身就有些奇妙，作为一个 从事软件开发工作近 16 年（ CSDN 介绍 ）的人，被长时间盗号，却不找回或无法找回，突然出事了便轻松找回，可能性？？？</p><p>而且，这样的话，另一个昨天没用到的点就有意思了，928天 qq达人，如果是盗号，那盗号的人也是把这个号当大号用了叭。这样我们可以假设确实被盗号，那么如果明天达人就该断了叭。找回了一个三年多没用的号，发完解释还会占着手机那一个qq登录的位置吗，大概率不会。而如果不是盗号，咳咳，那这位张勇兄弟大概就是真的勇了叭，哈哈。</p><p>其实说了这么多，就是我们这些GitHub重度用户，想要一个合理的解释，不管是有些人猜测的G||F||//，还是一线小兵误操作，抑或是黑客在家闲极无聊等等。如果是误操作或被黑，大家就当吃瓜一场，就算是墙的问题，我们也好提前搬好仓库吧。</p><hr><hr><p>好的，视线转回来，我要开始bb了。</p><p>刚开始知道这件事还是我的好<span class="heimu">基</span>友 <a href="https://blog.say521.cn" target="_blank" rel="noopener">奥秘Sir</a> QQ空间里的转载:</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-147.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>哦，发生了什么？</p><p>于是拿着QQ号去网上一找，冷汗直流：</p><p>这个QQ号的主人在2020/3/26通过手段劫持了Github、CloudflareCDN、京东网站，不过证书有问题被截下来了。</p><p>为什么冷汗直流？因为我全站绑定在Github+CloudFlare上，那岂不是我也被影响了吗？</p><p>至于为什么我没有察觉到,是因为3/26-3/27我在认真学习,没有上github<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/huaji.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif"></p><p>后来查找了一下，这次攻击只是影响了国内的互联网，CloudFlare劫持也只是针对美国那几个节点。</p><p>正好，上次嫌美国节点慢，通过自代理的方式节点到香港线，也就是我和攻击玩了个擦边球。</p><p>于是我就放心了.</p><p>但这次攻击不是一般的诡异，有很多疑点，当我松了一口气后又觉得不对，请听我慢慢讲解：</p><h1 id="1-本次攻击并非DNS劫持，而是中间人劫持"><a href="#1-本次攻击并非DNS劫持，而是中间人劫持" class="headerlink" title="1.本次攻击并非DNS劫持，而是中间人劫持"></a>1.本次攻击并非DNS劫持，而是中间人劫持</h1><p>DNS劫持那是G||F||\/\/的老把戏了,如果这一次这三家遭到DNS劫持,也许我也就懒得说了,毕竟这已经见怪不怪了，手动绕开来就可以了。</p><p>但是这一次，是七层精准劫持,也许这个名词不懂,那就是<strong>中间人攻击特定端口</strong>.</p><h2 id="什么是中间人"><a href="#什么是中间人" class="headerlink" title="什么是中间人?"></a>什么是中间人?</h2><p><strong>MITM</strong>,全称Man-in-the-middle attack,这种攻击在一定程度上能突破HTTPS,通俗的来讲是这样的:</p><p>先说正常https传输:</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-148.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>这种加密方式叫<strong>非对称加密</strong>,应用的很广泛,至于为什么要用非对称加密而不用对称加密,这不是这里该讨论的.</p><p>假设有个黑客,想要窃取他们之间的信息:</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-149.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>为什么毫无卵用?因为,非对称加密有个特点,<strong>用公钥加密的东西就不能用公钥解密了</strong>,而公钥是公开的.</p><p>但是,这样还有攻击的方式:</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-150.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>这种黑客卡中间的方式,叫<strong>中间人攻击</strong>.</p><p>而且这种攻击,做的好就可以神不知鬼不觉窃听通话<strong>甚至篡改内容</strong>,最惨的是你都不知道被窃听了,用户和服务器都以为自己和对方直接通话,这才是最阴险的地方.解决办法只有HSTS。</p><p>至于用户是怎么被误导到黑客的,这就相当有意思,这就是路由污染,我们所说的ip查找,其实没有说有ip就可以直接找到对方了,还是要经过路由的.</p><p>比如说我第一次上百度（假设沿途完全没有缓存）:baidu.com,真正完整的经过是这样的</p><ol><li>电脑查找hosts,没有baidu</li><li>电脑于是向DNS（假如是8.8.8.8）发送请求包，问baidu.com在哪？</li><li>8.8.8.8这台服务器查了查，没有缓存，于是回头和我说稍等，自己去联系.com服务器</li><li>.com服务器查了查,和8.8.8.8说,你去北京I根域名服务器找,我这里没有缓存</li><li>于是8.8.8.8又屁颠屁颠去北京I根域名服务器找NS记录,I根查了查,你去ns1.baidu.com找,它的ip是202.108.22.220</li><li>于是8.8.8.8回来跟我说,nameserver是202.108.22.220</li><li>于是我去202.108.22.220,向上一级路由(我的路由器)问202.108.22.220在哪?</li><li>路由器不知道,于是向上一级询问</li><li>上一级返回给我的路由器稍等,自己还要去上上级查询,我这里是117.149.*.*<br>(此处省略17步路由查询)</li><li>最终,层层路由查询告诉我,ip202.108.22.220在北京联通,我帮你找到了</li><li>发个握手包,连接,返回baidu.com的ip 39.156.69.79</li><li>又一次经历7-10步，我与百度连接成功<br>||完了？嘿嘿，其实还没完</li><li>百度301重定向将我从 <code>baidu.com</code> 定向到 <code>www.baidu.com</code></li><li>又一次经历1-10步,最终,百度界面华丽丽地展开来.</li></ol><p>那么,中间的路由查询变得很有意思,如果我在骨干网那么干,故意把 <code>github.io</code> 路由到我的服务器上,是不是所有人都被劫持了?</p><p>很不巧,这一次真的就是那么干的.</p><h1 id="2-只劫持443端口-没有劫持80端口"><a href="#2-只劫持443端口-没有劫持80端口" class="headerlink" title="2.只劫持443端口,没有劫持80端口"></a>2.只劫持443端口,没有劫持80端口</h1><p>有人curl一下github.io,80端口TTL是51,443就变成56了<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/ld.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif"></p><p>更nb是，有人ping了一下github.io:80和github.io:443,前者延迟280ms,丢包率25%,后者延迟20ms,不丢包<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/dy.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif">.</p><p>所以这玩意还能降低延迟?</p><p>我笑了.</p><p>更厉害的是,由于是中间人攻击,有网友说如果信任证书还能上github,不过速度很慢.</p><p>也对,谁叫他手贱修改了全国路由,现在他的服务器正在遭受全国的DDoS.</p><p>敢情难道是他想给全国人民一个惊喜,反向代理gihub以提高访问速度?</p><h1 id="3-留下QQ邮箱"><a href="#3-留下QQ邮箱" class="headerlink" title="3.留下QQ邮箱"></a>3.留下QQ邮箱</h1><p>【以一己之力攻击国家骨干网污染三个大网站的路由】和【留下自己的QQ邮箱】，干这两件事情的真的是同一个人吗？？？？？</p><p>有人说这是仿照一篇文章伪造的，文章什么我就懒得贴了，反正伪造证书这种事情我也不会( ﹁ ﹁ ) ~→</p><p>但是，能攻击国家骨干网却拿了个自签名的证书攻击，这种事情都可以上诡异录了，唯一的解释可能是混淆视听，或者是大攻击前的试水，亦或是真的QQ被盗了，来当个替罪羊。</p><h1 id="4-声称自己QQ被盗"><a href="#4-声称自己QQ被盗" class="headerlink" title="4.声称自己QQ被盗"></a>4.声称自己QQ被盗</h1><p>这是QQ对应的空间，3/27晚上已无法正常访问，这是之前截图的：</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-151.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><h1 id="5-同时攻击了京东和CloudFlare"><a href="#5-同时攻击了京东和CloudFlare" class="headerlink" title="5.同时攻击了京东和CloudFlare"></a>5.同时攻击了京东和CloudFlare</h1><p>如果说只攻击了Github，那我能肯定，多半是G||F||\/\/技术人员手动失误,但你把京东给搞了,我觉得这……没搞懂啊,所以这真的可能是试水咯?</p><h1 id="6-初学者"><a href="#6-初学者" class="headerlink" title="6.初学者?"></a>6.初学者?</h1><p>网上有很多人说这是个初学者,想测试一下,没想到惹出那么大的事情.</p><p>好啊,初学者随随便便搞塌国内Github京东CF,再学一点签个真实证书,下次干脆把gov.cn全站劫持了,是不是这样才能让zf了解到https的重要性.</p><p>如果真的是初学者,那么从侧面就可以讽刺我国网络安全堪忧啊.</p><p>教练,我想学这个.<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/zcbg.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif"></p><h1 id="7-这么值得报道的新闻，官媒毫无反应"><a href="#7-这么值得报道的新闻，官媒毫无反应" class="headerlink" title="7.这么值得报道的新闻，官媒毫无反应"></a>7.这么值得报道的新闻，官媒毫无反应</h1><p>我觉得这就很有意思了，我不说，大家应该知道为什么</p><h1 id="后言"><a href="#后言" class="headerlink" title="后言"></a>后言</h1><p>关于这次被攻击，为什么Github错误页面会被显示呢？</p><p>1.Github开了HSTS，匹配的头字符不对，浏览器直接拦截，连<kbd>忽略警告,继续访问</kbd>这样的字符都没有,吓得我赶紧给我全站开了HSTS.<br>2.证书是个自签名,按理说能攻击骨干网的大佬伪造个证书应该很容易,为什么用了这个呢?</p><p>另外，以国内的环境，大家上Github扔代码一定要用SSH，因为SSH双方是强加密的，可以预防中间人攻击！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;del&gt;&lt;strong&gt;原标题：世界上最大的男同性恋GayHub遭到443端口劫持，是人性的毁灭还是道德的扭曲？&lt;/strong&gt;&lt;/del&gt;&lt;/p&gt;&lt;p&gt;本博文上半篇转载【 &lt;a href=&quot;https://blog.qwqdanchun.cn/archives/807</summary>
      
    
    
    
    <category term="随心记" scheme="https://blog.cyfan.top/categories/随心记/"/>
    
    
    <category term="CloudFlare" scheme="https://blog.cyfan.top/tags/CloudFlare/"/>
    
    <category term="Github" scheme="https://blog.cyfan.top/tags/Github/"/>
    
    <category term="网络" scheme="https://blog.cyfan.top/tags/网络/"/>
    
    <category term="京东" scheme="https://blog.cyfan.top/tags/京东/"/>
    
    <category term="劫持" scheme="https://blog.cyfan.top/tags/劫持/"/>
    
    <category term="安全" scheme="https://blog.cyfan.top/tags/安全/"/>
    
  </entry>
  
  <entry>
    <title>一次“修”冰箱的经历</title>
    <link href="https://blog.cyfan.top/p/75fc481.html"/>
    <id>https://blog.cyfan.top/p/75fc481.html</id>
    <published>2020-03-26T00:01:00.000Z</published>
    <updated>2021-02-08T00:18:08.325Z</updated>
    
    <content type="html"><![CDATA[<p>奶奶家有一台2年前买到的美的智能冰箱，当时买过来时因为在清仓，花了800块。后来出了点小问题停用了，闲置了1年。今年疫情，我只能窝在奶奶家，<span class="heimu">这个孙子又特别能吃</span>,所以只能重新启用了这台冰箱.</p><p>但是开始用的时候就出了点问题,不知道是不是放久了,冰箱两个按键短路了<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/huaji.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif">.</p><p>短路也就罢了,关键是这冰箱有安全锁，10秒钟不操作就锁住了，如果在锁住的时候试图操纵，冰箱蜂鸣器就会B~~~~~一声,锁键就会闪烁表示不允许操作;</p><p>结果现在这台冰箱变成电音演奏者了,短路短的很有节奏;而且最重要的是这安全锁没办法彻底禁用…<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/dhuaji.gif" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif">.</p><p>最重要的是这蜂鸣器非常响亮,冰箱在一楼,我在三楼睡觉都能听的清清楚楚<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/qgbf.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif">.</p><p>而且家里必须要用这台冰箱，不用不行。</p><p>以前上去扇两巴掌就安静了，最近变<span class="heimu">屌</span>了，怎么扇都没用了。欸，好生生的智能冰箱变成智障冰箱了。这设计者是怎么想的。 <img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/whks.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif">.</p><p>最致命的是如果修就要回厂重修，费用200元，那还不如不修呢<br><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/fn.gif" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif"></p><p>至于为什么解决是因为这货不识像,在晚上吃饭的时候在我耳边响.<img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/moji/s.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif">，怎么响我也就忍了，在我耳边响，不好意思,我上去用力一扣,把整个面板扣了下来.后面有一束线连着,仔细一看是可插拔的,使劲一拔:</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-127.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>欸，整个世界都安静了。</p><p>安心吃完饭，我拿着面板上楼了，现在必须要修理一下，否则没面板这个冰箱是不能运行的。</p><h1 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h1><p>我思考了一下，为什么它会发出恼人的声音呢？</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-131.png" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>简单思考一下，解决短路我觉得是不可能的，把安全锁彻底解除也没有办法，</p><p>一、我没有螺丝刀<br>二、短路具体在哪我也不知道<br>三、解锁键没有短路，安全锁不可能解除，所以不会乱调温<br>四、这台冰箱没有解锁的需求</p><p>所以最经济最治标不治本的方法就是把蜂鸣器破坏掉。</p><h1 id="观察"><a href="#观察" class="headerlink" title="观察"></a>观察</h1><p>背面：</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-128.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>侧面：</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-129.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>这是六针接口，待会儿从这里重新插进去。</p><p>观察了一下，很快就确定了蜂鸣器的位置：</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-130.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>（虚化没做好，请见谅）</p><p>以前拆过计算器，发出声音的就是这个玩意。</p><p>拿了把剪刀，伸进去，夹住，弄两下就下来了：</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-132.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>这是蜂鸣器的三张特写：</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-133.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-134.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>蜂鸣器设计者还是用心的，起码标注了正极在哪：</p><p><img src="https://unpkg.zhimg.com/chenyfan-oss@1.0.0/pic/post/pasted-135.jpg" srcset="https://cdn.jsdelivr.net/gh/ChenYFan/blog@master/themes/fluid/source/img/loading.gif" alt="upload successful"></p><p>搞定，下去重新插上去，接着不管怎么闪烁、怎么按，它都不会响啦！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;奶奶家有一台2年前买到的美的智能冰箱，当时买过来时因为在清仓，花了800块。后来出了点小问题停用了，闲置了1年。今年疫情，我只能窝在奶奶家，&lt;span class=&quot;heimu&quot;&gt;这个孙子又特别能吃&lt;/span&gt;,所以只能重新启用了这台冰箱.&lt;/p&gt;&lt;p&gt;但是开始用的时候就</summary>
      
    
    
    
    <category term="随心记" scheme="https://blog.cyfan.top/categories/随心记/"/>
    
    
    <category term="冰箱" scheme="https://blog.cyfan.top/tags/冰箱/"/>
    
    <category term="动手实践" scheme="https://blog.cyfan.top/tags/动手实践/"/>
    
    <category term="修理" scheme="https://blog.cyfan.top/tags/修理/"/>
    
    <category term="电器" scheme="https://blog.cyfan.top/tags/电器/"/>
    
  </entry>
  
</feed>
